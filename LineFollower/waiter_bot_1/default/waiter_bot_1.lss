
waiter_bot_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000116  00800060  00001692  00001726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800176  00800176  0000183c  2**0
                  ALLOC
  3 .debug_aranges 00000220  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000033b  00000000  00000000  00001a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002fef  00000000  00000000  00001d97  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001a07  00000000  00000000  00004d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000019de  00000000  00000000  0000678d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002f0  00000000  00000000  0000816c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000489  00000000  00000000  0000845c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d9c  00000000  00000000  000088e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00009681  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e9       	ldi	r30, 0x92	; 146
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 38       	cpi	r26, 0x86	; 134
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 84 02 	call	0x508	; 0x508 <main>
      8a:	0c 94 47 0b 	jmp	0x168e	; 0x168e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <InitADC>:
//#include<motor.h>
//#include<led.h>

void InitADC()
{
	ADMUX=(1<<REFS0);                                  	// For Aref=AVcc;
      92:	80 e4       	ldi	r24, 0x40	; 64
      94:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);    //Prescalar div factor =128
      96:	87 e8       	ldi	r24, 0x87	; 135
      98:	86 b9       	out	0x06, r24	; 6

}
      9a:	08 95       	ret

0000009c <ReadADC>:
*/
uint16_t ReadADC(uint8_t ch)
{
	//Select ADC Channel ch must be 0-7
	ch=ch&0b00000111;
	ADMUX&=0b11100000;
      9c:	97 b1       	in	r25, 0x07	; 7
      9e:	90 7e       	andi	r25, 0xE0	; 224
      a0:	97 b9       	out	0x07, r25	; 7
	ADMUX|=ch;
      a2:	97 b1       	in	r25, 0x07	; 7
      a4:	87 70       	andi	r24, 0x07	; 7
      a6:	89 2b       	or	r24, r25
      a8:	87 b9       	out	0x07, r24	; 7

	//Start Single conversion
	ADCSRA|=(1<<ADSC);
      aa:	36 9a       	sbi	0x06, 6	; 6

	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
      ac:	34 9b       	sbis	0x06, 4	; 6
      ae:	fe cf       	rjmp	.-4      	; 0xac <ReadADC+0x10>

	//Note you may be wondering why we have write one to clear it
	//This is standard way of clearing bits in io as said in datasheets.
	//The code writes '1' but it result in setting bit to '0' !!!

	ADCSRA|=(1<<ADIF);
      b0:	34 9a       	sbi	0x06, 4	; 6

	return(ADC);
      b2:	24 b1       	in	r18, 0x04	; 4
      b4:	35 b1       	in	r19, 0x05	; 5
}
      b6:	c9 01       	movw	r24, r18
      b8:	08 95       	ret

000000ba <MotorInit>:
{
	#ifdef XBOARD2

	//set up pwm for speed control

	TCCR1A=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM10);
      ba:	81 ea       	ldi	r24, 0xA1	; 161
      bc:	8f bd       	out	0x2f, r24	; 47

	//clk=fcpu/64

	TCCR1B=(1<<CS11)|(1<<CS10);
      be:	83 e0       	ldi	r24, 0x03	; 3
      c0:	8e bd       	out	0x2e, r24	; 46

	//Set the corresponding port pin to output

	DDR(OC1A_PORT)|=(1<<OC1A_PIN);
      c2:	b9 9a       	sbi	0x17, 1	; 23
	DDR(OC1B_PORT)|=(1<<OC1B_PIN);
      c4:	ba 9a       	sbi	0x17, 2	; 23

	//Set the direction control PINs to OUT
	DDRD|=0X0F;	//PC0 to PC3 as output
      c6:	81 b3       	in	r24, 0x11	; 17
      c8:	8f 60       	ori	r24, 0x0F	; 15
      ca:	81 bb       	out	0x11, r24	; 17
	DDRA|=(0x0F);
	
	#endif
	

}
      cc:	08 95       	ret

000000ce <MotorA>:
	Other Constants for direction are
	MOTOR_CCW and MOTOR_STOP

***********************************************************/
void MotorA(uint8_t dir,uint8_t speed)//LEFT
{
      ce:	1f 93       	push	r17
	#ifdef XBOARD2
	//Direction
	if(dir == MOTOR_STOP)
      d0:	88 23       	and	r24, r24
      d2:	19 f4       	brne	.+6      	; 0xda <MotorA+0xc>
	{
		PORTD&=(~(1<<PD0));
      d4:	90 98       	cbi	0x12, 0	; 18
		PORTD&=(~(1<<PD1));
      d6:	91 98       	cbi	0x12, 1	; 18
      d8:	09 c0       	rjmp	.+18     	; 0xec <MotorA+0x1e>
	}

	else if(dir == MOTOR_CCW)
      da:	82 30       	cpi	r24, 0x02	; 2
      dc:	19 f4       	brne	.+6      	; 0xe4 <MotorA+0x16>
	{
		PORTD&=(~(1<<PD0));
      de:	90 98       	cbi	0x12, 0	; 18
		PORTD|=(1<<PD1);
      e0:	91 9a       	sbi	0x12, 1	; 18
      e2:	04 c0       	rjmp	.+8      	; 0xec <MotorA+0x1e>
	}
	else if(dir == MOTOR_CW)
      e4:	81 30       	cpi	r24, 0x01	; 1
      e6:	11 f4       	brne	.+4      	; 0xec <MotorA+0x1e>
	{
		PORTD&=(~(1<<PD1));
      e8:	91 98       	cbi	0x12, 1	; 18
		PORTD|=(1<<PD0);
      ea:	90 9a       	sbi	0x12, 0	; 18
	}

	//Speed
	uint8_t sreg=SREG;
      ec:	1f b7       	in	r17, 0x3f	; 63

	cli();
      ee:	f8 94       	cli

	OCR1A=(uint8_t)(((float)speed/255.0)*ROBO_SPEED);
      f0:	70 e0       	ldi	r23, 0x00	; 0
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	0e 94 a2 08 	call	0x1144	; 0x1144 <__floatunsisf>
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	4f e7       	ldi	r20, 0x7F	; 127
     100:	53 e4       	ldi	r21, 0x43	; 67
     102:	0e 94 54 06 	call	0xca8	; 0xca8 <__divsf3>
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	30 e0       	ldi	r19, 0x00	; 0
     10a:	48 e4       	ldi	r20, 0x48	; 72
     10c:	53 e4       	ldi	r21, 0x43	; 67
     10e:	0e 94 5a 05 	call	0xab4	; 0xab4 <__mulsf3>
     112:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     116:	70 e0       	ldi	r23, 0x00	; 0
     118:	7b bd       	out	0x2b, r23	; 43
     11a:	6a bd       	out	0x2a, r22	; 42

	SREG=sreg;
     11c:	1f bf       	out	0x3f, r17	; 63

	//Speed
	OCR5AL=(uint8_t)(((float)speed/255.0)*ROBO_SPEED);
	#endif
	
}
     11e:	1f 91       	pop	r17
     120:	08 95       	ret

00000122 <MotorB>:
	Other Constants for direction are
	MOTOR_CCW and MOTOR_STOP

***********************************************************/
void MotorB(uint8_t dir,uint8_t speed)//RIGHT
{
     122:	1f 93       	push	r17
	#ifdef XBOARD2
	//Direction
	if(dir == MOTOR_STOP)
     124:	88 23       	and	r24, r24
     126:	19 f4       	brne	.+6      	; 0x12e <MotorB+0xc>
	{
		PORTD&=(~(1<<PD2));
     128:	92 98       	cbi	0x12, 2	; 18
		PORTD&=(~(1<<PD3));
     12a:	93 98       	cbi	0x12, 3	; 18
     12c:	09 c0       	rjmp	.+18     	; 0x140 <MotorB+0x1e>
	}

	else if(dir == MOTOR_CCW)
     12e:	82 30       	cpi	r24, 0x02	; 2
     130:	19 f4       	brne	.+6      	; 0x138 <MotorB+0x16>
	{
		PORTD&=(~(1<<PD2));
     132:	92 98       	cbi	0x12, 2	; 18
		PORTD|=(1<<PD3);
     134:	93 9a       	sbi	0x12, 3	; 18
     136:	04 c0       	rjmp	.+8      	; 0x140 <MotorB+0x1e>
	}
	else if(dir == MOTOR_CW)
     138:	81 30       	cpi	r24, 0x01	; 1
     13a:	11 f4       	brne	.+4      	; 0x140 <MotorB+0x1e>
	{
		PORTD&=(~(1<<PD3));
     13c:	93 98       	cbi	0x12, 3	; 18
		PORTD|=(1<<PD2);
     13e:	92 9a       	sbi	0x12, 2	; 18
	}

	//Speed
	uint8_t sreg=SREG;
     140:	1f b7       	in	r17, 0x3f	; 63

	cli();
     142:	f8 94       	cli

	OCR1B=(uint8_t)(((float)speed/255.0)*ROBO_SPEED);
     144:	70 e0       	ldi	r23, 0x00	; 0
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	0e 94 a2 08 	call	0x1144	; 0x1144 <__floatunsisf>
     14e:	20 e0       	ldi	r18, 0x00	; 0
     150:	30 e0       	ldi	r19, 0x00	; 0
     152:	4f e7       	ldi	r20, 0x7F	; 127
     154:	53 e4       	ldi	r21, 0x43	; 67
     156:	0e 94 54 06 	call	0xca8	; 0xca8 <__divsf3>
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	48 e4       	ldi	r20, 0x48	; 72
     160:	53 e4       	ldi	r21, 0x43	; 67
     162:	0e 94 5a 05 	call	0xab4	; 0xab4 <__mulsf3>
     166:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	79 bd       	out	0x29, r23	; 41
     16e:	68 bd       	out	0x28, r22	; 40

	SREG=sreg;
     170:	1f bf       	out	0x3f, r17	; 63
	}

	//Speed
	OCR5BL=(uint8_t)(((float)speed/255.0)*ROBO_SPEED);
	#endif
}
     172:	1f 91       	pop	r17
     174:	08 95       	ret

00000176 <LEDInit>:


void LEDInit()
{
	//Make i/o pins as output type
	DDRD|=(0Xf0);
     176:	81 b3       	in	r24, 0x11	; 17
     178:	80 6f       	ori	r24, 0xF0	; 240
     17a:	81 bb       	out	0x11, r24	; 17
	DDRB|=(1<<PB0);
     17c:	b8 9a       	sbi	0x17, 0	; 23
	
	//Make them high to turn off led.
	PORTD|=(0Xf0);
     17e:	82 b3       	in	r24, 0x12	; 18
     180:	80 6f       	ori	r24, 0xF0	; 240
     182:	82 bb       	out	0x12, r24	; 18
	PORTB|=(1<<PB0);
     184:	c0 9a       	sbi	0x18, 0	; 24
}
     186:	08 95       	ret

00000188 <LEDOff>:

void LEDOff(uint8_t id)
{
	if(id>5) return;
     188:	86 30       	cpi	r24, 0x06	; 6
     18a:	a8 f4       	brcc	.+42     	; 0x1b6 <LEDOff+0x2e>
	
	id=6-id;
     18c:	26 e0       	ldi	r18, 0x06	; 6
     18e:	28 1b       	sub	r18, r24
	
	if(id==1)
     190:	21 30       	cpi	r18, 0x01	; 1
     192:	11 f4       	brne	.+4      	; 0x198 <LEDOff+0x10>
	{
		PORTB|=(1<<PB0);
     194:	c0 9a       	sbi	0x18, 0	; 24
     196:	08 95       	ret
	}
	else if(id<=5)
     198:	26 30       	cpi	r18, 0x06	; 6
     19a:	69 f0       	breq	.+26     	; 0x1b6 <LEDOff+0x2e>
	{
		PORTD|=(1<<(2+id));
     19c:	42 b3       	in	r20, 0x12	; 18
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	2e 5f       	subi	r18, 0xFE	; 254
     1a2:	3f 4f       	sbci	r19, 0xFF	; 255
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <LEDOff+0x26>
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	2a 95       	dec	r18
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <LEDOff+0x22>
     1b2:	48 2b       	or	r20, r24
     1b4:	42 bb       	out	0x12, r20	; 18
     1b6:	08 95       	ret

000001b8 <LEDOn>:
	}
}

void LEDOn(uint8_t id)
{
	if(id>5) return;
     1b8:	86 30       	cpi	r24, 0x06	; 6
     1ba:	b0 f4       	brcc	.+44     	; 0x1e8 <LEDOn+0x30>
	
	id=6-id;
     1bc:	26 e0       	ldi	r18, 0x06	; 6
     1be:	28 1b       	sub	r18, r24
	
	if(id==1)
     1c0:	21 30       	cpi	r18, 0x01	; 1
     1c2:	11 f4       	brne	.+4      	; 0x1c8 <LEDOn+0x10>
	{
		PORTB&=~(1<<PB0);
     1c4:	c0 98       	cbi	0x18, 0	; 24
     1c6:	08 95       	ret
	}
	else if(id<=5)
     1c8:	26 30       	cpi	r18, 0x06	; 6
     1ca:	71 f0       	breq	.+28     	; 0x1e8 <LEDOn+0x30>
	{
		PORTD&=~(1<<(2+id));
     1cc:	42 b3       	in	r20, 0x12	; 18
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	2e 5f       	subi	r18, 0xFE	; 254
     1d2:	3f 4f       	sbci	r19, 0xFF	; 255
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	02 c0       	rjmp	.+4      	; 0x1de <LEDOn+0x26>
     1da:	88 0f       	add	r24, r24
     1dc:	99 1f       	adc	r25, r25
     1de:	2a 95       	dec	r18
     1e0:	e2 f7       	brpl	.-8      	; 0x1da <LEDOn+0x22>
     1e2:	80 95       	com	r24
     1e4:	84 23       	and	r24, r20
     1e6:	82 bb       	out	0x12, r24	; 18
     1e8:	08 95       	ret

000001ea <DelayMs>:
		sprev=s;
	}
}

void DelayMs(uint8_t ms)
{
     1ea:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ec:	2a ef       	ldi	r18, 0xFA	; 250
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	04 c0       	rjmp	.+8      	; 0x1fa <DelayMs+0x10>
     1f2:	f9 01       	movw	r30, r18
     1f4:	31 97       	sbiw	r30, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <DelayMs+0xa>
	uint8_t i;
	for(i=0;i<ms;i++)
     1f8:	9f 5f       	subi	r25, 0xFF	; 255
     1fa:	98 17       	cp	r25, r24
     1fc:	d0 f3       	brcs	.-12     	; 0x1f2 <DelayMs+0x8>
	{
		_delay_ms(1);
	}
}
     1fe:	08 95       	ret

00000200 <PID>:

//Implements PID control
float PID(float cur_value,float req_value)
{
     200:	6f 92       	push	r6
     202:	7f 92       	push	r7
     204:	8f 92       	push	r8
     206:	9f 92       	push	r9
     208:	af 92       	push	r10
     20a:	bf 92       	push	r11
     20c:	cf 92       	push	r12
     20e:	df 92       	push	r13
     210:	ef 92       	push	r14
     212:	ff 92       	push	r15
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	7b 01       	movw	r14, r22
     21a:	8c 01       	movw	r16, r24
	float pid;
	float error;

	error = req_value - cur_value;
     21c:	ca 01       	movw	r24, r20
     21e:	b9 01       	movw	r22, r18
     220:	a8 01       	movw	r20, r16
     222:	97 01       	movw	r18, r14
     224:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__subsf3>
     228:	5b 01       	movw	r10, r22
     22a:	6c 01       	movw	r12, r24
	pid = (pGain * error)  + (iGain * eInteg) + (dGain * (error - ePrev));
     22c:	60 91 76 01 	lds	r22, 0x0176
     230:	70 91 77 01 	lds	r23, 0x0177
     234:	80 91 78 01 	lds	r24, 0x0178
     238:	90 91 79 01 	lds	r25, 0x0179
     23c:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     240:	3b 01       	movw	r6, r22
     242:	4c 01       	movw	r8, r24
     244:	c6 01       	movw	r24, r12
     246:	b5 01       	movw	r22, r10
     248:	20 91 60 00 	lds	r18, 0x0060
     24c:	30 91 61 00 	lds	r19, 0x0061
     250:	40 91 62 00 	lds	r20, 0x0062
     254:	50 91 63 00 	lds	r21, 0x0063
     258:	0e 94 5a 05 	call	0xab4	; 0xab4 <__mulsf3>
     25c:	7b 01       	movw	r14, r22
     25e:	8c 01       	movw	r16, r24
     260:	c4 01       	movw	r24, r8
     262:	b3 01       	movw	r22, r6
     264:	20 91 64 00 	lds	r18, 0x0064
     268:	30 91 65 00 	lds	r19, 0x0065
     26c:	40 91 66 00 	lds	r20, 0x0066
     270:	50 91 67 00 	lds	r21, 0x0067
     274:	0e 94 5a 05 	call	0xab4	; 0xab4 <__mulsf3>
     278:	9b 01       	movw	r18, r22
     27a:	ac 01       	movw	r20, r24
     27c:	c8 01       	movw	r24, r16
     27e:	b7 01       	movw	r22, r14
     280:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     284:	7b 01       	movw	r14, r22
     286:	8c 01       	movw	r16, r24
     288:	60 91 7a 01 	lds	r22, 0x017A
     28c:	70 91 7b 01 	lds	r23, 0x017B
     290:	80 91 7c 01 	lds	r24, 0x017C
     294:	90 91 7d 01 	lds	r25, 0x017D
     298:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     29c:	9b 01       	movw	r18, r22
     29e:	ac 01       	movw	r20, r24
     2a0:	c6 01       	movw	r24, r12
     2a2:	b5 01       	movw	r22, r10
     2a4:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__subsf3>
     2a8:	20 91 68 00 	lds	r18, 0x0068
     2ac:	30 91 69 00 	lds	r19, 0x0069
     2b0:	40 91 6a 00 	lds	r20, 0x006A
     2b4:	50 91 6b 00 	lds	r21, 0x006B
     2b8:	0e 94 5a 05 	call	0xab4	; 0xab4 <__mulsf3>
     2bc:	9b 01       	movw	r18, r22
     2be:	ac 01       	movw	r20, r24
     2c0:	c8 01       	movw	r24, r16
     2c2:	b7 01       	movw	r22, r14
     2c4:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     2c8:	7b 01       	movw	r14, r22
     2ca:	8c 01       	movw	r16, r24

	eInteg += error;                  // integral is simply a summation over time
     2cc:	c4 01       	movw	r24, r8
     2ce:	b3 01       	movw	r22, r6
     2d0:	a6 01       	movw	r20, r12
     2d2:	95 01       	movw	r18, r10
     2d4:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     2d8:	0e 94 4e 08 	call	0x109c	; 0x109c <__fixsfsi>
     2dc:	60 93 76 01 	sts	0x0176, r22
     2e0:	70 93 77 01 	sts	0x0177, r23
     2e4:	80 93 78 01 	sts	0x0178, r24
     2e8:	90 93 79 01 	sts	0x0179, r25
	ePrev = error;                    // save previous for derivative
     2ec:	c6 01       	movw	r24, r12
     2ee:	b5 01       	movw	r22, r10
     2f0:	0e 94 4e 08 	call	0x109c	; 0x109c <__fixsfsi>
     2f4:	60 93 7a 01 	sts	0x017A, r22
     2f8:	70 93 7b 01 	sts	0x017B, r23
     2fc:	80 93 7c 01 	sts	0x017C, r24
     300:	90 93 7d 01 	sts	0x017D, r25

	return pid;
}
     304:	b7 01       	movw	r22, r14
     306:	c8 01       	movw	r24, r16
     308:	1f 91       	pop	r17
     30a:	0f 91       	pop	r16
     30c:	ff 90       	pop	r15
     30e:	ef 90       	pop	r14
     310:	df 90       	pop	r13
     312:	cf 90       	pop	r12
     314:	bf 90       	pop	r11
     316:	af 90       	pop	r10
     318:	9f 90       	pop	r9
     31a:	8f 90       	pop	r8
     31c:	7f 90       	pop	r7
     31e:	6f 90       	pop	r6
     320:	08 95       	ret

00000322 <ReadSensors>:

float ReadSensors()
{
     322:	3f 92       	push	r3
     324:	4f 92       	push	r4
     326:	5f 92       	push	r5
     328:	6f 92       	push	r6
     32a:	7f 92       	push	r7
     32c:	8f 92       	push	r8
     32e:	9f 92       	push	r9
     330:	af 92       	push	r10
     332:	bf 92       	push	r11
     334:	cf 92       	push	r12
     336:	df 92       	push	r13
     338:	ef 92       	push	r14
     33a:	ff 92       	push	r15
     33c:	0f 93       	push	r16
     33e:	1f 93       	push	r17
	uint16_t	eright,right,middle,left,eleft;
	uint8_t		sensor1,sensor2, sensor3, sensor4,sensor5;
	
	float avgSensor = 0.0;
	
	eright=ReadADC(SENSOR5);
     340:	84 e0       	ldi	r24, 0x04	; 4
     342:	0e 94 4e 00 	call	0x9c	; 0x9c <ReadADC>
	if(eright>SENSOR_THRES)//Right black line sensor
     346:	81 52       	subi	r24, 0x21	; 33
     348:	93 40       	sbci	r25, 0x03	; 3
     34a:	30 f0       	brcs	.+12     	; 0x358 <ReadSensors+0x36>
	{
		sensor5 = 1;
		LEDOn(5);
     34c:	85 e0       	ldi	r24, 0x05	; 5
     34e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LEDOn>
     352:	aa 24       	eor	r10, r10
     354:	a3 94       	inc	r10
     356:	04 c0       	rjmp	.+8      	; 0x360 <ReadSensors+0x3e>
	}
	else
	{
		sensor5 = 0;
		LEDOff(5);
     358:	85 e0       	ldi	r24, 0x05	; 5
     35a:	0e 94 c4 00 	call	0x188	; 0x188 <LEDOff>
     35e:	aa 24       	eor	r10, r10
	}

	// Read analog inputs
	right=ReadADC(SENSOR4);
     360:	83 e0       	ldi	r24, 0x03	; 3
     362:	0e 94 4e 00 	call	0x9c	; 0x9c <ReadADC>
	if(right>SENSOR_THRES)//Right black line sensor
     366:	81 52       	subi	r24, 0x21	; 33
     368:	93 40       	sbci	r25, 0x03	; 3
     36a:	30 f0       	brcs	.+12     	; 0x378 <ReadSensors+0x56>
	{
		sensor4 = 1;
		LEDOn(4);
     36c:	84 e0       	ldi	r24, 0x04	; 4
     36e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LEDOn>
     372:	ee 24       	eor	r14, r14
     374:	e3 94       	inc	r14
     376:	04 c0       	rjmp	.+8      	; 0x380 <ReadSensors+0x5e>
	}
	else
	{
		sensor4 = 0;
		LEDOff(4);
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	0e 94 c4 00 	call	0x188	; 0x188 <LEDOff>
     37e:	ee 24       	eor	r14, r14
	}

	middle=ReadADC(SENSOR3);
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	0e 94 4e 00 	call	0x9c	; 0x9c <ReadADC>
	if(middle>SENSOR_THRES)// Middle black line sensor
     386:	81 52       	subi	r24, 0x21	; 33
     388:	93 40       	sbci	r25, 0x03	; 3
     38a:	28 f0       	brcs	.+10     	; 0x396 <ReadSensors+0x74>
	{
		sensor3 = 1;
		LEDOn(3);
     38c:	83 e0       	ldi	r24, 0x03	; 3
     38e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LEDOn>
     392:	01 e0       	ldi	r16, 0x01	; 1
     394:	04 c0       	rjmp	.+8      	; 0x39e <ReadSensors+0x7c>
	}
	else
	{
		sensor3 = 0;
		LEDOff(3);
     396:	83 e0       	ldi	r24, 0x03	; 3
     398:	0e 94 c4 00 	call	0x188	; 0x188 <LEDOff>
     39c:	00 e0       	ldi	r16, 0x00	; 0
	}

	left=ReadADC(SENSOR2);
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	0e 94 4e 00 	call	0x9c	; 0x9c <ReadADC>
	if(left>SENSOR_THRES)// Left black line sensor
     3a4:	81 52       	subi	r24, 0x21	; 33
     3a6:	93 40       	sbci	r25, 0x03	; 3
     3a8:	28 f0       	brcs	.+10     	; 0x3b4 <ReadSensors+0x92>
	{
		sensor2 = 1;
		LEDOn(2);
     3aa:	82 e0       	ldi	r24, 0x02	; 2
     3ac:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LEDOn>
     3b0:	11 e0       	ldi	r17, 0x01	; 1
     3b2:	04 c0       	rjmp	.+8      	; 0x3bc <ReadSensors+0x9a>
	}
	else
	{
		sensor2 = 0;
		LEDOff(2);
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	0e 94 c4 00 	call	0x188	; 0x188 <LEDOff>
     3ba:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	eleft=ReadADC(SENSOR1);
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	0e 94 4e 00 	call	0x9c	; 0x9c <ReadADC>
	if(eleft>SENSOR_THRES)// Left black line sensor
     3c2:	81 52       	subi	r24, 0x21	; 33
     3c4:	93 40       	sbci	r25, 0x03	; 3
     3c6:	30 f0       	brcs	.+12     	; 0x3d4 <ReadSensors+0xb2>
	{
		sensor1 = 1;
		LEDOn(1);
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LEDOn>
     3ce:	33 24       	eor	r3, r3
     3d0:	33 94       	inc	r3
     3d2:	11 c0       	rjmp	.+34     	; 0x3f6 <ReadSensors+0xd4>
	}
	else
	{
		sensor1 = 0;
		LEDOff(1);
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	0e 94 c4 00 	call	0x188	; 0x188 <LEDOff>
	}
	
	
	if(sensor1==0 && sensor2==0 && sensor3==0 && sensor4==0 && sensor5==0)
     3da:	11 23       	and	r17, r17
     3dc:	59 f4       	brne	.+22     	; 0x3f4 <ReadSensors+0xd2>
     3de:	00 23       	and	r16, r16
     3e0:	49 f4       	brne	.+18     	; 0x3f4 <ReadSensors+0xd2>
     3e2:	ee 20       	and	r14, r14
     3e4:	39 f4       	brne	.+14     	; 0x3f4 <ReadSensors+0xd2>
     3e6:	aa 20       	and	r10, r10
     3e8:	29 f4       	brne	.+10     	; 0x3f4 <ReadSensors+0xd2>
     3ea:	e0 e0       	ldi	r30, 0x00	; 0
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	8f e7       	ldi	r24, 0x7F	; 127
     3f0:	63 e4       	ldi	r22, 0x43	; 67
     3f2:	74 c0       	rjmp	.+232    	; 0x4dc <__stack+0x7d>
     3f4:	33 24       	eor	r3, r3
	{
		return 0xFF;
	}
	
	// Calculate weighted mean
	avgSensor = (float) sensor1*1 + sensor2*2 + sensor3*3 + sensor4*4 + sensor5*5 ;
     3f6:	41 2e       	mov	r4, r17
     3f8:	55 24       	eor	r5, r5
     3fa:	60 2e       	mov	r6, r16
     3fc:	77 24       	eor	r7, r7
     3fe:	ff 24       	eor	r15, r15
     400:	8a 2c       	mov	r8, r10
     402:	99 24       	eor	r9, r9
     404:	63 2d       	mov	r22, r3
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 a2 08 	call	0x1144	; 0x1144 <__floatunsisf>
     410:	5b 01       	movw	r10, r22
     412:	6c 01       	movw	r12, r24
     414:	b2 01       	movw	r22, r4
     416:	66 0f       	add	r22, r22
     418:	77 1f       	adc	r23, r23
     41a:	88 27       	eor	r24, r24
     41c:	77 fd       	sbrc	r23, 7
     41e:	80 95       	com	r24
     420:	98 2f       	mov	r25, r24
     422:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     426:	9b 01       	movw	r18, r22
     428:	ac 01       	movw	r20, r24
     42a:	c6 01       	movw	r24, r12
     42c:	b5 01       	movw	r22, r10
     42e:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     432:	5b 01       	movw	r10, r22
     434:	6c 01       	movw	r12, r24
     436:	b3 01       	movw	r22, r6
     438:	66 0f       	add	r22, r22
     43a:	77 1f       	adc	r23, r23
     43c:	66 0d       	add	r22, r6
     43e:	77 1d       	adc	r23, r7
     440:	88 27       	eor	r24, r24
     442:	77 fd       	sbrc	r23, 7
     444:	80 95       	com	r24
     446:	98 2f       	mov	r25, r24
     448:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     44c:	9b 01       	movw	r18, r22
     44e:	ac 01       	movw	r20, r24
     450:	c6 01       	movw	r24, r12
     452:	b5 01       	movw	r22, r10
     454:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     458:	5b 01       	movw	r10, r22
     45a:	6c 01       	movw	r12, r24
     45c:	b7 01       	movw	r22, r14
     45e:	66 0f       	add	r22, r22
     460:	77 1f       	adc	r23, r23
     462:	66 0f       	add	r22, r22
     464:	77 1f       	adc	r23, r23
     466:	88 27       	eor	r24, r24
     468:	77 fd       	sbrc	r23, 7
     46a:	80 95       	com	r24
     46c:	98 2f       	mov	r25, r24
     46e:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     472:	9b 01       	movw	r18, r22
     474:	ac 01       	movw	r20, r24
     476:	c6 01       	movw	r24, r12
     478:	b5 01       	movw	r22, r10
     47a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     47e:	5b 01       	movw	r10, r22
     480:	6c 01       	movw	r12, r24
     482:	b4 01       	movw	r22, r8
     484:	66 0f       	add	r22, r22
     486:	77 1f       	adc	r23, r23
     488:	66 0f       	add	r22, r22
     48a:	77 1f       	adc	r23, r23
     48c:	68 0d       	add	r22, r8
     48e:	79 1d       	adc	r23, r9
     490:	88 27       	eor	r24, r24
     492:	77 fd       	sbrc	r23, 7
     494:	80 95       	com	r24
     496:	98 2f       	mov	r25, r24
     498:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     49c:	9b 01       	movw	r18, r22
     49e:	ac 01       	movw	r20, r24
     4a0:	c6 01       	movw	r24, r12
     4a2:	b5 01       	movw	r22, r10
     4a4:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     4a8:	5b 01       	movw	r10, r22
     4aa:	6c 01       	movw	r12, r24
	avgSensor = (float) avgSensor / (sensor1 + sensor2 + sensor3 + sensor4 + sensor5);
     4ac:	e8 0c       	add	r14, r8
     4ae:	f9 1c       	adc	r15, r9
     4b0:	e6 0c       	add	r14, r6
     4b2:	f7 1c       	adc	r15, r7
     4b4:	e4 0c       	add	r14, r4
     4b6:	f5 1c       	adc	r15, r5
     4b8:	e3 0c       	add	r14, r3
     4ba:	f1 1c       	adc	r15, r1
     4bc:	00 27       	eor	r16, r16
     4be:	f7 fc       	sbrc	r15, 7
     4c0:	00 95       	com	r16
     4c2:	10 2f       	mov	r17, r16
     4c4:	c8 01       	movw	r24, r16
     4c6:	b7 01       	movw	r22, r14
     4c8:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__floatsisf>
     4cc:	9b 01       	movw	r18, r22
     4ce:	ac 01       	movw	r20, r24
     4d0:	c6 01       	movw	r24, r12
     4d2:	b5 01       	movw	r22, r10
     4d4:	0e 94 54 06 	call	0xca8	; 0xca8 <__divsf3>
     4d8:	e6 2f       	mov	r30, r22
     4da:	69 2f       	mov	r22, r25

	return avgSensor;
}
     4dc:	2e 2f       	mov	r18, r30
     4de:	37 2f       	mov	r19, r23
     4e0:	48 2f       	mov	r20, r24
     4e2:	56 2f       	mov	r21, r22
     4e4:	b9 01       	movw	r22, r18
     4e6:	ca 01       	movw	r24, r20
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	df 90       	pop	r13
     4f2:	cf 90       	pop	r12
     4f4:	bf 90       	pop	r11
     4f6:	af 90       	pop	r10
     4f8:	9f 90       	pop	r9
     4fa:	8f 90       	pop	r8
     4fc:	7f 90       	pop	r7
     4fe:	6f 90       	pop	r6
     500:	5f 90       	pop	r5
     502:	4f 90       	pop	r4
     504:	3f 90       	pop	r3
     506:	08 95       	ret

00000508 <main>:
	{
		PORTD&=~(1<<(2+id));
	}
}
int main(void)
{
     508:	ef 92       	push	r14
     50a:	ff 92       	push	r15
     50c:	0f 93       	push	r16
     50e:	1f 93       	push	r17
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
	//Initialize Motors subsystem.
	MotorInit();
     514:	0e 94 5d 00 	call	0xba	; 0xba <MotorInit>
	
	//Initialize LED subsystem
	LEDInit();
     518:	0e 94 bb 00 	call	0x176	; 0x176 <LEDInit>
//#include<motor.h>
//#include<led.h>

void InitADC()
{
	ADMUX=(1<<REFS0);                                  	// For Aref=AVcc;
     51c:	80 e4       	ldi	r24, 0x40	; 64
     51e:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);    //Prescalar div factor =128
     520:	87 e8       	ldi	r24, 0x87	; 135
     522:	86 b9       	out	0x06, r24	; 6
     524:	ca ef       	ldi	r28, 0xFA	; 250
     526:	d0 e0       	ldi	r29, 0x00	; 0
		//Take current sensor reading
		//return value is between 0 to 5
		//When the line is towards right of center then value tends to 5
		//When the line is towards left of center then value tends to 1
		//When line is in the exact center the the valeue is 3
		s=ReadSensors();
     528:	0e 94 91 01 	call	0x322	; 0x322 <ReadSensors>
     52c:	60 93 82 01 	sts	0x0182, r22
     530:	70 93 83 01 	sts	0x0183, r23
     534:	80 93 84 01 	sts	0x0184, r24
     538:	90 93 85 01 	sts	0x0185, r25
		
		//If line is not found beneath any sensor, use last sensor value.
		if(s==0xFF)
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	4f e7       	ldi	r20, 0x7F	; 127
     542:	53 e4       	ldi	r21, 0x43	; 67
     544:	0e 94 00 07 	call	0xe00	; 0xe00 <__eqsf2>
     548:	88 23       	and	r24, r24
     54a:	41 f4       	brne	.+16     	; 0x55c <main+0x54>
		{
			s=sprev;
     54c:	e0 92 82 01 	sts	0x0182, r14
     550:	f0 92 83 01 	sts	0x0183, r15
     554:	00 93 84 01 	sts	0x0184, r16
     558:	10 93 85 01 	sts	0x0185, r17
		//beneath the center sensor so the required value is 3 (second parameter)
		//The first argument is the current sensor reading.
		//The more the difference between the two greater is the control variable.
		//This control variable is used to produce turning in the robot.
		//When current value is close to required value is close to 0.
		control = PID(s,3.0);
     55c:	60 91 82 01 	lds	r22, 0x0182
     560:	70 91 83 01 	lds	r23, 0x0183
     564:	80 91 84 01 	lds	r24, 0x0184
     568:	90 91 85 01 	lds	r25, 0x0185
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	40 e4       	ldi	r20, 0x40	; 64
     572:	50 e4       	ldi	r21, 0x40	; 64
     574:	0e 94 00 01 	call	0x200	; 0x200 <PID>
     578:	60 93 7e 01 	sts	0x017E, r22
     57c:	70 93 7f 01 	sts	0x017F, r23
     580:	80 93 80 01 	sts	0x0180, r24
     584:	90 93 81 01 	sts	0x0181, r25
		
		//Limit the control
		if(control > 510)
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	4f ef       	ldi	r20, 0xFF	; 255
     58e:	53 e4       	ldi	r21, 0x43	; 67
     590:	0e 94 30 07 	call	0xe60	; 0xe60 <__gtsf2>
     594:	18 16       	cp	r1, r24
     596:	64 f4       	brge	.+24     	; 0x5b0 <main+0xa8>
		control = 510;
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	af ef       	ldi	r26, 0xFF	; 255
     59e:	b3 e4       	ldi	r27, 0x43	; 67
     5a0:	80 93 7e 01 	sts	0x017E, r24
     5a4:	90 93 7f 01 	sts	0x017F, r25
     5a8:	a0 93 80 01 	sts	0x0180, r26
     5ac:	b0 93 81 01 	sts	0x0181, r27
		if(control < -510)
     5b0:	60 91 7e 01 	lds	r22, 0x017E
     5b4:	70 91 7f 01 	lds	r23, 0x017F
     5b8:	80 91 80 01 	lds	r24, 0x0180
     5bc:	90 91 81 01 	lds	r25, 0x0181
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	4f ef       	ldi	r20, 0xFF	; 255
     5c6:	53 ec       	ldi	r21, 0xC3	; 195
     5c8:	0e 94 90 07 	call	0xf20	; 0xf20 <__ltsf2>
     5cc:	88 23       	and	r24, r24
     5ce:	64 f4       	brge	.+24     	; 0x5e8 <main+0xe0>
		control = -510;
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	af ef       	ldi	r26, 0xFF	; 255
     5d6:	b3 ec       	ldi	r27, 0xC3	; 195
     5d8:	80 93 7e 01 	sts	0x017E, r24
     5dc:	90 93 7f 01 	sts	0x017F, r25
     5e0:	a0 93 80 01 	sts	0x0180, r26
     5e4:	b0 93 81 01 	sts	0x0181, r27

		if(control > 0.0)//the left sensor sees the line so we must turn right
     5e8:	e0 90 7e 01 	lds	r14, 0x017E
     5ec:	f0 90 7f 01 	lds	r15, 0x017F
     5f0:	00 91 80 01 	lds	r16, 0x0180
     5f4:	10 91 81 01 	lds	r17, 0x0181
     5f8:	c8 01       	movw	r24, r16
     5fa:	b7 01       	movw	r22, r14
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	40 e0       	ldi	r20, 0x00	; 0
     602:	50 e0       	ldi	r21, 0x00	; 0
     604:	0e 94 30 07 	call	0xe60	; 0xe60 <__gtsf2>
     608:	18 16       	cp	r1, r24
     60a:	64 f5       	brge	.+88     	; 0x664 <main+0x15c>
		{
			if(control>255)
     60c:	c8 01       	movw	r24, r16
     60e:	b7 01       	movw	r22, r14
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	4f e7       	ldi	r20, 0x7F	; 127
     616:	53 e4       	ldi	r21, 0x43	; 67
     618:	0e 94 30 07 	call	0xe60	; 0xe60 <__gtsf2>
     61c:	18 16       	cp	r1, r24
     61e:	74 f4       	brge	.+28     	; 0x63c <main+0x134>
			MotorA(MOTOR_CW,control-255);
     620:	c8 01       	movw	r24, r16
     622:	b7 01       	movw	r22, r14
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	4f e7       	ldi	r20, 0x7F	; 127
     62a:	53 e4       	ldi	r21, 0x43	; 67
     62c:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__subsf3>
     630:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     634:	9b 01       	movw	r18, r22
     636:	ac 01       	movw	r20, r24
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	0d c0       	rjmp	.+26     	; 0x656 <main+0x14e>
			else
			MotorA(MOTOR_CCW,255-control);
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	8f e7       	ldi	r24, 0x7F	; 127
     642:	93 e4       	ldi	r25, 0x43	; 67
     644:	a8 01       	movw	r20, r16
     646:	97 01       	movw	r18, r14
     648:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__subsf3>
     64c:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     650:	9b 01       	movw	r18, r22
     652:	ac 01       	movw	r20, r24
     654:	82 e0       	ldi	r24, 0x02	; 2
     656:	62 2f       	mov	r22, r18
     658:	0e 94 67 00 	call	0xce	; 0xce <MotorA>
			
			MotorB(MOTOR_CW,255);
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	6f ef       	ldi	r22, 0xFF	; 255
     660:	0e 94 91 00 	call	0x122	; 0x122 <MotorB>
		}
		if(control <= 0.0)//the right sensor sees the line so we must turn left
     664:	e0 90 7e 01 	lds	r14, 0x017E
     668:	f0 90 7f 01 	lds	r15, 0x017F
     66c:	00 91 80 01 	lds	r16, 0x0180
     670:	10 91 81 01 	lds	r17, 0x0181
     674:	c8 01       	movw	r24, r16
     676:	b7 01       	movw	r22, r14
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	0e 94 c0 07 	call	0xf80	; 0xf80 <__lesf2>
     684:	18 16       	cp	r1, r24
     686:	6c f1       	brlt	.+90     	; 0x6e2 <main+0x1da>
		{
			if(control<-255)
     688:	c8 01       	movw	r24, r16
     68a:	b7 01       	movw	r22, r14
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	4f e7       	ldi	r20, 0x7F	; 127
     692:	53 ec       	ldi	r21, 0xC3	; 195
     694:	0e 94 90 07 	call	0xf20	; 0xf20 <__ltsf2>
     698:	88 23       	and	r24, r24
     69a:	7c f4       	brge	.+30     	; 0x6ba <main+0x1b2>
			MotorB(MOTOR_CCW,-(control+255));
     69c:	c8 01       	movw	r24, r16
     69e:	b7 01       	movw	r22, r14
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	4f e7       	ldi	r20, 0x7F	; 127
     6a6:	53 e4       	ldi	r21, 0x43	; 67
     6a8:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     6ac:	90 58       	subi	r25, 0x80	; 128
     6ae:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     6b2:	9b 01       	movw	r18, r22
     6b4:	ac 01       	movw	r20, r24
     6b6:	82 e0       	ldi	r24, 0x02	; 2
     6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <main+0x1cc>
			else
			MotorB(MOTOR_CW,255+control);
     6ba:	c8 01       	movw	r24, r16
     6bc:	b7 01       	movw	r22, r14
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	4f e7       	ldi	r20, 0x7F	; 127
     6c4:	53 e4       	ldi	r21, 0x43	; 67
     6c6:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__addsf3>
     6ca:	0e 94 84 03 	call	0x708	; 0x708 <__fixunssfsi>
     6ce:	9b 01       	movw	r18, r22
     6d0:	ac 01       	movw	r20, r24
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	62 2f       	mov	r22, r18
     6d6:	0e 94 91 00 	call	0x122	; 0x122 <MotorB>
			
			MotorA(MOTOR_CCW,255);
     6da:	82 e0       	ldi	r24, 0x02	; 2
     6dc:	6f ef       	ldi	r22, 0xFF	; 255
     6de:	0e 94 67 00 	call	0xce	; 0xce <MotorA>
		}
		
		//Delay
		DelayMs(delay);
     6e2:	30 91 6c 00 	lds	r19, 0x006C
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <main+0x1ea>
     6ea:	ce 01       	movw	r24, r28
     6ec:	01 97       	sbiw	r24, 0x01	; 1
     6ee:	f1 f7       	brne	.-4      	; 0x6ec <main+0x1e4>
}

void DelayMs(uint8_t ms)
{
	uint8_t i;
	for(i=0;i<ms;i++)
     6f0:	2f 5f       	subi	r18, 0xFF	; 255
     6f2:	23 17       	cp	r18, r19
     6f4:	d0 f3       	brcs	.-12     	; 0x6ea <main+0x1e2>
		}
		
		//Delay
		DelayMs(delay);
		
		sprev=s;
     6f6:	e0 90 82 01 	lds	r14, 0x0182
     6fa:	f0 90 83 01 	lds	r15, 0x0183
     6fe:	00 91 84 01 	lds	r16, 0x0184
     702:	10 91 85 01 	lds	r17, 0x0185
     706:	10 cf       	rjmp	.-480    	; 0x528 <main+0x20>

00000708 <__fixunssfsi>:
     708:	ef 92       	push	r14
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	7b 01       	movw	r14, r22
     712:	8c 01       	movw	r16, r24
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	40 e0       	ldi	r20, 0x00	; 0
     71a:	5f e4       	ldi	r21, 0x4F	; 79
     71c:	0e 94 60 07 	call	0xec0	; 0xec0 <__gesf2>
     720:	88 23       	and	r24, r24
     722:	8c f0       	brlt	.+34     	; 0x746 <__fixunssfsi+0x3e>
     724:	c8 01       	movw	r24, r16
     726:	b7 01       	movw	r22, r14
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	5f e4       	ldi	r21, 0x4F	; 79
     730:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__subsf3>
     734:	0e 94 4e 08 	call	0x109c	; 0x109c <__fixsfsi>
     738:	9b 01       	movw	r18, r22
     73a:	ac 01       	movw	r20, r24
     73c:	20 50       	subi	r18, 0x00	; 0
     73e:	30 40       	sbci	r19, 0x00	; 0
     740:	40 40       	sbci	r20, 0x00	; 0
     742:	50 48       	sbci	r21, 0x80	; 128
     744:	06 c0       	rjmp	.+12     	; 0x752 <__fixunssfsi+0x4a>
     746:	c8 01       	movw	r24, r16
     748:	b7 01       	movw	r22, r14
     74a:	0e 94 4e 08 	call	0x109c	; 0x109c <__fixsfsi>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	b9 01       	movw	r22, r18
     754:	ca 01       	movw	r24, r20
     756:	1f 91       	pop	r17
     758:	0f 91       	pop	r16
     75a:	ff 90       	pop	r15
     75c:	ef 90       	pop	r14
     75e:	08 95       	ret

00000760 <_fpadd_parts>:
     760:	a0 e0       	ldi	r26, 0x00	; 0
     762:	b0 e0       	ldi	r27, 0x00	; 0
     764:	e6 eb       	ldi	r30, 0xB6	; 182
     766:	f3 e0       	ldi	r31, 0x03	; 3
     768:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__prologue_saves__>
     76c:	dc 01       	movw	r26, r24
     76e:	2b 01       	movw	r4, r22
     770:	fa 01       	movw	r30, r20
     772:	9c 91       	ld	r25, X
     774:	92 30       	cpi	r25, 0x02	; 2
     776:	08 f4       	brcc	.+2      	; 0x77a <_fpadd_parts+0x1a>
     778:	39 c1       	rjmp	.+626    	; 0x9ec <_fpadd_parts+0x28c>
     77a:	eb 01       	movw	r28, r22
     77c:	88 81       	ld	r24, Y
     77e:	82 30       	cpi	r24, 0x02	; 2
     780:	08 f4       	brcc	.+2      	; 0x784 <_fpadd_parts+0x24>
     782:	33 c1       	rjmp	.+614    	; 0x9ea <_fpadd_parts+0x28a>
     784:	94 30       	cpi	r25, 0x04	; 4
     786:	69 f4       	brne	.+26     	; 0x7a2 <_fpadd_parts+0x42>
     788:	84 30       	cpi	r24, 0x04	; 4
     78a:	09 f0       	breq	.+2      	; 0x78e <_fpadd_parts+0x2e>
     78c:	2f c1       	rjmp	.+606    	; 0x9ec <_fpadd_parts+0x28c>
     78e:	11 96       	adiw	r26, 0x01	; 1
     790:	9c 91       	ld	r25, X
     792:	11 97       	sbiw	r26, 0x01	; 1
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	98 17       	cp	r25, r24
     798:	09 f4       	brne	.+2      	; 0x79c <_fpadd_parts+0x3c>
     79a:	28 c1       	rjmp	.+592    	; 0x9ec <_fpadd_parts+0x28c>
     79c:	ae e6       	ldi	r26, 0x6E	; 110
     79e:	b0 e0       	ldi	r27, 0x00	; 0
     7a0:	25 c1       	rjmp	.+586    	; 0x9ec <_fpadd_parts+0x28c>
     7a2:	84 30       	cpi	r24, 0x04	; 4
     7a4:	09 f4       	brne	.+2      	; 0x7a8 <_fpadd_parts+0x48>
     7a6:	21 c1       	rjmp	.+578    	; 0x9ea <_fpadd_parts+0x28a>
     7a8:	82 30       	cpi	r24, 0x02	; 2
     7aa:	a9 f4       	brne	.+42     	; 0x7d6 <_fpadd_parts+0x76>
     7ac:	92 30       	cpi	r25, 0x02	; 2
     7ae:	09 f0       	breq	.+2      	; 0x7b2 <_fpadd_parts+0x52>
     7b0:	1d c1       	rjmp	.+570    	; 0x9ec <_fpadd_parts+0x28c>
     7b2:	9a 01       	movw	r18, r20
     7b4:	ad 01       	movw	r20, r26
     7b6:	88 e0       	ldi	r24, 0x08	; 8
     7b8:	ea 01       	movw	r28, r20
     7ba:	09 90       	ld	r0, Y+
     7bc:	ae 01       	movw	r20, r28
     7be:	e9 01       	movw	r28, r18
     7c0:	09 92       	st	Y+, r0
     7c2:	9e 01       	movw	r18, r28
     7c4:	81 50       	subi	r24, 0x01	; 1
     7c6:	c1 f7       	brne	.-16     	; 0x7b8 <_fpadd_parts+0x58>
     7c8:	e2 01       	movw	r28, r4
     7ca:	89 81       	ldd	r24, Y+1	; 0x01
     7cc:	11 96       	adiw	r26, 0x01	; 1
     7ce:	9c 91       	ld	r25, X
     7d0:	89 23       	and	r24, r25
     7d2:	81 83       	std	Z+1, r24	; 0x01
     7d4:	08 c1       	rjmp	.+528    	; 0x9e6 <_fpadd_parts+0x286>
     7d6:	92 30       	cpi	r25, 0x02	; 2
     7d8:	09 f4       	brne	.+2      	; 0x7dc <_fpadd_parts+0x7c>
     7da:	07 c1       	rjmp	.+526    	; 0x9ea <_fpadd_parts+0x28a>
     7dc:	12 96       	adiw	r26, 0x02	; 2
     7de:	2d 90       	ld	r2, X+
     7e0:	3c 90       	ld	r3, X
     7e2:	13 97       	sbiw	r26, 0x03	; 3
     7e4:	eb 01       	movw	r28, r22
     7e6:	8a 81       	ldd	r24, Y+2	; 0x02
     7e8:	9b 81       	ldd	r25, Y+3	; 0x03
     7ea:	14 96       	adiw	r26, 0x04	; 4
     7ec:	ad 90       	ld	r10, X+
     7ee:	bd 90       	ld	r11, X+
     7f0:	cd 90       	ld	r12, X+
     7f2:	dc 90       	ld	r13, X
     7f4:	17 97       	sbiw	r26, 0x07	; 7
     7f6:	ec 80       	ldd	r14, Y+4	; 0x04
     7f8:	fd 80       	ldd	r15, Y+5	; 0x05
     7fa:	0e 81       	ldd	r16, Y+6	; 0x06
     7fc:	1f 81       	ldd	r17, Y+7	; 0x07
     7fe:	91 01       	movw	r18, r2
     800:	28 1b       	sub	r18, r24
     802:	39 0b       	sbc	r19, r25
     804:	b9 01       	movw	r22, r18
     806:	37 ff       	sbrs	r19, 7
     808:	04 c0       	rjmp	.+8      	; 0x812 <_fpadd_parts+0xb2>
     80a:	66 27       	eor	r22, r22
     80c:	77 27       	eor	r23, r23
     80e:	62 1b       	sub	r22, r18
     810:	73 0b       	sbc	r23, r19
     812:	60 32       	cpi	r22, 0x20	; 32
     814:	71 05       	cpc	r23, r1
     816:	0c f0       	brlt	.+2      	; 0x81a <_fpadd_parts+0xba>
     818:	61 c0       	rjmp	.+194    	; 0x8dc <_fpadd_parts+0x17c>
     81a:	12 16       	cp	r1, r18
     81c:	13 06       	cpc	r1, r19
     81e:	6c f5       	brge	.+90     	; 0x87a <_fpadd_parts+0x11a>
     820:	37 01       	movw	r6, r14
     822:	48 01       	movw	r8, r16
     824:	06 2e       	mov	r0, r22
     826:	04 c0       	rjmp	.+8      	; 0x830 <_fpadd_parts+0xd0>
     828:	96 94       	lsr	r9
     82a:	87 94       	ror	r8
     82c:	77 94       	ror	r7
     82e:	67 94       	ror	r6
     830:	0a 94       	dec	r0
     832:	d2 f7       	brpl	.-12     	; 0x828 <_fpadd_parts+0xc8>
     834:	21 e0       	ldi	r18, 0x01	; 1
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	40 e0       	ldi	r20, 0x00	; 0
     83a:	50 e0       	ldi	r21, 0x00	; 0
     83c:	04 c0       	rjmp	.+8      	; 0x846 <_fpadd_parts+0xe6>
     83e:	22 0f       	add	r18, r18
     840:	33 1f       	adc	r19, r19
     842:	44 1f       	adc	r20, r20
     844:	55 1f       	adc	r21, r21
     846:	6a 95       	dec	r22
     848:	d2 f7       	brpl	.-12     	; 0x83e <_fpadd_parts+0xde>
     84a:	21 50       	subi	r18, 0x01	; 1
     84c:	30 40       	sbci	r19, 0x00	; 0
     84e:	40 40       	sbci	r20, 0x00	; 0
     850:	50 40       	sbci	r21, 0x00	; 0
     852:	2e 21       	and	r18, r14
     854:	3f 21       	and	r19, r15
     856:	40 23       	and	r20, r16
     858:	51 23       	and	r21, r17
     85a:	21 15       	cp	r18, r1
     85c:	31 05       	cpc	r19, r1
     85e:	41 05       	cpc	r20, r1
     860:	51 05       	cpc	r21, r1
     862:	21 f0       	breq	.+8      	; 0x86c <_fpadd_parts+0x10c>
     864:	21 e0       	ldi	r18, 0x01	; 1
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	40 e0       	ldi	r20, 0x00	; 0
     86a:	50 e0       	ldi	r21, 0x00	; 0
     86c:	79 01       	movw	r14, r18
     86e:	8a 01       	movw	r16, r20
     870:	e6 28       	or	r14, r6
     872:	f7 28       	or	r15, r7
     874:	08 29       	or	r16, r8
     876:	19 29       	or	r17, r9
     878:	3c c0       	rjmp	.+120    	; 0x8f2 <_fpadd_parts+0x192>
     87a:	23 2b       	or	r18, r19
     87c:	d1 f1       	breq	.+116    	; 0x8f2 <_fpadd_parts+0x192>
     87e:	26 0e       	add	r2, r22
     880:	37 1e       	adc	r3, r23
     882:	35 01       	movw	r6, r10
     884:	46 01       	movw	r8, r12
     886:	06 2e       	mov	r0, r22
     888:	04 c0       	rjmp	.+8      	; 0x892 <_fpadd_parts+0x132>
     88a:	96 94       	lsr	r9
     88c:	87 94       	ror	r8
     88e:	77 94       	ror	r7
     890:	67 94       	ror	r6
     892:	0a 94       	dec	r0
     894:	d2 f7       	brpl	.-12     	; 0x88a <_fpadd_parts+0x12a>
     896:	21 e0       	ldi	r18, 0x01	; 1
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	40 e0       	ldi	r20, 0x00	; 0
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	04 c0       	rjmp	.+8      	; 0x8a8 <_fpadd_parts+0x148>
     8a0:	22 0f       	add	r18, r18
     8a2:	33 1f       	adc	r19, r19
     8a4:	44 1f       	adc	r20, r20
     8a6:	55 1f       	adc	r21, r21
     8a8:	6a 95       	dec	r22
     8aa:	d2 f7       	brpl	.-12     	; 0x8a0 <_fpadd_parts+0x140>
     8ac:	21 50       	subi	r18, 0x01	; 1
     8ae:	30 40       	sbci	r19, 0x00	; 0
     8b0:	40 40       	sbci	r20, 0x00	; 0
     8b2:	50 40       	sbci	r21, 0x00	; 0
     8b4:	2a 21       	and	r18, r10
     8b6:	3b 21       	and	r19, r11
     8b8:	4c 21       	and	r20, r12
     8ba:	5d 21       	and	r21, r13
     8bc:	21 15       	cp	r18, r1
     8be:	31 05       	cpc	r19, r1
     8c0:	41 05       	cpc	r20, r1
     8c2:	51 05       	cpc	r21, r1
     8c4:	21 f0       	breq	.+8      	; 0x8ce <_fpadd_parts+0x16e>
     8c6:	21 e0       	ldi	r18, 0x01	; 1
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e0       	ldi	r20, 0x00	; 0
     8cc:	50 e0       	ldi	r21, 0x00	; 0
     8ce:	59 01       	movw	r10, r18
     8d0:	6a 01       	movw	r12, r20
     8d2:	a6 28       	or	r10, r6
     8d4:	b7 28       	or	r11, r7
     8d6:	c8 28       	or	r12, r8
     8d8:	d9 28       	or	r13, r9
     8da:	0b c0       	rjmp	.+22     	; 0x8f2 <_fpadd_parts+0x192>
     8dc:	82 15       	cp	r24, r2
     8de:	93 05       	cpc	r25, r3
     8e0:	2c f0       	brlt	.+10     	; 0x8ec <_fpadd_parts+0x18c>
     8e2:	1c 01       	movw	r2, r24
     8e4:	aa 24       	eor	r10, r10
     8e6:	bb 24       	eor	r11, r11
     8e8:	65 01       	movw	r12, r10
     8ea:	03 c0       	rjmp	.+6      	; 0x8f2 <_fpadd_parts+0x192>
     8ec:	ee 24       	eor	r14, r14
     8ee:	ff 24       	eor	r15, r15
     8f0:	87 01       	movw	r16, r14
     8f2:	11 96       	adiw	r26, 0x01	; 1
     8f4:	9c 91       	ld	r25, X
     8f6:	d2 01       	movw	r26, r4
     8f8:	11 96       	adiw	r26, 0x01	; 1
     8fa:	8c 91       	ld	r24, X
     8fc:	98 17       	cp	r25, r24
     8fe:	09 f4       	brne	.+2      	; 0x902 <_fpadd_parts+0x1a2>
     900:	45 c0       	rjmp	.+138    	; 0x98c <_fpadd_parts+0x22c>
     902:	99 23       	and	r25, r25
     904:	39 f0       	breq	.+14     	; 0x914 <_fpadd_parts+0x1b4>
     906:	a8 01       	movw	r20, r16
     908:	97 01       	movw	r18, r14
     90a:	2a 19       	sub	r18, r10
     90c:	3b 09       	sbc	r19, r11
     90e:	4c 09       	sbc	r20, r12
     910:	5d 09       	sbc	r21, r13
     912:	06 c0       	rjmp	.+12     	; 0x920 <_fpadd_parts+0x1c0>
     914:	a6 01       	movw	r20, r12
     916:	95 01       	movw	r18, r10
     918:	2e 19       	sub	r18, r14
     91a:	3f 09       	sbc	r19, r15
     91c:	40 0b       	sbc	r20, r16
     91e:	51 0b       	sbc	r21, r17
     920:	57 fd       	sbrc	r21, 7
     922:	08 c0       	rjmp	.+16     	; 0x934 <_fpadd_parts+0x1d4>
     924:	11 82       	std	Z+1, r1	; 0x01
     926:	33 82       	std	Z+3, r3	; 0x03
     928:	22 82       	std	Z+2, r2	; 0x02
     92a:	24 83       	std	Z+4, r18	; 0x04
     92c:	35 83       	std	Z+5, r19	; 0x05
     92e:	46 83       	std	Z+6, r20	; 0x06
     930:	57 83       	std	Z+7, r21	; 0x07
     932:	1d c0       	rjmp	.+58     	; 0x96e <_fpadd_parts+0x20e>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	81 83       	std	Z+1, r24	; 0x01
     938:	33 82       	std	Z+3, r3	; 0x03
     93a:	22 82       	std	Z+2, r2	; 0x02
     93c:	88 27       	eor	r24, r24
     93e:	99 27       	eor	r25, r25
     940:	dc 01       	movw	r26, r24
     942:	82 1b       	sub	r24, r18
     944:	93 0b       	sbc	r25, r19
     946:	a4 0b       	sbc	r26, r20
     948:	b5 0b       	sbc	r27, r21
     94a:	84 83       	std	Z+4, r24	; 0x04
     94c:	95 83       	std	Z+5, r25	; 0x05
     94e:	a6 83       	std	Z+6, r26	; 0x06
     950:	b7 83       	std	Z+7, r27	; 0x07
     952:	0d c0       	rjmp	.+26     	; 0x96e <_fpadd_parts+0x20e>
     954:	22 0f       	add	r18, r18
     956:	33 1f       	adc	r19, r19
     958:	44 1f       	adc	r20, r20
     95a:	55 1f       	adc	r21, r21
     95c:	24 83       	std	Z+4, r18	; 0x04
     95e:	35 83       	std	Z+5, r19	; 0x05
     960:	46 83       	std	Z+6, r20	; 0x06
     962:	57 83       	std	Z+7, r21	; 0x07
     964:	82 81       	ldd	r24, Z+2	; 0x02
     966:	93 81       	ldd	r25, Z+3	; 0x03
     968:	01 97       	sbiw	r24, 0x01	; 1
     96a:	93 83       	std	Z+3, r25	; 0x03
     96c:	82 83       	std	Z+2, r24	; 0x02
     96e:	24 81       	ldd	r18, Z+4	; 0x04
     970:	35 81       	ldd	r19, Z+5	; 0x05
     972:	46 81       	ldd	r20, Z+6	; 0x06
     974:	57 81       	ldd	r21, Z+7	; 0x07
     976:	da 01       	movw	r26, r20
     978:	c9 01       	movw	r24, r18
     97a:	01 97       	sbiw	r24, 0x01	; 1
     97c:	a1 09       	sbc	r26, r1
     97e:	b1 09       	sbc	r27, r1
     980:	8f 5f       	subi	r24, 0xFF	; 255
     982:	9f 4f       	sbci	r25, 0xFF	; 255
     984:	af 4f       	sbci	r26, 0xFF	; 255
     986:	bf 43       	sbci	r27, 0x3F	; 63
     988:	28 f3       	brcs	.-54     	; 0x954 <_fpadd_parts+0x1f4>
     98a:	0b c0       	rjmp	.+22     	; 0x9a2 <_fpadd_parts+0x242>
     98c:	91 83       	std	Z+1, r25	; 0x01
     98e:	33 82       	std	Z+3, r3	; 0x03
     990:	22 82       	std	Z+2, r2	; 0x02
     992:	ea 0c       	add	r14, r10
     994:	fb 1c       	adc	r15, r11
     996:	0c 1d       	adc	r16, r12
     998:	1d 1d       	adc	r17, r13
     99a:	e4 82       	std	Z+4, r14	; 0x04
     99c:	f5 82       	std	Z+5, r15	; 0x05
     99e:	06 83       	std	Z+6, r16	; 0x06
     9a0:	17 83       	std	Z+7, r17	; 0x07
     9a2:	83 e0       	ldi	r24, 0x03	; 3
     9a4:	80 83       	st	Z, r24
     9a6:	24 81       	ldd	r18, Z+4	; 0x04
     9a8:	35 81       	ldd	r19, Z+5	; 0x05
     9aa:	46 81       	ldd	r20, Z+6	; 0x06
     9ac:	57 81       	ldd	r21, Z+7	; 0x07
     9ae:	57 ff       	sbrs	r21, 7
     9b0:	1a c0       	rjmp	.+52     	; 0x9e6 <_fpadd_parts+0x286>
     9b2:	c9 01       	movw	r24, r18
     9b4:	aa 27       	eor	r26, r26
     9b6:	97 fd       	sbrc	r25, 7
     9b8:	a0 95       	com	r26
     9ba:	ba 2f       	mov	r27, r26
     9bc:	81 70       	andi	r24, 0x01	; 1
     9be:	90 70       	andi	r25, 0x00	; 0
     9c0:	a0 70       	andi	r26, 0x00	; 0
     9c2:	b0 70       	andi	r27, 0x00	; 0
     9c4:	56 95       	lsr	r21
     9c6:	47 95       	ror	r20
     9c8:	37 95       	ror	r19
     9ca:	27 95       	ror	r18
     9cc:	82 2b       	or	r24, r18
     9ce:	93 2b       	or	r25, r19
     9d0:	a4 2b       	or	r26, r20
     9d2:	b5 2b       	or	r27, r21
     9d4:	84 83       	std	Z+4, r24	; 0x04
     9d6:	95 83       	std	Z+5, r25	; 0x05
     9d8:	a6 83       	std	Z+6, r26	; 0x06
     9da:	b7 83       	std	Z+7, r27	; 0x07
     9dc:	82 81       	ldd	r24, Z+2	; 0x02
     9de:	93 81       	ldd	r25, Z+3	; 0x03
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	93 83       	std	Z+3, r25	; 0x03
     9e4:	82 83       	std	Z+2, r24	; 0x02
     9e6:	df 01       	movw	r26, r30
     9e8:	01 c0       	rjmp	.+2      	; 0x9ec <_fpadd_parts+0x28c>
     9ea:	d2 01       	movw	r26, r4
     9ec:	cd 01       	movw	r24, r26
     9ee:	cd b7       	in	r28, 0x3d	; 61
     9f0:	de b7       	in	r29, 0x3e	; 62
     9f2:	e2 e1       	ldi	r30, 0x12	; 18
     9f4:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__epilogue_restores__>

000009f8 <__subsf3>:
     9f8:	a0 e2       	ldi	r26, 0x20	; 32
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	e2 e0       	ldi	r30, 0x02	; 2
     9fe:	f5 e0       	ldi	r31, 0x05	; 5
     a00:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     a04:	69 83       	std	Y+1, r22	; 0x01
     a06:	7a 83       	std	Y+2, r23	; 0x02
     a08:	8b 83       	std	Y+3, r24	; 0x03
     a0a:	9c 83       	std	Y+4, r25	; 0x04
     a0c:	2d 83       	std	Y+5, r18	; 0x05
     a0e:	3e 83       	std	Y+6, r19	; 0x06
     a10:	4f 83       	std	Y+7, r20	; 0x07
     a12:	58 87       	std	Y+8, r21	; 0x08
     a14:	e9 e0       	ldi	r30, 0x09	; 9
     a16:	ee 2e       	mov	r14, r30
     a18:	f1 2c       	mov	r15, r1
     a1a:	ec 0e       	add	r14, r28
     a1c:	fd 1e       	adc	r15, r29
     a1e:	ce 01       	movw	r24, r28
     a20:	01 96       	adiw	r24, 0x01	; 1
     a22:	b7 01       	movw	r22, r14
     a24:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     a28:	8e 01       	movw	r16, r28
     a2a:	0f 5e       	subi	r16, 0xEF	; 239
     a2c:	1f 4f       	sbci	r17, 0xFF	; 255
     a2e:	ce 01       	movw	r24, r28
     a30:	05 96       	adiw	r24, 0x05	; 5
     a32:	b8 01       	movw	r22, r16
     a34:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     a38:	8a 89       	ldd	r24, Y+18	; 0x12
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	89 27       	eor	r24, r25
     a3e:	8a 8b       	std	Y+18, r24	; 0x12
     a40:	c7 01       	movw	r24, r14
     a42:	b8 01       	movw	r22, r16
     a44:	ae 01       	movw	r20, r28
     a46:	47 5e       	subi	r20, 0xE7	; 231
     a48:	5f 4f       	sbci	r21, 0xFF	; 255
     a4a:	0e 94 b0 03 	call	0x760	; 0x760 <_fpadd_parts>
     a4e:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
     a52:	a0 96       	adiw	r28, 0x20	; 32
     a54:	e6 e0       	ldi	r30, 0x06	; 6
     a56:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000a5a <__addsf3>:
     a5a:	a0 e2       	ldi	r26, 0x20	; 32
     a5c:	b0 e0       	ldi	r27, 0x00	; 0
     a5e:	e3 e3       	ldi	r30, 0x33	; 51
     a60:	f5 e0       	ldi	r31, 0x05	; 5
     a62:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     a66:	69 83       	std	Y+1, r22	; 0x01
     a68:	7a 83       	std	Y+2, r23	; 0x02
     a6a:	8b 83       	std	Y+3, r24	; 0x03
     a6c:	9c 83       	std	Y+4, r25	; 0x04
     a6e:	2d 83       	std	Y+5, r18	; 0x05
     a70:	3e 83       	std	Y+6, r19	; 0x06
     a72:	4f 83       	std	Y+7, r20	; 0x07
     a74:	58 87       	std	Y+8, r21	; 0x08
     a76:	f9 e0       	ldi	r31, 0x09	; 9
     a78:	ef 2e       	mov	r14, r31
     a7a:	f1 2c       	mov	r15, r1
     a7c:	ec 0e       	add	r14, r28
     a7e:	fd 1e       	adc	r15, r29
     a80:	ce 01       	movw	r24, r28
     a82:	01 96       	adiw	r24, 0x01	; 1
     a84:	b7 01       	movw	r22, r14
     a86:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     a8a:	8e 01       	movw	r16, r28
     a8c:	0f 5e       	subi	r16, 0xEF	; 239
     a8e:	1f 4f       	sbci	r17, 0xFF	; 255
     a90:	ce 01       	movw	r24, r28
     a92:	05 96       	adiw	r24, 0x05	; 5
     a94:	b8 01       	movw	r22, r16
     a96:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     a9a:	c7 01       	movw	r24, r14
     a9c:	b8 01       	movw	r22, r16
     a9e:	ae 01       	movw	r20, r28
     aa0:	47 5e       	subi	r20, 0xE7	; 231
     aa2:	5f 4f       	sbci	r21, 0xFF	; 255
     aa4:	0e 94 b0 03 	call	0x760	; 0x760 <_fpadd_parts>
     aa8:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
     aac:	a0 96       	adiw	r28, 0x20	; 32
     aae:	e6 e0       	ldi	r30, 0x06	; 6
     ab0:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000ab4 <__mulsf3>:
     ab4:	a0 e2       	ldi	r26, 0x20	; 32
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
     ab8:	e0 e6       	ldi	r30, 0x60	; 96
     aba:	f5 e0       	ldi	r31, 0x05	; 5
     abc:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__prologue_saves__>
     ac0:	69 83       	std	Y+1, r22	; 0x01
     ac2:	7a 83       	std	Y+2, r23	; 0x02
     ac4:	8b 83       	std	Y+3, r24	; 0x03
     ac6:	9c 83       	std	Y+4, r25	; 0x04
     ac8:	2d 83       	std	Y+5, r18	; 0x05
     aca:	3e 83       	std	Y+6, r19	; 0x06
     acc:	4f 83       	std	Y+7, r20	; 0x07
     ace:	58 87       	std	Y+8, r21	; 0x08
     ad0:	ce 01       	movw	r24, r28
     ad2:	01 96       	adiw	r24, 0x01	; 1
     ad4:	be 01       	movw	r22, r28
     ad6:	67 5f       	subi	r22, 0xF7	; 247
     ad8:	7f 4f       	sbci	r23, 0xFF	; 255
     ada:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     ade:	ce 01       	movw	r24, r28
     ae0:	05 96       	adiw	r24, 0x05	; 5
     ae2:	be 01       	movw	r22, r28
     ae4:	6f 5e       	subi	r22, 0xEF	; 239
     ae6:	7f 4f       	sbci	r23, 0xFF	; 255
     ae8:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     aec:	99 85       	ldd	r25, Y+9	; 0x09
     aee:	92 30       	cpi	r25, 0x02	; 2
     af0:	88 f0       	brcs	.+34     	; 0xb14 <__mulsf3+0x60>
     af2:	89 89       	ldd	r24, Y+17	; 0x11
     af4:	82 30       	cpi	r24, 0x02	; 2
     af6:	c8 f0       	brcs	.+50     	; 0xb2a <__mulsf3+0x76>
     af8:	94 30       	cpi	r25, 0x04	; 4
     afa:	19 f4       	brne	.+6      	; 0xb02 <__mulsf3+0x4e>
     afc:	82 30       	cpi	r24, 0x02	; 2
     afe:	51 f4       	brne	.+20     	; 0xb14 <__mulsf3+0x60>
     b00:	04 c0       	rjmp	.+8      	; 0xb0a <__mulsf3+0x56>
     b02:	84 30       	cpi	r24, 0x04	; 4
     b04:	29 f4       	brne	.+10     	; 0xb10 <__mulsf3+0x5c>
     b06:	92 30       	cpi	r25, 0x02	; 2
     b08:	81 f4       	brne	.+32     	; 0xb2a <__mulsf3+0x76>
     b0a:	8e e6       	ldi	r24, 0x6E	; 110
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	c6 c0       	rjmp	.+396    	; 0xc9c <__mulsf3+0x1e8>
     b10:	92 30       	cpi	r25, 0x02	; 2
     b12:	49 f4       	brne	.+18     	; 0xb26 <__mulsf3+0x72>
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	9a 85       	ldd	r25, Y+10	; 0x0a
     b18:	8a 89       	ldd	r24, Y+18	; 0x12
     b1a:	98 13       	cpse	r25, r24
     b1c:	21 e0       	ldi	r18, 0x01	; 1
     b1e:	2a 87       	std	Y+10, r18	; 0x0a
     b20:	ce 01       	movw	r24, r28
     b22:	09 96       	adiw	r24, 0x09	; 9
     b24:	bb c0       	rjmp	.+374    	; 0xc9c <__mulsf3+0x1e8>
     b26:	82 30       	cpi	r24, 0x02	; 2
     b28:	49 f4       	brne	.+18     	; 0xb3c <__mulsf3+0x88>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b2e:	8a 89       	ldd	r24, Y+18	; 0x12
     b30:	98 13       	cpse	r25, r24
     b32:	21 e0       	ldi	r18, 0x01	; 1
     b34:	2a 8b       	std	Y+18, r18	; 0x12
     b36:	ce 01       	movw	r24, r28
     b38:	41 96       	adiw	r24, 0x11	; 17
     b3a:	b0 c0       	rjmp	.+352    	; 0xc9c <__mulsf3+0x1e8>
     b3c:	2d 84       	ldd	r2, Y+13	; 0x0d
     b3e:	3e 84       	ldd	r3, Y+14	; 0x0e
     b40:	4f 84       	ldd	r4, Y+15	; 0x0f
     b42:	58 88       	ldd	r5, Y+16	; 0x10
     b44:	6d 88       	ldd	r6, Y+21	; 0x15
     b46:	7e 88       	ldd	r7, Y+22	; 0x16
     b48:	8f 88       	ldd	r8, Y+23	; 0x17
     b4a:	98 8c       	ldd	r9, Y+24	; 0x18
     b4c:	ee 24       	eor	r14, r14
     b4e:	ff 24       	eor	r15, r15
     b50:	87 01       	movw	r16, r14
     b52:	aa 24       	eor	r10, r10
     b54:	bb 24       	eor	r11, r11
     b56:	65 01       	movw	r12, r10
     b58:	40 e0       	ldi	r20, 0x00	; 0
     b5a:	50 e0       	ldi	r21, 0x00	; 0
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	e0 e0       	ldi	r30, 0x00	; 0
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	c1 01       	movw	r24, r2
     b66:	81 70       	andi	r24, 0x01	; 1
     b68:	90 70       	andi	r25, 0x00	; 0
     b6a:	89 2b       	or	r24, r25
     b6c:	e9 f0       	breq	.+58     	; 0xba8 <__mulsf3+0xf4>
     b6e:	e6 0c       	add	r14, r6
     b70:	f7 1c       	adc	r15, r7
     b72:	08 1d       	adc	r16, r8
     b74:	19 1d       	adc	r17, r9
     b76:	9a 01       	movw	r18, r20
     b78:	ab 01       	movw	r20, r22
     b7a:	2a 0d       	add	r18, r10
     b7c:	3b 1d       	adc	r19, r11
     b7e:	4c 1d       	adc	r20, r12
     b80:	5d 1d       	adc	r21, r13
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	a0 e0       	ldi	r26, 0x00	; 0
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	e6 14       	cp	r14, r6
     b8c:	f7 04       	cpc	r15, r7
     b8e:	08 05       	cpc	r16, r8
     b90:	19 05       	cpc	r17, r9
     b92:	20 f4       	brcc	.+8      	; 0xb9c <__mulsf3+0xe8>
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	a0 e0       	ldi	r26, 0x00	; 0
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	ba 01       	movw	r22, r20
     b9e:	a9 01       	movw	r20, r18
     ba0:	48 0f       	add	r20, r24
     ba2:	59 1f       	adc	r21, r25
     ba4:	6a 1f       	adc	r22, r26
     ba6:	7b 1f       	adc	r23, r27
     ba8:	aa 0c       	add	r10, r10
     baa:	bb 1c       	adc	r11, r11
     bac:	cc 1c       	adc	r12, r12
     bae:	dd 1c       	adc	r13, r13
     bb0:	97 fe       	sbrs	r9, 7
     bb2:	08 c0       	rjmp	.+16     	; 0xbc4 <__mulsf3+0x110>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	a0 e0       	ldi	r26, 0x00	; 0
     bba:	b0 e0       	ldi	r27, 0x00	; 0
     bbc:	a8 2a       	or	r10, r24
     bbe:	b9 2a       	or	r11, r25
     bc0:	ca 2a       	or	r12, r26
     bc2:	db 2a       	or	r13, r27
     bc4:	31 96       	adiw	r30, 0x01	; 1
     bc6:	e0 32       	cpi	r30, 0x20	; 32
     bc8:	f1 05       	cpc	r31, r1
     bca:	49 f0       	breq	.+18     	; 0xbde <__mulsf3+0x12a>
     bcc:	66 0c       	add	r6, r6
     bce:	77 1c       	adc	r7, r7
     bd0:	88 1c       	adc	r8, r8
     bd2:	99 1c       	adc	r9, r9
     bd4:	56 94       	lsr	r5
     bd6:	47 94       	ror	r4
     bd8:	37 94       	ror	r3
     bda:	27 94       	ror	r2
     bdc:	c3 cf       	rjmp	.-122    	; 0xb64 <__mulsf3+0xb0>
     bde:	fa 85       	ldd	r31, Y+10	; 0x0a
     be0:	ea 89       	ldd	r30, Y+18	; 0x12
     be2:	2b 89       	ldd	r18, Y+19	; 0x13
     be4:	3c 89       	ldd	r19, Y+20	; 0x14
     be6:	8b 85       	ldd	r24, Y+11	; 0x0b
     be8:	9c 85       	ldd	r25, Y+12	; 0x0c
     bea:	28 0f       	add	r18, r24
     bec:	39 1f       	adc	r19, r25
     bee:	2e 5f       	subi	r18, 0xFE	; 254
     bf0:	3f 4f       	sbci	r19, 0xFF	; 255
     bf2:	17 c0       	rjmp	.+46     	; 0xc22 <__mulsf3+0x16e>
     bf4:	ca 01       	movw	r24, r20
     bf6:	81 70       	andi	r24, 0x01	; 1
     bf8:	90 70       	andi	r25, 0x00	; 0
     bfa:	89 2b       	or	r24, r25
     bfc:	61 f0       	breq	.+24     	; 0xc16 <__mulsf3+0x162>
     bfe:	16 95       	lsr	r17
     c00:	07 95       	ror	r16
     c02:	f7 94       	ror	r15
     c04:	e7 94       	ror	r14
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	a0 e0       	ldi	r26, 0x00	; 0
     c0c:	b0 e8       	ldi	r27, 0x80	; 128
     c0e:	e8 2a       	or	r14, r24
     c10:	f9 2a       	or	r15, r25
     c12:	0a 2b       	or	r16, r26
     c14:	1b 2b       	or	r17, r27
     c16:	76 95       	lsr	r23
     c18:	67 95       	ror	r22
     c1a:	57 95       	ror	r21
     c1c:	47 95       	ror	r20
     c1e:	2f 5f       	subi	r18, 0xFF	; 255
     c20:	3f 4f       	sbci	r19, 0xFF	; 255
     c22:	77 fd       	sbrc	r23, 7
     c24:	e7 cf       	rjmp	.-50     	; 0xbf4 <__mulsf3+0x140>
     c26:	0c c0       	rjmp	.+24     	; 0xc40 <__mulsf3+0x18c>
     c28:	44 0f       	add	r20, r20
     c2a:	55 1f       	adc	r21, r21
     c2c:	66 1f       	adc	r22, r22
     c2e:	77 1f       	adc	r23, r23
     c30:	17 fd       	sbrc	r17, 7
     c32:	41 60       	ori	r20, 0x01	; 1
     c34:	ee 0c       	add	r14, r14
     c36:	ff 1c       	adc	r15, r15
     c38:	00 1f       	adc	r16, r16
     c3a:	11 1f       	adc	r17, r17
     c3c:	21 50       	subi	r18, 0x01	; 1
     c3e:	30 40       	sbci	r19, 0x00	; 0
     c40:	40 30       	cpi	r20, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	59 07       	cpc	r21, r25
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	69 07       	cpc	r22, r25
     c4a:	90 e4       	ldi	r25, 0x40	; 64
     c4c:	79 07       	cpc	r23, r25
     c4e:	60 f3       	brcs	.-40     	; 0xc28 <__mulsf3+0x174>
     c50:	2b 8f       	std	Y+27, r18	; 0x1b
     c52:	3c 8f       	std	Y+28, r19	; 0x1c
     c54:	db 01       	movw	r26, r22
     c56:	ca 01       	movw	r24, r20
     c58:	8f 77       	andi	r24, 0x7F	; 127
     c5a:	90 70       	andi	r25, 0x00	; 0
     c5c:	a0 70       	andi	r26, 0x00	; 0
     c5e:	b0 70       	andi	r27, 0x00	; 0
     c60:	80 34       	cpi	r24, 0x40	; 64
     c62:	91 05       	cpc	r25, r1
     c64:	a1 05       	cpc	r26, r1
     c66:	b1 05       	cpc	r27, r1
     c68:	61 f4       	brne	.+24     	; 0xc82 <__mulsf3+0x1ce>
     c6a:	47 fd       	sbrc	r20, 7
     c6c:	0a c0       	rjmp	.+20     	; 0xc82 <__mulsf3+0x1ce>
     c6e:	e1 14       	cp	r14, r1
     c70:	f1 04       	cpc	r15, r1
     c72:	01 05       	cpc	r16, r1
     c74:	11 05       	cpc	r17, r1
     c76:	29 f0       	breq	.+10     	; 0xc82 <__mulsf3+0x1ce>
     c78:	40 5c       	subi	r20, 0xC0	; 192
     c7a:	5f 4f       	sbci	r21, 0xFF	; 255
     c7c:	6f 4f       	sbci	r22, 0xFF	; 255
     c7e:	7f 4f       	sbci	r23, 0xFF	; 255
     c80:	40 78       	andi	r20, 0x80	; 128
     c82:	1a 8e       	std	Y+26, r1	; 0x1a
     c84:	fe 17       	cp	r31, r30
     c86:	11 f0       	breq	.+4      	; 0xc8c <__mulsf3+0x1d8>
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	8a 8f       	std	Y+26, r24	; 0x1a
     c8c:	4d 8f       	std	Y+29, r20	; 0x1d
     c8e:	5e 8f       	std	Y+30, r21	; 0x1e
     c90:	6f 8f       	std	Y+31, r22	; 0x1f
     c92:	78 a3       	std	Y+32, r23	; 0x20
     c94:	83 e0       	ldi	r24, 0x03	; 3
     c96:	89 8f       	std	Y+25, r24	; 0x19
     c98:	ce 01       	movw	r24, r28
     c9a:	49 96       	adiw	r24, 0x19	; 25
     c9c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
     ca0:	a0 96       	adiw	r28, 0x20	; 32
     ca2:	e2 e1       	ldi	r30, 0x12	; 18
     ca4:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__epilogue_restores__>

00000ca8 <__divsf3>:
     ca8:	a8 e1       	ldi	r26, 0x18	; 24
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	ea e5       	ldi	r30, 0x5A	; 90
     cae:	f6 e0       	ldi	r31, 0x06	; 6
     cb0:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__prologue_saves__+0x10>
     cb4:	69 83       	std	Y+1, r22	; 0x01
     cb6:	7a 83       	std	Y+2, r23	; 0x02
     cb8:	8b 83       	std	Y+3, r24	; 0x03
     cba:	9c 83       	std	Y+4, r25	; 0x04
     cbc:	2d 83       	std	Y+5, r18	; 0x05
     cbe:	3e 83       	std	Y+6, r19	; 0x06
     cc0:	4f 83       	std	Y+7, r20	; 0x07
     cc2:	58 87       	std	Y+8, r21	; 0x08
     cc4:	b9 e0       	ldi	r27, 0x09	; 9
     cc6:	eb 2e       	mov	r14, r27
     cc8:	f1 2c       	mov	r15, r1
     cca:	ec 0e       	add	r14, r28
     ccc:	fd 1e       	adc	r15, r29
     cce:	ce 01       	movw	r24, r28
     cd0:	01 96       	adiw	r24, 0x01	; 1
     cd2:	b7 01       	movw	r22, r14
     cd4:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     cd8:	8e 01       	movw	r16, r28
     cda:	0f 5e       	subi	r16, 0xEF	; 239
     cdc:	1f 4f       	sbci	r17, 0xFF	; 255
     cde:	ce 01       	movw	r24, r28
     ce0:	05 96       	adiw	r24, 0x05	; 5
     ce2:	b8 01       	movw	r22, r16
     ce4:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     ce8:	29 85       	ldd	r18, Y+9	; 0x09
     cea:	22 30       	cpi	r18, 0x02	; 2
     cec:	08 f4       	brcc	.+2      	; 0xcf0 <__divsf3+0x48>
     cee:	7e c0       	rjmp	.+252    	; 0xdec <__divsf3+0x144>
     cf0:	39 89       	ldd	r19, Y+17	; 0x11
     cf2:	32 30       	cpi	r19, 0x02	; 2
     cf4:	10 f4       	brcc	.+4      	; 0xcfa <__divsf3+0x52>
     cf6:	b8 01       	movw	r22, r16
     cf8:	7c c0       	rjmp	.+248    	; 0xdf2 <__divsf3+0x14a>
     cfa:	8a 85       	ldd	r24, Y+10	; 0x0a
     cfc:	9a 89       	ldd	r25, Y+18	; 0x12
     cfe:	89 27       	eor	r24, r25
     d00:	8a 87       	std	Y+10, r24	; 0x0a
     d02:	24 30       	cpi	r18, 0x04	; 4
     d04:	11 f0       	breq	.+4      	; 0xd0a <__divsf3+0x62>
     d06:	22 30       	cpi	r18, 0x02	; 2
     d08:	31 f4       	brne	.+12     	; 0xd16 <__divsf3+0x6e>
     d0a:	23 17       	cp	r18, r19
     d0c:	09 f0       	breq	.+2      	; 0xd10 <__divsf3+0x68>
     d0e:	6e c0       	rjmp	.+220    	; 0xdec <__divsf3+0x144>
     d10:	6e e6       	ldi	r22, 0x6E	; 110
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	6e c0       	rjmp	.+220    	; 0xdf2 <__divsf3+0x14a>
     d16:	34 30       	cpi	r19, 0x04	; 4
     d18:	39 f4       	brne	.+14     	; 0xd28 <__divsf3+0x80>
     d1a:	1d 86       	std	Y+13, r1	; 0x0d
     d1c:	1e 86       	std	Y+14, r1	; 0x0e
     d1e:	1f 86       	std	Y+15, r1	; 0x0f
     d20:	18 8a       	std	Y+16, r1	; 0x10
     d22:	1c 86       	std	Y+12, r1	; 0x0c
     d24:	1b 86       	std	Y+11, r1	; 0x0b
     d26:	04 c0       	rjmp	.+8      	; 0xd30 <__divsf3+0x88>
     d28:	32 30       	cpi	r19, 0x02	; 2
     d2a:	21 f4       	brne	.+8      	; 0xd34 <__divsf3+0x8c>
     d2c:	84 e0       	ldi	r24, 0x04	; 4
     d2e:	89 87       	std	Y+9, r24	; 0x09
     d30:	b7 01       	movw	r22, r14
     d32:	5f c0       	rjmp	.+190    	; 0xdf2 <__divsf3+0x14a>
     d34:	2b 85       	ldd	r18, Y+11	; 0x0b
     d36:	3c 85       	ldd	r19, Y+12	; 0x0c
     d38:	8b 89       	ldd	r24, Y+19	; 0x13
     d3a:	9c 89       	ldd	r25, Y+20	; 0x14
     d3c:	28 1b       	sub	r18, r24
     d3e:	39 0b       	sbc	r19, r25
     d40:	3c 87       	std	Y+12, r19	; 0x0c
     d42:	2b 87       	std	Y+11, r18	; 0x0b
     d44:	ed 84       	ldd	r14, Y+13	; 0x0d
     d46:	fe 84       	ldd	r15, Y+14	; 0x0e
     d48:	0f 85       	ldd	r16, Y+15	; 0x0f
     d4a:	18 89       	ldd	r17, Y+16	; 0x10
     d4c:	ad 88       	ldd	r10, Y+21	; 0x15
     d4e:	be 88       	ldd	r11, Y+22	; 0x16
     d50:	cf 88       	ldd	r12, Y+23	; 0x17
     d52:	d8 8c       	ldd	r13, Y+24	; 0x18
     d54:	ea 14       	cp	r14, r10
     d56:	fb 04       	cpc	r15, r11
     d58:	0c 05       	cpc	r16, r12
     d5a:	1d 05       	cpc	r17, r13
     d5c:	40 f4       	brcc	.+16     	; 0xd6e <__divsf3+0xc6>
     d5e:	ee 0c       	add	r14, r14
     d60:	ff 1c       	adc	r15, r15
     d62:	00 1f       	adc	r16, r16
     d64:	11 1f       	adc	r17, r17
     d66:	21 50       	subi	r18, 0x01	; 1
     d68:	30 40       	sbci	r19, 0x00	; 0
     d6a:	3c 87       	std	Y+12, r19	; 0x0c
     d6c:	2b 87       	std	Y+11, r18	; 0x0b
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	a0 e0       	ldi	r26, 0x00	; 0
     d7c:	b0 e4       	ldi	r27, 0x40	; 64
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	ea 14       	cp	r14, r10
     d84:	fb 04       	cpc	r15, r11
     d86:	0c 05       	cpc	r16, r12
     d88:	1d 05       	cpc	r17, r13
     d8a:	40 f0       	brcs	.+16     	; 0xd9c <__divsf3+0xf4>
     d8c:	28 2b       	or	r18, r24
     d8e:	39 2b       	or	r19, r25
     d90:	4a 2b       	or	r20, r26
     d92:	5b 2b       	or	r21, r27
     d94:	ea 18       	sub	r14, r10
     d96:	fb 08       	sbc	r15, r11
     d98:	0c 09       	sbc	r16, r12
     d9a:	1d 09       	sbc	r17, r13
     d9c:	b6 95       	lsr	r27
     d9e:	a7 95       	ror	r26
     da0:	97 95       	ror	r25
     da2:	87 95       	ror	r24
     da4:	ee 0c       	add	r14, r14
     da6:	ff 1c       	adc	r15, r15
     da8:	00 1f       	adc	r16, r16
     daa:	11 1f       	adc	r17, r17
     dac:	6f 5f       	subi	r22, 0xFF	; 255
     dae:	7f 4f       	sbci	r23, 0xFF	; 255
     db0:	6f 31       	cpi	r22, 0x1F	; 31
     db2:	71 05       	cpc	r23, r1
     db4:	31 f7       	brne	.-52     	; 0xd82 <__divsf3+0xda>
     db6:	da 01       	movw	r26, r20
     db8:	c9 01       	movw	r24, r18
     dba:	8f 77       	andi	r24, 0x7F	; 127
     dbc:	90 70       	andi	r25, 0x00	; 0
     dbe:	a0 70       	andi	r26, 0x00	; 0
     dc0:	b0 70       	andi	r27, 0x00	; 0
     dc2:	80 34       	cpi	r24, 0x40	; 64
     dc4:	91 05       	cpc	r25, r1
     dc6:	a1 05       	cpc	r26, r1
     dc8:	b1 05       	cpc	r27, r1
     dca:	61 f4       	brne	.+24     	; 0xde4 <__divsf3+0x13c>
     dcc:	27 fd       	sbrc	r18, 7
     dce:	0a c0       	rjmp	.+20     	; 0xde4 <__divsf3+0x13c>
     dd0:	e1 14       	cp	r14, r1
     dd2:	f1 04       	cpc	r15, r1
     dd4:	01 05       	cpc	r16, r1
     dd6:	11 05       	cpc	r17, r1
     dd8:	29 f0       	breq	.+10     	; 0xde4 <__divsf3+0x13c>
     dda:	20 5c       	subi	r18, 0xC0	; 192
     ddc:	3f 4f       	sbci	r19, 0xFF	; 255
     dde:	4f 4f       	sbci	r20, 0xFF	; 255
     de0:	5f 4f       	sbci	r21, 0xFF	; 255
     de2:	20 78       	andi	r18, 0x80	; 128
     de4:	2d 87       	std	Y+13, r18	; 0x0d
     de6:	3e 87       	std	Y+14, r19	; 0x0e
     de8:	4f 87       	std	Y+15, r20	; 0x0f
     dea:	58 8b       	std	Y+16, r21	; 0x10
     dec:	be 01       	movw	r22, r28
     dee:	67 5f       	subi	r22, 0xF7	; 247
     df0:	7f 4f       	sbci	r23, 0xFF	; 255
     df2:	cb 01       	movw	r24, r22
     df4:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
     df8:	68 96       	adiw	r28, 0x18	; 24
     dfa:	ea e0       	ldi	r30, 0x0A	; 10
     dfc:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__epilogue_restores__+0x10>

00000e00 <__eqsf2>:
     e00:	a8 e1       	ldi	r26, 0x18	; 24
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	e6 e0       	ldi	r30, 0x06	; 6
     e06:	f7 e0       	ldi	r31, 0x07	; 7
     e08:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     e0c:	69 83       	std	Y+1, r22	; 0x01
     e0e:	7a 83       	std	Y+2, r23	; 0x02
     e10:	8b 83       	std	Y+3, r24	; 0x03
     e12:	9c 83       	std	Y+4, r25	; 0x04
     e14:	2d 83       	std	Y+5, r18	; 0x05
     e16:	3e 83       	std	Y+6, r19	; 0x06
     e18:	4f 83       	std	Y+7, r20	; 0x07
     e1a:	58 87       	std	Y+8, r21	; 0x08
     e1c:	89 e0       	ldi	r24, 0x09	; 9
     e1e:	e8 2e       	mov	r14, r24
     e20:	f1 2c       	mov	r15, r1
     e22:	ec 0e       	add	r14, r28
     e24:	fd 1e       	adc	r15, r29
     e26:	ce 01       	movw	r24, r28
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	b7 01       	movw	r22, r14
     e2c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     e30:	8e 01       	movw	r16, r28
     e32:	0f 5e       	subi	r16, 0xEF	; 239
     e34:	1f 4f       	sbci	r17, 0xFF	; 255
     e36:	ce 01       	movw	r24, r28
     e38:	05 96       	adiw	r24, 0x05	; 5
     e3a:	b8 01       	movw	r22, r16
     e3c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     e40:	89 85       	ldd	r24, Y+9	; 0x09
     e42:	82 30       	cpi	r24, 0x02	; 2
     e44:	40 f0       	brcs	.+16     	; 0xe56 <__eqsf2+0x56>
     e46:	89 89       	ldd	r24, Y+17	; 0x11
     e48:	82 30       	cpi	r24, 0x02	; 2
     e4a:	28 f0       	brcs	.+10     	; 0xe56 <__eqsf2+0x56>
     e4c:	c7 01       	movw	r24, r14
     e4e:	b8 01       	movw	r22, r16
     e50:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fpcmp_parts_f>
     e54:	01 c0       	rjmp	.+2      	; 0xe58 <__eqsf2+0x58>
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	68 96       	adiw	r28, 0x18	; 24
     e5a:	e6 e0       	ldi	r30, 0x06	; 6
     e5c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000e60 <__gtsf2>:
     e60:	a8 e1       	ldi	r26, 0x18	; 24
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	e6 e3       	ldi	r30, 0x36	; 54
     e66:	f7 e0       	ldi	r31, 0x07	; 7
     e68:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     e6c:	69 83       	std	Y+1, r22	; 0x01
     e6e:	7a 83       	std	Y+2, r23	; 0x02
     e70:	8b 83       	std	Y+3, r24	; 0x03
     e72:	9c 83       	std	Y+4, r25	; 0x04
     e74:	2d 83       	std	Y+5, r18	; 0x05
     e76:	3e 83       	std	Y+6, r19	; 0x06
     e78:	4f 83       	std	Y+7, r20	; 0x07
     e7a:	58 87       	std	Y+8, r21	; 0x08
     e7c:	89 e0       	ldi	r24, 0x09	; 9
     e7e:	e8 2e       	mov	r14, r24
     e80:	f1 2c       	mov	r15, r1
     e82:	ec 0e       	add	r14, r28
     e84:	fd 1e       	adc	r15, r29
     e86:	ce 01       	movw	r24, r28
     e88:	01 96       	adiw	r24, 0x01	; 1
     e8a:	b7 01       	movw	r22, r14
     e8c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     e90:	8e 01       	movw	r16, r28
     e92:	0f 5e       	subi	r16, 0xEF	; 239
     e94:	1f 4f       	sbci	r17, 0xFF	; 255
     e96:	ce 01       	movw	r24, r28
     e98:	05 96       	adiw	r24, 0x05	; 5
     e9a:	b8 01       	movw	r22, r16
     e9c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     ea0:	89 85       	ldd	r24, Y+9	; 0x09
     ea2:	82 30       	cpi	r24, 0x02	; 2
     ea4:	40 f0       	brcs	.+16     	; 0xeb6 <__gtsf2+0x56>
     ea6:	89 89       	ldd	r24, Y+17	; 0x11
     ea8:	82 30       	cpi	r24, 0x02	; 2
     eaa:	28 f0       	brcs	.+10     	; 0xeb6 <__gtsf2+0x56>
     eac:	c7 01       	movw	r24, r14
     eae:	b8 01       	movw	r22, r16
     eb0:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fpcmp_parts_f>
     eb4:	01 c0       	rjmp	.+2      	; 0xeb8 <__gtsf2+0x58>
     eb6:	8f ef       	ldi	r24, 0xFF	; 255
     eb8:	68 96       	adiw	r28, 0x18	; 24
     eba:	e6 e0       	ldi	r30, 0x06	; 6
     ebc:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000ec0 <__gesf2>:
     ec0:	a8 e1       	ldi	r26, 0x18	; 24
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e6 e6       	ldi	r30, 0x66	; 102
     ec6:	f7 e0       	ldi	r31, 0x07	; 7
     ec8:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     ecc:	69 83       	std	Y+1, r22	; 0x01
     ece:	7a 83       	std	Y+2, r23	; 0x02
     ed0:	8b 83       	std	Y+3, r24	; 0x03
     ed2:	9c 83       	std	Y+4, r25	; 0x04
     ed4:	2d 83       	std	Y+5, r18	; 0x05
     ed6:	3e 83       	std	Y+6, r19	; 0x06
     ed8:	4f 83       	std	Y+7, r20	; 0x07
     eda:	58 87       	std	Y+8, r21	; 0x08
     edc:	89 e0       	ldi	r24, 0x09	; 9
     ede:	e8 2e       	mov	r14, r24
     ee0:	f1 2c       	mov	r15, r1
     ee2:	ec 0e       	add	r14, r28
     ee4:	fd 1e       	adc	r15, r29
     ee6:	ce 01       	movw	r24, r28
     ee8:	01 96       	adiw	r24, 0x01	; 1
     eea:	b7 01       	movw	r22, r14
     eec:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     ef0:	8e 01       	movw	r16, r28
     ef2:	0f 5e       	subi	r16, 0xEF	; 239
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	ce 01       	movw	r24, r28
     ef8:	05 96       	adiw	r24, 0x05	; 5
     efa:	b8 01       	movw	r22, r16
     efc:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     f00:	89 85       	ldd	r24, Y+9	; 0x09
     f02:	82 30       	cpi	r24, 0x02	; 2
     f04:	40 f0       	brcs	.+16     	; 0xf16 <__gesf2+0x56>
     f06:	89 89       	ldd	r24, Y+17	; 0x11
     f08:	82 30       	cpi	r24, 0x02	; 2
     f0a:	28 f0       	brcs	.+10     	; 0xf16 <__gesf2+0x56>
     f0c:	c7 01       	movw	r24, r14
     f0e:	b8 01       	movw	r22, r16
     f10:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fpcmp_parts_f>
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <__gesf2+0x58>
     f16:	8f ef       	ldi	r24, 0xFF	; 255
     f18:	68 96       	adiw	r28, 0x18	; 24
     f1a:	e6 e0       	ldi	r30, 0x06	; 6
     f1c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000f20 <__ltsf2>:
     f20:	a8 e1       	ldi	r26, 0x18	; 24
     f22:	b0 e0       	ldi	r27, 0x00	; 0
     f24:	e6 e9       	ldi	r30, 0x96	; 150
     f26:	f7 e0       	ldi	r31, 0x07	; 7
     f28:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     f2c:	69 83       	std	Y+1, r22	; 0x01
     f2e:	7a 83       	std	Y+2, r23	; 0x02
     f30:	8b 83       	std	Y+3, r24	; 0x03
     f32:	9c 83       	std	Y+4, r25	; 0x04
     f34:	2d 83       	std	Y+5, r18	; 0x05
     f36:	3e 83       	std	Y+6, r19	; 0x06
     f38:	4f 83       	std	Y+7, r20	; 0x07
     f3a:	58 87       	std	Y+8, r21	; 0x08
     f3c:	89 e0       	ldi	r24, 0x09	; 9
     f3e:	e8 2e       	mov	r14, r24
     f40:	f1 2c       	mov	r15, r1
     f42:	ec 0e       	add	r14, r28
     f44:	fd 1e       	adc	r15, r29
     f46:	ce 01       	movw	r24, r28
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	b7 01       	movw	r22, r14
     f4c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     f50:	8e 01       	movw	r16, r28
     f52:	0f 5e       	subi	r16, 0xEF	; 239
     f54:	1f 4f       	sbci	r17, 0xFF	; 255
     f56:	ce 01       	movw	r24, r28
     f58:	05 96       	adiw	r24, 0x05	; 5
     f5a:	b8 01       	movw	r22, r16
     f5c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     f60:	89 85       	ldd	r24, Y+9	; 0x09
     f62:	82 30       	cpi	r24, 0x02	; 2
     f64:	40 f0       	brcs	.+16     	; 0xf76 <__ltsf2+0x56>
     f66:	89 89       	ldd	r24, Y+17	; 0x11
     f68:	82 30       	cpi	r24, 0x02	; 2
     f6a:	28 f0       	brcs	.+10     	; 0xf76 <__ltsf2+0x56>
     f6c:	c7 01       	movw	r24, r14
     f6e:	b8 01       	movw	r22, r16
     f70:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fpcmp_parts_f>
     f74:	01 c0       	rjmp	.+2      	; 0xf78 <__ltsf2+0x58>
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	68 96       	adiw	r28, 0x18	; 24
     f7a:	e6 e0       	ldi	r30, 0x06	; 6
     f7c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000f80 <__lesf2>:
     f80:	a8 e1       	ldi	r26, 0x18	; 24
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	e6 ec       	ldi	r30, 0xC6	; 198
     f86:	f7 e0       	ldi	r31, 0x07	; 7
     f88:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__prologue_saves__+0x18>
     f8c:	69 83       	std	Y+1, r22	; 0x01
     f8e:	7a 83       	std	Y+2, r23	; 0x02
     f90:	8b 83       	std	Y+3, r24	; 0x03
     f92:	9c 83       	std	Y+4, r25	; 0x04
     f94:	2d 83       	std	Y+5, r18	; 0x05
     f96:	3e 83       	std	Y+6, r19	; 0x06
     f98:	4f 83       	std	Y+7, r20	; 0x07
     f9a:	58 87       	std	Y+8, r21	; 0x08
     f9c:	89 e0       	ldi	r24, 0x09	; 9
     f9e:	e8 2e       	mov	r14, r24
     fa0:	f1 2c       	mov	r15, r1
     fa2:	ec 0e       	add	r14, r28
     fa4:	fd 1e       	adc	r15, r29
     fa6:	ce 01       	movw	r24, r28
     fa8:	01 96       	adiw	r24, 0x01	; 1
     faa:	b7 01       	movw	r22, r14
     fac:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     fb0:	8e 01       	movw	r16, r28
     fb2:	0f 5e       	subi	r16, 0xEF	; 239
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	ce 01       	movw	r24, r28
     fb8:	05 96       	adiw	r24, 0x05	; 5
     fba:	b8 01       	movw	r22, r16
     fbc:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
     fc0:	89 85       	ldd	r24, Y+9	; 0x09
     fc2:	82 30       	cpi	r24, 0x02	; 2
     fc4:	40 f0       	brcs	.+16     	; 0xfd6 <__lesf2+0x56>
     fc6:	89 89       	ldd	r24, Y+17	; 0x11
     fc8:	82 30       	cpi	r24, 0x02	; 2
     fca:	28 f0       	brcs	.+10     	; 0xfd6 <__lesf2+0x56>
     fcc:	c7 01       	movw	r24, r14
     fce:	b8 01       	movw	r22, r16
     fd0:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fpcmp_parts_f>
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <__lesf2+0x58>
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	68 96       	adiw	r28, 0x18	; 24
     fda:	e6 e0       	ldi	r30, 0x06	; 6
     fdc:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__epilogue_restores__+0x18>

00000fe0 <__floatsisf>:
     fe0:	a8 e0       	ldi	r26, 0x08	; 8
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	e6 ef       	ldi	r30, 0xF6	; 246
     fe6:	f7 e0       	ldi	r31, 0x07	; 7
     fe8:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__prologue_saves__+0x12>
     fec:	9b 01       	movw	r18, r22
     fee:	ac 01       	movw	r20, r24
     ff0:	83 e0       	ldi	r24, 0x03	; 3
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	da 01       	movw	r26, r20
     ff6:	c9 01       	movw	r24, r18
     ff8:	88 27       	eor	r24, r24
     ffa:	b7 fd       	sbrc	r27, 7
     ffc:	83 95       	inc	r24
     ffe:	99 27       	eor	r25, r25
    1000:	aa 27       	eor	r26, r26
    1002:	bb 27       	eor	r27, r27
    1004:	b8 2e       	mov	r11, r24
    1006:	21 15       	cp	r18, r1
    1008:	31 05       	cpc	r19, r1
    100a:	41 05       	cpc	r20, r1
    100c:	51 05       	cpc	r21, r1
    100e:	19 f4       	brne	.+6      	; 0x1016 <__floatsisf+0x36>
    1010:	82 e0       	ldi	r24, 0x02	; 2
    1012:	89 83       	std	Y+1, r24	; 0x01
    1014:	3a c0       	rjmp	.+116    	; 0x108a <__floatsisf+0xaa>
    1016:	88 23       	and	r24, r24
    1018:	a9 f0       	breq	.+42     	; 0x1044 <__floatsisf+0x64>
    101a:	20 30       	cpi	r18, 0x00	; 0
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	38 07       	cpc	r19, r24
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	48 07       	cpc	r20, r24
    1024:	80 e8       	ldi	r24, 0x80	; 128
    1026:	58 07       	cpc	r21, r24
    1028:	29 f4       	brne	.+10     	; 0x1034 <__floatsisf+0x54>
    102a:	60 e0       	ldi	r22, 0x00	; 0
    102c:	70 e0       	ldi	r23, 0x00	; 0
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	9f ec       	ldi	r25, 0xCF	; 207
    1032:	30 c0       	rjmp	.+96     	; 0x1094 <__floatsisf+0xb4>
    1034:	ee 24       	eor	r14, r14
    1036:	ff 24       	eor	r15, r15
    1038:	87 01       	movw	r16, r14
    103a:	e2 1a       	sub	r14, r18
    103c:	f3 0a       	sbc	r15, r19
    103e:	04 0b       	sbc	r16, r20
    1040:	15 0b       	sbc	r17, r21
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <__floatsisf+0x68>
    1044:	79 01       	movw	r14, r18
    1046:	8a 01       	movw	r16, r20
    1048:	8e e1       	ldi	r24, 0x1E	; 30
    104a:	c8 2e       	mov	r12, r24
    104c:	d1 2c       	mov	r13, r1
    104e:	dc 82       	std	Y+4, r13	; 0x04
    1050:	cb 82       	std	Y+3, r12	; 0x03
    1052:	ed 82       	std	Y+5, r14	; 0x05
    1054:	fe 82       	std	Y+6, r15	; 0x06
    1056:	0f 83       	std	Y+7, r16	; 0x07
    1058:	18 87       	std	Y+8, r17	; 0x08
    105a:	c8 01       	movw	r24, r16
    105c:	b7 01       	movw	r22, r14
    105e:	0e 94 1b 09 	call	0x1236	; 0x1236 <__clzsi2>
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	18 16       	cp	r1, r24
    1066:	19 06       	cpc	r1, r25
    1068:	84 f4       	brge	.+32     	; 0x108a <__floatsisf+0xaa>
    106a:	08 2e       	mov	r0, r24
    106c:	04 c0       	rjmp	.+8      	; 0x1076 <__floatsisf+0x96>
    106e:	ee 0c       	add	r14, r14
    1070:	ff 1c       	adc	r15, r15
    1072:	00 1f       	adc	r16, r16
    1074:	11 1f       	adc	r17, r17
    1076:	0a 94       	dec	r0
    1078:	d2 f7       	brpl	.-12     	; 0x106e <__floatsisf+0x8e>
    107a:	ed 82       	std	Y+5, r14	; 0x05
    107c:	fe 82       	std	Y+6, r15	; 0x06
    107e:	0f 83       	std	Y+7, r16	; 0x07
    1080:	18 87       	std	Y+8, r17	; 0x08
    1082:	c8 1a       	sub	r12, r24
    1084:	d9 0a       	sbc	r13, r25
    1086:	dc 82       	std	Y+4, r13	; 0x04
    1088:	cb 82       	std	Y+3, r12	; 0x03
    108a:	ba 82       	std	Y+2, r11	; 0x02
    108c:	ce 01       	movw	r24, r28
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
    1094:	28 96       	adiw	r28, 0x08	; 8
    1096:	e9 e0       	ldi	r30, 0x09	; 9
    1098:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__epilogue_restores__+0x12>

0000109c <__fixsfsi>:
    109c:	ac e0       	ldi	r26, 0x0C	; 12
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	e4 e5       	ldi	r30, 0x54	; 84
    10a2:	f8 e0       	ldi	r31, 0x08	; 8
    10a4:	0c 94 20 0b 	jmp	0x1640	; 0x1640 <__prologue_saves__+0x20>
    10a8:	69 83       	std	Y+1, r22	; 0x01
    10aa:	7a 83       	std	Y+2, r23	; 0x02
    10ac:	8b 83       	std	Y+3, r24	; 0x03
    10ae:	9c 83       	std	Y+4, r25	; 0x04
    10b0:	ce 01       	movw	r24, r28
    10b2:	01 96       	adiw	r24, 0x01	; 1
    10b4:	be 01       	movw	r22, r28
    10b6:	6b 5f       	subi	r22, 0xFB	; 251
    10b8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ba:	0e 94 3f 0a 	call	0x147e	; 0x147e <__unpack_f>
    10be:	8d 81       	ldd	r24, Y+5	; 0x05
    10c0:	82 30       	cpi	r24, 0x02	; 2
    10c2:	61 f1       	breq	.+88     	; 0x111c <__fixsfsi+0x80>
    10c4:	82 30       	cpi	r24, 0x02	; 2
    10c6:	50 f1       	brcs	.+84     	; 0x111c <__fixsfsi+0x80>
    10c8:	84 30       	cpi	r24, 0x04	; 4
    10ca:	21 f4       	brne	.+8      	; 0x10d4 <__fixsfsi+0x38>
    10cc:	8e 81       	ldd	r24, Y+6	; 0x06
    10ce:	88 23       	and	r24, r24
    10d0:	51 f1       	breq	.+84     	; 0x1126 <__fixsfsi+0x8a>
    10d2:	2e c0       	rjmp	.+92     	; 0x1130 <__fixsfsi+0x94>
    10d4:	2f 81       	ldd	r18, Y+7	; 0x07
    10d6:	38 85       	ldd	r19, Y+8	; 0x08
    10d8:	37 fd       	sbrc	r19, 7
    10da:	20 c0       	rjmp	.+64     	; 0x111c <__fixsfsi+0x80>
    10dc:	6e 81       	ldd	r22, Y+6	; 0x06
    10de:	2f 31       	cpi	r18, 0x1F	; 31
    10e0:	31 05       	cpc	r19, r1
    10e2:	1c f0       	brlt	.+6      	; 0x10ea <__fixsfsi+0x4e>
    10e4:	66 23       	and	r22, r22
    10e6:	f9 f0       	breq	.+62     	; 0x1126 <__fixsfsi+0x8a>
    10e8:	23 c0       	rjmp	.+70     	; 0x1130 <__fixsfsi+0x94>
    10ea:	8e e1       	ldi	r24, 0x1E	; 30
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	82 1b       	sub	r24, r18
    10f0:	93 0b       	sbc	r25, r19
    10f2:	29 85       	ldd	r18, Y+9	; 0x09
    10f4:	3a 85       	ldd	r19, Y+10	; 0x0a
    10f6:	4b 85       	ldd	r20, Y+11	; 0x0b
    10f8:	5c 85       	ldd	r21, Y+12	; 0x0c
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__fixsfsi+0x68>
    10fc:	56 95       	lsr	r21
    10fe:	47 95       	ror	r20
    1100:	37 95       	ror	r19
    1102:	27 95       	ror	r18
    1104:	8a 95       	dec	r24
    1106:	d2 f7       	brpl	.-12     	; 0x10fc <__fixsfsi+0x60>
    1108:	66 23       	and	r22, r22
    110a:	b1 f0       	breq	.+44     	; 0x1138 <__fixsfsi+0x9c>
    110c:	50 95       	com	r21
    110e:	40 95       	com	r20
    1110:	30 95       	com	r19
    1112:	21 95       	neg	r18
    1114:	3f 4f       	sbci	r19, 0xFF	; 255
    1116:	4f 4f       	sbci	r20, 0xFF	; 255
    1118:	5f 4f       	sbci	r21, 0xFF	; 255
    111a:	0e c0       	rjmp	.+28     	; 0x1138 <__fixsfsi+0x9c>
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e0       	ldi	r20, 0x00	; 0
    1122:	50 e0       	ldi	r21, 0x00	; 0
    1124:	09 c0       	rjmp	.+18     	; 0x1138 <__fixsfsi+0x9c>
    1126:	2f ef       	ldi	r18, 0xFF	; 255
    1128:	3f ef       	ldi	r19, 0xFF	; 255
    112a:	4f ef       	ldi	r20, 0xFF	; 255
    112c:	5f e7       	ldi	r21, 0x7F	; 127
    112e:	04 c0       	rjmp	.+8      	; 0x1138 <__fixsfsi+0x9c>
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	40 e0       	ldi	r20, 0x00	; 0
    1136:	50 e8       	ldi	r21, 0x80	; 128
    1138:	b9 01       	movw	r22, r18
    113a:	ca 01       	movw	r24, r20
    113c:	2c 96       	adiw	r28, 0x0c	; 12
    113e:	e2 e0       	ldi	r30, 0x02	; 2
    1140:	0c 94 3c 0b 	jmp	0x1678	; 0x1678 <__epilogue_restores__+0x20>

00001144 <__floatunsisf>:
    1144:	a8 e0       	ldi	r26, 0x08	; 8
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	e8 ea       	ldi	r30, 0xA8	; 168
    114a:	f8 e0       	ldi	r31, 0x08	; 8
    114c:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__prologue_saves__+0x10>
    1150:	7b 01       	movw	r14, r22
    1152:	8c 01       	movw	r16, r24
    1154:	61 15       	cp	r22, r1
    1156:	71 05       	cpc	r23, r1
    1158:	81 05       	cpc	r24, r1
    115a:	91 05       	cpc	r25, r1
    115c:	19 f4       	brne	.+6      	; 0x1164 <__floatunsisf+0x20>
    115e:	82 e0       	ldi	r24, 0x02	; 2
    1160:	89 83       	std	Y+1, r24	; 0x01
    1162:	60 c0       	rjmp	.+192    	; 0x1224 <__floatunsisf+0xe0>
    1164:	83 e0       	ldi	r24, 0x03	; 3
    1166:	89 83       	std	Y+1, r24	; 0x01
    1168:	8e e1       	ldi	r24, 0x1E	; 30
    116a:	c8 2e       	mov	r12, r24
    116c:	d1 2c       	mov	r13, r1
    116e:	dc 82       	std	Y+4, r13	; 0x04
    1170:	cb 82       	std	Y+3, r12	; 0x03
    1172:	ed 82       	std	Y+5, r14	; 0x05
    1174:	fe 82       	std	Y+6, r15	; 0x06
    1176:	0f 83       	std	Y+7, r16	; 0x07
    1178:	18 87       	std	Y+8, r17	; 0x08
    117a:	c8 01       	movw	r24, r16
    117c:	b7 01       	movw	r22, r14
    117e:	0e 94 1b 09 	call	0x1236	; 0x1236 <__clzsi2>
    1182:	fc 01       	movw	r30, r24
    1184:	31 97       	sbiw	r30, 0x01	; 1
    1186:	f7 ff       	sbrs	r31, 7
    1188:	3b c0       	rjmp	.+118    	; 0x1200 <__floatunsisf+0xbc>
    118a:	22 27       	eor	r18, r18
    118c:	33 27       	eor	r19, r19
    118e:	2e 1b       	sub	r18, r30
    1190:	3f 0b       	sbc	r19, r31
    1192:	57 01       	movw	r10, r14
    1194:	68 01       	movw	r12, r16
    1196:	02 2e       	mov	r0, r18
    1198:	04 c0       	rjmp	.+8      	; 0x11a2 <__floatunsisf+0x5e>
    119a:	d6 94       	lsr	r13
    119c:	c7 94       	ror	r12
    119e:	b7 94       	ror	r11
    11a0:	a7 94       	ror	r10
    11a2:	0a 94       	dec	r0
    11a4:	d2 f7       	brpl	.-12     	; 0x119a <__floatunsisf+0x56>
    11a6:	40 e0       	ldi	r20, 0x00	; 0
    11a8:	50 e0       	ldi	r21, 0x00	; 0
    11aa:	60 e0       	ldi	r22, 0x00	; 0
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	a0 e0       	ldi	r26, 0x00	; 0
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	04 c0       	rjmp	.+8      	; 0x11c0 <__floatunsisf+0x7c>
    11b8:	88 0f       	add	r24, r24
    11ba:	99 1f       	adc	r25, r25
    11bc:	aa 1f       	adc	r26, r26
    11be:	bb 1f       	adc	r27, r27
    11c0:	2a 95       	dec	r18
    11c2:	d2 f7       	brpl	.-12     	; 0x11b8 <__floatunsisf+0x74>
    11c4:	01 97       	sbiw	r24, 0x01	; 1
    11c6:	a1 09       	sbc	r26, r1
    11c8:	b1 09       	sbc	r27, r1
    11ca:	8e 21       	and	r24, r14
    11cc:	9f 21       	and	r25, r15
    11ce:	a0 23       	and	r26, r16
    11d0:	b1 23       	and	r27, r17
    11d2:	00 97       	sbiw	r24, 0x00	; 0
    11d4:	a1 05       	cpc	r26, r1
    11d6:	b1 05       	cpc	r27, r1
    11d8:	21 f0       	breq	.+8      	; 0x11e2 <__floatunsisf+0x9e>
    11da:	41 e0       	ldi	r20, 0x01	; 1
    11dc:	50 e0       	ldi	r21, 0x00	; 0
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	70 e0       	ldi	r23, 0x00	; 0
    11e2:	4a 29       	or	r20, r10
    11e4:	5b 29       	or	r21, r11
    11e6:	6c 29       	or	r22, r12
    11e8:	7d 29       	or	r23, r13
    11ea:	4d 83       	std	Y+5, r20	; 0x05
    11ec:	5e 83       	std	Y+6, r21	; 0x06
    11ee:	6f 83       	std	Y+7, r22	; 0x07
    11f0:	78 87       	std	Y+8, r23	; 0x08
    11f2:	8e e1       	ldi	r24, 0x1E	; 30
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	8e 1b       	sub	r24, r30
    11f8:	9f 0b       	sbc	r25, r31
    11fa:	9c 83       	std	Y+4, r25	; 0x04
    11fc:	8b 83       	std	Y+3, r24	; 0x03
    11fe:	12 c0       	rjmp	.+36     	; 0x1224 <__floatunsisf+0xe0>
    1200:	30 97       	sbiw	r30, 0x00	; 0
    1202:	81 f0       	breq	.+32     	; 0x1224 <__floatunsisf+0xe0>
    1204:	0e 2e       	mov	r0, r30
    1206:	04 c0       	rjmp	.+8      	; 0x1210 <__floatunsisf+0xcc>
    1208:	ee 0c       	add	r14, r14
    120a:	ff 1c       	adc	r15, r15
    120c:	00 1f       	adc	r16, r16
    120e:	11 1f       	adc	r17, r17
    1210:	0a 94       	dec	r0
    1212:	d2 f7       	brpl	.-12     	; 0x1208 <__floatunsisf+0xc4>
    1214:	ed 82       	std	Y+5, r14	; 0x05
    1216:	fe 82       	std	Y+6, r15	; 0x06
    1218:	0f 83       	std	Y+7, r16	; 0x07
    121a:	18 87       	std	Y+8, r17	; 0x08
    121c:	ce 1a       	sub	r12, r30
    121e:	df 0a       	sbc	r13, r31
    1220:	dc 82       	std	Y+4, r13	; 0x04
    1222:	cb 82       	std	Y+3, r12	; 0x03
    1224:	1a 82       	std	Y+2, r1	; 0x02
    1226:	ce 01       	movw	r24, r28
    1228:	01 96       	adiw	r24, 0x01	; 1
    122a:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__pack_f>
    122e:	28 96       	adiw	r28, 0x08	; 8
    1230:	ea e0       	ldi	r30, 0x0A	; 10
    1232:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__epilogue_restores__+0x10>

00001236 <__clzsi2>:
    1236:	ef 92       	push	r14
    1238:	ff 92       	push	r15
    123a:	0f 93       	push	r16
    123c:	1f 93       	push	r17
    123e:	7b 01       	movw	r14, r22
    1240:	8c 01       	movw	r16, r24
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	e8 16       	cp	r14, r24
    1246:	80 e0       	ldi	r24, 0x00	; 0
    1248:	f8 06       	cpc	r15, r24
    124a:	81 e0       	ldi	r24, 0x01	; 1
    124c:	08 07       	cpc	r16, r24
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	18 07       	cpc	r17, r24
    1252:	88 f4       	brcc	.+34     	; 0x1276 <__clzsi2+0x40>
    1254:	8f ef       	ldi	r24, 0xFF	; 255
    1256:	e8 16       	cp	r14, r24
    1258:	f1 04       	cpc	r15, r1
    125a:	01 05       	cpc	r16, r1
    125c:	11 05       	cpc	r17, r1
    125e:	31 f0       	breq	.+12     	; 0x126c <__clzsi2+0x36>
    1260:	28 f0       	brcs	.+10     	; 0x126c <__clzsi2+0x36>
    1262:	88 e0       	ldi	r24, 0x08	; 8
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	a0 e0       	ldi	r26, 0x00	; 0
    1268:	b0 e0       	ldi	r27, 0x00	; 0
    126a:	17 c0       	rjmp	.+46     	; 0x129a <__clzsi2+0x64>
    126c:	80 e0       	ldi	r24, 0x00	; 0
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	a0 e0       	ldi	r26, 0x00	; 0
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	12 c0       	rjmp	.+36     	; 0x129a <__clzsi2+0x64>
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	e8 16       	cp	r14, r24
    127a:	80 e0       	ldi	r24, 0x00	; 0
    127c:	f8 06       	cpc	r15, r24
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	08 07       	cpc	r16, r24
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	18 07       	cpc	r17, r24
    1286:	28 f0       	brcs	.+10     	; 0x1292 <__clzsi2+0x5c>
    1288:	88 e1       	ldi	r24, 0x18	; 24
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	a0 e0       	ldi	r26, 0x00	; 0
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	04 c0       	rjmp	.+8      	; 0x129a <__clzsi2+0x64>
    1292:	80 e1       	ldi	r24, 0x10	; 16
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	a0 e0       	ldi	r26, 0x00	; 0
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	20 e2       	ldi	r18, 0x20	; 32
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	50 e0       	ldi	r21, 0x00	; 0
    12a2:	28 1b       	sub	r18, r24
    12a4:	39 0b       	sbc	r19, r25
    12a6:	4a 0b       	sbc	r20, r26
    12a8:	5b 0b       	sbc	r21, r27
    12aa:	04 c0       	rjmp	.+8      	; 0x12b4 <__clzsi2+0x7e>
    12ac:	16 95       	lsr	r17
    12ae:	07 95       	ror	r16
    12b0:	f7 94       	ror	r15
    12b2:	e7 94       	ror	r14
    12b4:	8a 95       	dec	r24
    12b6:	d2 f7       	brpl	.-12     	; 0x12ac <__clzsi2+0x76>
    12b8:	f7 01       	movw	r30, r14
    12ba:	ea 58       	subi	r30, 0x8A	; 138
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	80 81       	ld	r24, Z
    12c0:	28 1b       	sub	r18, r24
    12c2:	31 09       	sbc	r19, r1
    12c4:	41 09       	sbc	r20, r1
    12c6:	51 09       	sbc	r21, r1
    12c8:	c9 01       	movw	r24, r18
    12ca:	1f 91       	pop	r17
    12cc:	0f 91       	pop	r16
    12ce:	ff 90       	pop	r15
    12d0:	ef 90       	pop	r14
    12d2:	08 95       	ret

000012d4 <__pack_f>:
    12d4:	df 92       	push	r13
    12d6:	ef 92       	push	r14
    12d8:	ff 92       	push	r15
    12da:	0f 93       	push	r16
    12dc:	1f 93       	push	r17
    12de:	fc 01       	movw	r30, r24
    12e0:	e4 80       	ldd	r14, Z+4	; 0x04
    12e2:	f5 80       	ldd	r15, Z+5	; 0x05
    12e4:	06 81       	ldd	r16, Z+6	; 0x06
    12e6:	17 81       	ldd	r17, Z+7	; 0x07
    12e8:	d1 80       	ldd	r13, Z+1	; 0x01
    12ea:	80 81       	ld	r24, Z
    12ec:	82 30       	cpi	r24, 0x02	; 2
    12ee:	48 f4       	brcc	.+18     	; 0x1302 <__pack_f+0x2e>
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	a0 e1       	ldi	r26, 0x10	; 16
    12f6:	b0 e0       	ldi	r27, 0x00	; 0
    12f8:	e8 2a       	or	r14, r24
    12fa:	f9 2a       	or	r15, r25
    12fc:	0a 2b       	or	r16, r26
    12fe:	1b 2b       	or	r17, r27
    1300:	a5 c0       	rjmp	.+330    	; 0x144c <__pack_f+0x178>
    1302:	84 30       	cpi	r24, 0x04	; 4
    1304:	09 f4       	brne	.+2      	; 0x1308 <__pack_f+0x34>
    1306:	9f c0       	rjmp	.+318    	; 0x1446 <__pack_f+0x172>
    1308:	82 30       	cpi	r24, 0x02	; 2
    130a:	21 f4       	brne	.+8      	; 0x1314 <__pack_f+0x40>
    130c:	ee 24       	eor	r14, r14
    130e:	ff 24       	eor	r15, r15
    1310:	87 01       	movw	r16, r14
    1312:	05 c0       	rjmp	.+10     	; 0x131e <__pack_f+0x4a>
    1314:	e1 14       	cp	r14, r1
    1316:	f1 04       	cpc	r15, r1
    1318:	01 05       	cpc	r16, r1
    131a:	11 05       	cpc	r17, r1
    131c:	19 f4       	brne	.+6      	; 0x1324 <__pack_f+0x50>
    131e:	e0 e0       	ldi	r30, 0x00	; 0
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	96 c0       	rjmp	.+300    	; 0x1450 <__pack_f+0x17c>
    1324:	62 81       	ldd	r22, Z+2	; 0x02
    1326:	73 81       	ldd	r23, Z+3	; 0x03
    1328:	9f ef       	ldi	r25, 0xFF	; 255
    132a:	62 38       	cpi	r22, 0x82	; 130
    132c:	79 07       	cpc	r23, r25
    132e:	0c f0       	brlt	.+2      	; 0x1332 <__pack_f+0x5e>
    1330:	5b c0       	rjmp	.+182    	; 0x13e8 <__pack_f+0x114>
    1332:	22 e8       	ldi	r18, 0x82	; 130
    1334:	3f ef       	ldi	r19, 0xFF	; 255
    1336:	26 1b       	sub	r18, r22
    1338:	37 0b       	sbc	r19, r23
    133a:	2a 31       	cpi	r18, 0x1A	; 26
    133c:	31 05       	cpc	r19, r1
    133e:	2c f0       	brlt	.+10     	; 0x134a <__pack_f+0x76>
    1340:	20 e0       	ldi	r18, 0x00	; 0
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	40 e0       	ldi	r20, 0x00	; 0
    1346:	50 e0       	ldi	r21, 0x00	; 0
    1348:	2a c0       	rjmp	.+84     	; 0x139e <__pack_f+0xca>
    134a:	b8 01       	movw	r22, r16
    134c:	a7 01       	movw	r20, r14
    134e:	02 2e       	mov	r0, r18
    1350:	04 c0       	rjmp	.+8      	; 0x135a <__pack_f+0x86>
    1352:	76 95       	lsr	r23
    1354:	67 95       	ror	r22
    1356:	57 95       	ror	r21
    1358:	47 95       	ror	r20
    135a:	0a 94       	dec	r0
    135c:	d2 f7       	brpl	.-12     	; 0x1352 <__pack_f+0x7e>
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	a0 e0       	ldi	r26, 0x00	; 0
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	04 c0       	rjmp	.+8      	; 0x1370 <__pack_f+0x9c>
    1368:	88 0f       	add	r24, r24
    136a:	99 1f       	adc	r25, r25
    136c:	aa 1f       	adc	r26, r26
    136e:	bb 1f       	adc	r27, r27
    1370:	2a 95       	dec	r18
    1372:	d2 f7       	brpl	.-12     	; 0x1368 <__pack_f+0x94>
    1374:	01 97       	sbiw	r24, 0x01	; 1
    1376:	a1 09       	sbc	r26, r1
    1378:	b1 09       	sbc	r27, r1
    137a:	8e 21       	and	r24, r14
    137c:	9f 21       	and	r25, r15
    137e:	a0 23       	and	r26, r16
    1380:	b1 23       	and	r27, r17
    1382:	00 97       	sbiw	r24, 0x00	; 0
    1384:	a1 05       	cpc	r26, r1
    1386:	b1 05       	cpc	r27, r1
    1388:	21 f0       	breq	.+8      	; 0x1392 <__pack_f+0xbe>
    138a:	81 e0       	ldi	r24, 0x01	; 1
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	a0 e0       	ldi	r26, 0x00	; 0
    1390:	b0 e0       	ldi	r27, 0x00	; 0
    1392:	9a 01       	movw	r18, r20
    1394:	ab 01       	movw	r20, r22
    1396:	28 2b       	or	r18, r24
    1398:	39 2b       	or	r19, r25
    139a:	4a 2b       	or	r20, r26
    139c:	5b 2b       	or	r21, r27
    139e:	da 01       	movw	r26, r20
    13a0:	c9 01       	movw	r24, r18
    13a2:	8f 77       	andi	r24, 0x7F	; 127
    13a4:	90 70       	andi	r25, 0x00	; 0
    13a6:	a0 70       	andi	r26, 0x00	; 0
    13a8:	b0 70       	andi	r27, 0x00	; 0
    13aa:	80 34       	cpi	r24, 0x40	; 64
    13ac:	91 05       	cpc	r25, r1
    13ae:	a1 05       	cpc	r26, r1
    13b0:	b1 05       	cpc	r27, r1
    13b2:	39 f4       	brne	.+14     	; 0x13c2 <__pack_f+0xee>
    13b4:	27 ff       	sbrs	r18, 7
    13b6:	09 c0       	rjmp	.+18     	; 0x13ca <__pack_f+0xf6>
    13b8:	20 5c       	subi	r18, 0xC0	; 192
    13ba:	3f 4f       	sbci	r19, 0xFF	; 255
    13bc:	4f 4f       	sbci	r20, 0xFF	; 255
    13be:	5f 4f       	sbci	r21, 0xFF	; 255
    13c0:	04 c0       	rjmp	.+8      	; 0x13ca <__pack_f+0xf6>
    13c2:	21 5c       	subi	r18, 0xC1	; 193
    13c4:	3f 4f       	sbci	r19, 0xFF	; 255
    13c6:	4f 4f       	sbci	r20, 0xFF	; 255
    13c8:	5f 4f       	sbci	r21, 0xFF	; 255
    13ca:	e0 e0       	ldi	r30, 0x00	; 0
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	20 30       	cpi	r18, 0x00	; 0
    13d0:	a0 e0       	ldi	r26, 0x00	; 0
    13d2:	3a 07       	cpc	r19, r26
    13d4:	a0 e0       	ldi	r26, 0x00	; 0
    13d6:	4a 07       	cpc	r20, r26
    13d8:	a0 e4       	ldi	r26, 0x40	; 64
    13da:	5a 07       	cpc	r21, r26
    13dc:	10 f0       	brcs	.+4      	; 0x13e2 <__pack_f+0x10e>
    13de:	e1 e0       	ldi	r30, 0x01	; 1
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	79 01       	movw	r14, r18
    13e4:	8a 01       	movw	r16, r20
    13e6:	27 c0       	rjmp	.+78     	; 0x1436 <__pack_f+0x162>
    13e8:	60 38       	cpi	r22, 0x80	; 128
    13ea:	71 05       	cpc	r23, r1
    13ec:	64 f5       	brge	.+88     	; 0x1446 <__pack_f+0x172>
    13ee:	fb 01       	movw	r30, r22
    13f0:	e1 58       	subi	r30, 0x81	; 129
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	d8 01       	movw	r26, r16
    13f6:	c7 01       	movw	r24, r14
    13f8:	8f 77       	andi	r24, 0x7F	; 127
    13fa:	90 70       	andi	r25, 0x00	; 0
    13fc:	a0 70       	andi	r26, 0x00	; 0
    13fe:	b0 70       	andi	r27, 0x00	; 0
    1400:	80 34       	cpi	r24, 0x40	; 64
    1402:	91 05       	cpc	r25, r1
    1404:	a1 05       	cpc	r26, r1
    1406:	b1 05       	cpc	r27, r1
    1408:	39 f4       	brne	.+14     	; 0x1418 <__pack_f+0x144>
    140a:	e7 fe       	sbrs	r14, 7
    140c:	0d c0       	rjmp	.+26     	; 0x1428 <__pack_f+0x154>
    140e:	80 e4       	ldi	r24, 0x40	; 64
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	a0 e0       	ldi	r26, 0x00	; 0
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	04 c0       	rjmp	.+8      	; 0x1420 <__pack_f+0x14c>
    1418:	8f e3       	ldi	r24, 0x3F	; 63
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	a0 e0       	ldi	r26, 0x00	; 0
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	e8 0e       	add	r14, r24
    1422:	f9 1e       	adc	r15, r25
    1424:	0a 1f       	adc	r16, r26
    1426:	1b 1f       	adc	r17, r27
    1428:	17 ff       	sbrs	r17, 7
    142a:	05 c0       	rjmp	.+10     	; 0x1436 <__pack_f+0x162>
    142c:	16 95       	lsr	r17
    142e:	07 95       	ror	r16
    1430:	f7 94       	ror	r15
    1432:	e7 94       	ror	r14
    1434:	31 96       	adiw	r30, 0x01	; 1
    1436:	87 e0       	ldi	r24, 0x07	; 7
    1438:	16 95       	lsr	r17
    143a:	07 95       	ror	r16
    143c:	f7 94       	ror	r15
    143e:	e7 94       	ror	r14
    1440:	8a 95       	dec	r24
    1442:	d1 f7       	brne	.-12     	; 0x1438 <__pack_f+0x164>
    1444:	05 c0       	rjmp	.+10     	; 0x1450 <__pack_f+0x17c>
    1446:	ee 24       	eor	r14, r14
    1448:	ff 24       	eor	r15, r15
    144a:	87 01       	movw	r16, r14
    144c:	ef ef       	ldi	r30, 0xFF	; 255
    144e:	f0 e0       	ldi	r31, 0x00	; 0
    1450:	6e 2f       	mov	r22, r30
    1452:	67 95       	ror	r22
    1454:	66 27       	eor	r22, r22
    1456:	67 95       	ror	r22
    1458:	90 2f       	mov	r25, r16
    145a:	9f 77       	andi	r25, 0x7F	; 127
    145c:	d7 94       	ror	r13
    145e:	dd 24       	eor	r13, r13
    1460:	d7 94       	ror	r13
    1462:	8e 2f       	mov	r24, r30
    1464:	86 95       	lsr	r24
    1466:	49 2f       	mov	r20, r25
    1468:	46 2b       	or	r20, r22
    146a:	58 2f       	mov	r21, r24
    146c:	5d 29       	or	r21, r13
    146e:	b7 01       	movw	r22, r14
    1470:	ca 01       	movw	r24, r20
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	ff 90       	pop	r15
    1478:	ef 90       	pop	r14
    147a:	df 90       	pop	r13
    147c:	08 95       	ret

0000147e <__unpack_f>:
    147e:	fc 01       	movw	r30, r24
    1480:	db 01       	movw	r26, r22
    1482:	40 81       	ld	r20, Z
    1484:	51 81       	ldd	r21, Z+1	; 0x01
    1486:	22 81       	ldd	r18, Z+2	; 0x02
    1488:	62 2f       	mov	r22, r18
    148a:	6f 77       	andi	r22, 0x7F	; 127
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	22 1f       	adc	r18, r18
    1490:	22 27       	eor	r18, r18
    1492:	22 1f       	adc	r18, r18
    1494:	93 81       	ldd	r25, Z+3	; 0x03
    1496:	89 2f       	mov	r24, r25
    1498:	88 0f       	add	r24, r24
    149a:	82 2b       	or	r24, r18
    149c:	28 2f       	mov	r18, r24
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	99 1f       	adc	r25, r25
    14a2:	99 27       	eor	r25, r25
    14a4:	99 1f       	adc	r25, r25
    14a6:	11 96       	adiw	r26, 0x01	; 1
    14a8:	9c 93       	st	X, r25
    14aa:	11 97       	sbiw	r26, 0x01	; 1
    14ac:	21 15       	cp	r18, r1
    14ae:	31 05       	cpc	r19, r1
    14b0:	a9 f5       	brne	.+106    	; 0x151c <__unpack_f+0x9e>
    14b2:	41 15       	cp	r20, r1
    14b4:	51 05       	cpc	r21, r1
    14b6:	61 05       	cpc	r22, r1
    14b8:	71 05       	cpc	r23, r1
    14ba:	11 f4       	brne	.+4      	; 0x14c0 <__unpack_f+0x42>
    14bc:	82 e0       	ldi	r24, 0x02	; 2
    14be:	37 c0       	rjmp	.+110    	; 0x152e <__unpack_f+0xb0>
    14c0:	82 e8       	ldi	r24, 0x82	; 130
    14c2:	9f ef       	ldi	r25, 0xFF	; 255
    14c4:	13 96       	adiw	r26, 0x03	; 3
    14c6:	9c 93       	st	X, r25
    14c8:	8e 93       	st	-X, r24
    14ca:	12 97       	sbiw	r26, 0x02	; 2
    14cc:	9a 01       	movw	r18, r20
    14ce:	ab 01       	movw	r20, r22
    14d0:	67 e0       	ldi	r22, 0x07	; 7
    14d2:	22 0f       	add	r18, r18
    14d4:	33 1f       	adc	r19, r19
    14d6:	44 1f       	adc	r20, r20
    14d8:	55 1f       	adc	r21, r21
    14da:	6a 95       	dec	r22
    14dc:	d1 f7       	brne	.-12     	; 0x14d2 <__unpack_f+0x54>
    14de:	83 e0       	ldi	r24, 0x03	; 3
    14e0:	8c 93       	st	X, r24
    14e2:	0d c0       	rjmp	.+26     	; 0x14fe <__unpack_f+0x80>
    14e4:	22 0f       	add	r18, r18
    14e6:	33 1f       	adc	r19, r19
    14e8:	44 1f       	adc	r20, r20
    14ea:	55 1f       	adc	r21, r21
    14ec:	12 96       	adiw	r26, 0x02	; 2
    14ee:	8d 91       	ld	r24, X+
    14f0:	9c 91       	ld	r25, X
    14f2:	13 97       	sbiw	r26, 0x03	; 3
    14f4:	01 97       	sbiw	r24, 0x01	; 1
    14f6:	13 96       	adiw	r26, 0x03	; 3
    14f8:	9c 93       	st	X, r25
    14fa:	8e 93       	st	-X, r24
    14fc:	12 97       	sbiw	r26, 0x02	; 2
    14fe:	20 30       	cpi	r18, 0x00	; 0
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	38 07       	cpc	r19, r24
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	48 07       	cpc	r20, r24
    1508:	80 e4       	ldi	r24, 0x40	; 64
    150a:	58 07       	cpc	r21, r24
    150c:	58 f3       	brcs	.-42     	; 0x14e4 <__unpack_f+0x66>
    150e:	14 96       	adiw	r26, 0x04	; 4
    1510:	2d 93       	st	X+, r18
    1512:	3d 93       	st	X+, r19
    1514:	4d 93       	st	X+, r20
    1516:	5c 93       	st	X, r21
    1518:	17 97       	sbiw	r26, 0x07	; 7
    151a:	08 95       	ret
    151c:	2f 3f       	cpi	r18, 0xFF	; 255
    151e:	31 05       	cpc	r19, r1
    1520:	79 f4       	brne	.+30     	; 0x1540 <__unpack_f+0xc2>
    1522:	41 15       	cp	r20, r1
    1524:	51 05       	cpc	r21, r1
    1526:	61 05       	cpc	r22, r1
    1528:	71 05       	cpc	r23, r1
    152a:	19 f4       	brne	.+6      	; 0x1532 <__unpack_f+0xb4>
    152c:	84 e0       	ldi	r24, 0x04	; 4
    152e:	8c 93       	st	X, r24
    1530:	08 95       	ret
    1532:	64 ff       	sbrs	r22, 4
    1534:	03 c0       	rjmp	.+6      	; 0x153c <__unpack_f+0xbe>
    1536:	81 e0       	ldi	r24, 0x01	; 1
    1538:	8c 93       	st	X, r24
    153a:	12 c0       	rjmp	.+36     	; 0x1560 <__unpack_f+0xe2>
    153c:	1c 92       	st	X, r1
    153e:	10 c0       	rjmp	.+32     	; 0x1560 <__unpack_f+0xe2>
    1540:	2f 57       	subi	r18, 0x7F	; 127
    1542:	30 40       	sbci	r19, 0x00	; 0
    1544:	13 96       	adiw	r26, 0x03	; 3
    1546:	3c 93       	st	X, r19
    1548:	2e 93       	st	-X, r18
    154a:	12 97       	sbiw	r26, 0x02	; 2
    154c:	83 e0       	ldi	r24, 0x03	; 3
    154e:	8c 93       	st	X, r24
    1550:	87 e0       	ldi	r24, 0x07	; 7
    1552:	44 0f       	add	r20, r20
    1554:	55 1f       	adc	r21, r21
    1556:	66 1f       	adc	r22, r22
    1558:	77 1f       	adc	r23, r23
    155a:	8a 95       	dec	r24
    155c:	d1 f7       	brne	.-12     	; 0x1552 <__unpack_f+0xd4>
    155e:	70 64       	ori	r23, 0x40	; 64
    1560:	14 96       	adiw	r26, 0x04	; 4
    1562:	4d 93       	st	X+, r20
    1564:	5d 93       	st	X+, r21
    1566:	6d 93       	st	X+, r22
    1568:	7c 93       	st	X, r23
    156a:	17 97       	sbiw	r26, 0x07	; 7
    156c:	08 95       	ret

0000156e <__fpcmp_parts_f>:
    156e:	1f 93       	push	r17
    1570:	dc 01       	movw	r26, r24
    1572:	fb 01       	movw	r30, r22
    1574:	9c 91       	ld	r25, X
    1576:	92 30       	cpi	r25, 0x02	; 2
    1578:	08 f4       	brcc	.+2      	; 0x157c <__fpcmp_parts_f+0xe>
    157a:	47 c0       	rjmp	.+142    	; 0x160a <__fpcmp_parts_f+0x9c>
    157c:	80 81       	ld	r24, Z
    157e:	82 30       	cpi	r24, 0x02	; 2
    1580:	08 f4       	brcc	.+2      	; 0x1584 <__fpcmp_parts_f+0x16>
    1582:	43 c0       	rjmp	.+134    	; 0x160a <__fpcmp_parts_f+0x9c>
    1584:	94 30       	cpi	r25, 0x04	; 4
    1586:	51 f4       	brne	.+20     	; 0x159c <__fpcmp_parts_f+0x2e>
    1588:	11 96       	adiw	r26, 0x01	; 1
    158a:	1c 91       	ld	r17, X
    158c:	84 30       	cpi	r24, 0x04	; 4
    158e:	99 f5       	brne	.+102    	; 0x15f6 <__fpcmp_parts_f+0x88>
    1590:	81 81       	ldd	r24, Z+1	; 0x01
    1592:	68 2f       	mov	r22, r24
    1594:	70 e0       	ldi	r23, 0x00	; 0
    1596:	61 1b       	sub	r22, r17
    1598:	71 09       	sbc	r23, r1
    159a:	3f c0       	rjmp	.+126    	; 0x161a <__fpcmp_parts_f+0xac>
    159c:	84 30       	cpi	r24, 0x04	; 4
    159e:	21 f0       	breq	.+8      	; 0x15a8 <__fpcmp_parts_f+0x3a>
    15a0:	92 30       	cpi	r25, 0x02	; 2
    15a2:	31 f4       	brne	.+12     	; 0x15b0 <__fpcmp_parts_f+0x42>
    15a4:	82 30       	cpi	r24, 0x02	; 2
    15a6:	b9 f1       	breq	.+110    	; 0x1616 <__fpcmp_parts_f+0xa8>
    15a8:	81 81       	ldd	r24, Z+1	; 0x01
    15aa:	88 23       	and	r24, r24
    15ac:	89 f1       	breq	.+98     	; 0x1610 <__fpcmp_parts_f+0xa2>
    15ae:	2d c0       	rjmp	.+90     	; 0x160a <__fpcmp_parts_f+0x9c>
    15b0:	11 96       	adiw	r26, 0x01	; 1
    15b2:	1c 91       	ld	r17, X
    15b4:	11 97       	sbiw	r26, 0x01	; 1
    15b6:	82 30       	cpi	r24, 0x02	; 2
    15b8:	f1 f0       	breq	.+60     	; 0x15f6 <__fpcmp_parts_f+0x88>
    15ba:	81 81       	ldd	r24, Z+1	; 0x01
    15bc:	18 17       	cp	r17, r24
    15be:	d9 f4       	brne	.+54     	; 0x15f6 <__fpcmp_parts_f+0x88>
    15c0:	12 96       	adiw	r26, 0x02	; 2
    15c2:	2d 91       	ld	r18, X+
    15c4:	3c 91       	ld	r19, X
    15c6:	13 97       	sbiw	r26, 0x03	; 3
    15c8:	82 81       	ldd	r24, Z+2	; 0x02
    15ca:	93 81       	ldd	r25, Z+3	; 0x03
    15cc:	82 17       	cp	r24, r18
    15ce:	93 07       	cpc	r25, r19
    15d0:	94 f0       	brlt	.+36     	; 0x15f6 <__fpcmp_parts_f+0x88>
    15d2:	28 17       	cp	r18, r24
    15d4:	39 07       	cpc	r19, r25
    15d6:	bc f0       	brlt	.+46     	; 0x1606 <__fpcmp_parts_f+0x98>
    15d8:	14 96       	adiw	r26, 0x04	; 4
    15da:	8d 91       	ld	r24, X+
    15dc:	9d 91       	ld	r25, X+
    15de:	0d 90       	ld	r0, X+
    15e0:	bc 91       	ld	r27, X
    15e2:	a0 2d       	mov	r26, r0
    15e4:	24 81       	ldd	r18, Z+4	; 0x04
    15e6:	35 81       	ldd	r19, Z+5	; 0x05
    15e8:	46 81       	ldd	r20, Z+6	; 0x06
    15ea:	57 81       	ldd	r21, Z+7	; 0x07
    15ec:	28 17       	cp	r18, r24
    15ee:	39 07       	cpc	r19, r25
    15f0:	4a 07       	cpc	r20, r26
    15f2:	5b 07       	cpc	r21, r27
    15f4:	18 f4       	brcc	.+6      	; 0x15fc <__fpcmp_parts_f+0x8e>
    15f6:	11 23       	and	r17, r17
    15f8:	41 f0       	breq	.+16     	; 0x160a <__fpcmp_parts_f+0x9c>
    15fa:	0a c0       	rjmp	.+20     	; 0x1610 <__fpcmp_parts_f+0xa2>
    15fc:	82 17       	cp	r24, r18
    15fe:	93 07       	cpc	r25, r19
    1600:	a4 07       	cpc	r26, r20
    1602:	b5 07       	cpc	r27, r21
    1604:	40 f4       	brcc	.+16     	; 0x1616 <__fpcmp_parts_f+0xa8>
    1606:	11 23       	and	r17, r17
    1608:	19 f0       	breq	.+6      	; 0x1610 <__fpcmp_parts_f+0xa2>
    160a:	61 e0       	ldi	r22, 0x01	; 1
    160c:	70 e0       	ldi	r23, 0x00	; 0
    160e:	05 c0       	rjmp	.+10     	; 0x161a <__fpcmp_parts_f+0xac>
    1610:	6f ef       	ldi	r22, 0xFF	; 255
    1612:	7f ef       	ldi	r23, 0xFF	; 255
    1614:	02 c0       	rjmp	.+4      	; 0x161a <__fpcmp_parts_f+0xac>
    1616:	60 e0       	ldi	r22, 0x00	; 0
    1618:	70 e0       	ldi	r23, 0x00	; 0
    161a:	cb 01       	movw	r24, r22
    161c:	1f 91       	pop	r17
    161e:	08 95       	ret

00001620 <__prologue_saves__>:
    1620:	2f 92       	push	r2
    1622:	3f 92       	push	r3
    1624:	4f 92       	push	r4
    1626:	5f 92       	push	r5
    1628:	6f 92       	push	r6
    162a:	7f 92       	push	r7
    162c:	8f 92       	push	r8
    162e:	9f 92       	push	r9
    1630:	af 92       	push	r10
    1632:	bf 92       	push	r11
    1634:	cf 92       	push	r12
    1636:	df 92       	push	r13
    1638:	ef 92       	push	r14
    163a:	ff 92       	push	r15
    163c:	0f 93       	push	r16
    163e:	1f 93       	push	r17
    1640:	cf 93       	push	r28
    1642:	df 93       	push	r29
    1644:	cd b7       	in	r28, 0x3d	; 61
    1646:	de b7       	in	r29, 0x3e	; 62
    1648:	ca 1b       	sub	r28, r26
    164a:	db 0b       	sbc	r29, r27
    164c:	0f b6       	in	r0, 0x3f	; 63
    164e:	f8 94       	cli
    1650:	de bf       	out	0x3e, r29	; 62
    1652:	0f be       	out	0x3f, r0	; 63
    1654:	cd bf       	out	0x3d, r28	; 61
    1656:	09 94       	ijmp

00001658 <__epilogue_restores__>:
    1658:	2a 88       	ldd	r2, Y+18	; 0x12
    165a:	39 88       	ldd	r3, Y+17	; 0x11
    165c:	48 88       	ldd	r4, Y+16	; 0x10
    165e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1660:	6e 84       	ldd	r6, Y+14	; 0x0e
    1662:	7d 84       	ldd	r7, Y+13	; 0x0d
    1664:	8c 84       	ldd	r8, Y+12	; 0x0c
    1666:	9b 84       	ldd	r9, Y+11	; 0x0b
    1668:	aa 84       	ldd	r10, Y+10	; 0x0a
    166a:	b9 84       	ldd	r11, Y+9	; 0x09
    166c:	c8 84       	ldd	r12, Y+8	; 0x08
    166e:	df 80       	ldd	r13, Y+7	; 0x07
    1670:	ee 80       	ldd	r14, Y+6	; 0x06
    1672:	fd 80       	ldd	r15, Y+5	; 0x05
    1674:	0c 81       	ldd	r16, Y+4	; 0x04
    1676:	1b 81       	ldd	r17, Y+3	; 0x03
    1678:	aa 81       	ldd	r26, Y+2	; 0x02
    167a:	b9 81       	ldd	r27, Y+1	; 0x01
    167c:	ce 0f       	add	r28, r30
    167e:	d1 1d       	adc	r29, r1
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	f8 94       	cli
    1684:	de bf       	out	0x3e, r29	; 62
    1686:	0f be       	out	0x3f, r0	; 63
    1688:	cd bf       	out	0x3d, r28	; 61
    168a:	ed 01       	movw	r28, r26
    168c:	08 95       	ret

0000168e <_exit>:
    168e:	f8 94       	cli

00001690 <__stop_program>:
    1690:	ff cf       	rjmp	.-2      	; 0x1690 <__stop_program>
