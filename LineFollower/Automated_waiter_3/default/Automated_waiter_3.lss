
Automated_waiter_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fdc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000116  00800060  00000fdc  00001070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800176  00800176  00001186  2**0
                  ALLOC
  3 .debug_aranges 00000180  00000000  00000000  00001186  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000254  00000000  00000000  00001306  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000022b6  00000000  00000000  0000155a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012f9  00000000  00000000  00003810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000012a9  00000000  00000000  00004b09  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00005db4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c6  00000000  00000000  00005fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ad  00000000  00000000  0000636a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00006d17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ed       	ldi	r30, 0xDC	; 220
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 38       	cpi	r26, 0x86	; 134
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 57 01 	call	0x2ae	; 0x2ae <main>
  8a:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <InitADC>:
#include<avr/io.h>
#include<util/delay.h>

void InitADC()
{
	ADMUX=(1<<REFS0);                                  	// For Aref=AVcc;
  92:	80 e4       	ldi	r24, 0x40	; 64
  94:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);    //Prescalar div factor =128
  96:	87 e8       	ldi	r24, 0x87	; 135
  98:	86 b9       	out	0x06, r24	; 6

}
  9a:	08 95       	ret

0000009c <ReadADC>:
uint16_t ReadADC(uint8_t ch)
{
	//Select ADC Channel ch must be 0-7
	
	ch=ch&0b00000111;
	ADMUX&=0b11100000;
  9c:	97 b1       	in	r25, 0x07	; 7
  9e:	90 7e       	andi	r25, 0xE0	; 224
  a0:	97 b9       	out	0x07, r25	; 7
	ADMUX|=ch;
  a2:	97 b1       	in	r25, 0x07	; 7
  a4:	87 70       	andi	r24, 0x07	; 7
  a6:	89 2b       	or	r24, r25
  a8:	87 b9       	out	0x07, r24	; 7

	//Start Single conversion
	
	ADCSRA|=(1<<ADSC);
  aa:	36 9a       	sbi	0x06, 6	; 6

	//Wait for conversion to complete
	
	while(!(ADCSRA & (1<<ADIF)));
  ac:	34 9b       	sbis	0x06, 4	; 6
  ae:	fe cf       	rjmp	.-4      	; 0xac <ReadADC+0x10>

	//Note you may be wondering why we have write one to clear it
	//This is standard way of clearing bits in io as said in datasheets.
	//The code writes '1' but it result in setting bit to '0' !!!

	ADCSRA|=(1<<ADIF);
  b0:	34 9a       	sbi	0x06, 4	; 6

	return(ADC);
  b2:	24 b1       	in	r18, 0x04	; 4
  b4:	35 b1       	in	r19, 0x05	; 5
}
  b6:	c9 01       	movw	r24, r18
  b8:	08 95       	ret

000000ba <DelayMs>:
		sprev=s;
	}
}

void DelayMs(uint8_t ms)
{
  ba:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  bc:	2a ef       	ldi	r18, 0xFA	; 250
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	04 c0       	rjmp	.+8      	; 0xca <DelayMs+0x10>
  c2:	f9 01       	movw	r30, r18
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <DelayMs+0xa>
	uint8_t i;
	for(i=0;i<ms;i++)
  c8:	9f 5f       	subi	r25, 0xFF	; 255
  ca:	98 17       	cp	r25, r24
  cc:	d0 f3       	brcs	.-12     	; 0xc2 <DelayMs+0x8>
	{
		_delay_ms(1);
	}
}
  ce:	08 95       	ret

000000d0 <PID>:

//Implementing PID control

float PID(float cur_value,float req_value)
{
  d0:	6f 92       	push	r6
  d2:	7f 92       	push	r7
  d4:	8f 92       	push	r8
  d6:	9f 92       	push	r9
  d8:	af 92       	push	r10
  da:	bf 92       	push	r11
  dc:	cf 92       	push	r12
  de:	df 92       	push	r13
  e0:	ef 92       	push	r14
  e2:	ff 92       	push	r15
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	7b 01       	movw	r14, r22
  ea:	8c 01       	movw	r16, r24
	float pid;
	float error;

	error = req_value - cur_value;
  ec:	ca 01       	movw	r24, r20
  ee:	b9 01       	movw	r22, r18
  f0:	a8 01       	movw	r20, r16
  f2:	97 01       	movw	r18, r14
  f4:	0e 94 26 03 	call	0x64c	; 0x64c <__subsf3>
  f8:	5b 01       	movw	r10, r22
  fa:	6c 01       	movw	r12, r24
	pid = (pGain * error)  + (iGain * eInteg) + (dGain * (error - ePrev));
  fc:	60 91 76 01 	lds	r22, 0x0176
 100:	70 91 77 01 	lds	r23, 0x0177
 104:	80 91 78 01 	lds	r24, 0x0178
 108:	90 91 79 01 	lds	r25, 0x0179
 10c:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__floatsisf>
 110:	3b 01       	movw	r6, r22
 112:	4c 01       	movw	r8, r24
 114:	c6 01       	movw	r24, r12
 116:	b5 01       	movw	r22, r10
 118:	20 91 60 00 	lds	r18, 0x0060
 11c:	30 91 61 00 	lds	r19, 0x0061
 120:	40 91 62 00 	lds	r20, 0x0062
 124:	50 91 63 00 	lds	r21, 0x0063
 128:	0e 94 84 03 	call	0x708	; 0x708 <__mulsf3>
 12c:	7b 01       	movw	r14, r22
 12e:	8c 01       	movw	r16, r24
 130:	c4 01       	movw	r24, r8
 132:	b3 01       	movw	r22, r6
 134:	20 91 64 00 	lds	r18, 0x0064
 138:	30 91 65 00 	lds	r19, 0x0065
 13c:	40 91 66 00 	lds	r20, 0x0066
 140:	50 91 67 00 	lds	r21, 0x0067
 144:	0e 94 84 03 	call	0x708	; 0x708 <__mulsf3>
 148:	9b 01       	movw	r18, r22
 14a:	ac 01       	movw	r20, r24
 14c:	c8 01       	movw	r24, r16
 14e:	b7 01       	movw	r22, r14
 150:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
 154:	7b 01       	movw	r14, r22
 156:	8c 01       	movw	r16, r24
 158:	60 91 7a 01 	lds	r22, 0x017A
 15c:	70 91 7b 01 	lds	r23, 0x017B
 160:	80 91 7c 01 	lds	r24, 0x017C
 164:	90 91 7d 01 	lds	r25, 0x017D
 168:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__floatsisf>
 16c:	9b 01       	movw	r18, r22
 16e:	ac 01       	movw	r20, r24
 170:	c6 01       	movw	r24, r12
 172:	b5 01       	movw	r22, r10
 174:	0e 94 26 03 	call	0x64c	; 0x64c <__subsf3>
 178:	20 91 68 00 	lds	r18, 0x0068
 17c:	30 91 69 00 	lds	r19, 0x0069
 180:	40 91 6a 00 	lds	r20, 0x006A
 184:	50 91 6b 00 	lds	r21, 0x006B
 188:	0e 94 84 03 	call	0x708	; 0x708 <__mulsf3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	c8 01       	movw	r24, r16
 192:	b7 01       	movw	r22, r14
 194:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
 198:	7b 01       	movw	r14, r22
 19a:	8c 01       	movw	r16, r24

	eInteg += error;                  // integral is simply a summation over time
 19c:	c4 01       	movw	r24, r8
 19e:	b3 01       	movw	r22, r6
 1a0:	a6 01       	movw	r20, r12
 1a2:	95 01       	movw	r18, r10
 1a4:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
 1a8:	0e 94 6c 05 	call	0xad8	; 0xad8 <__fixsfsi>
 1ac:	60 93 76 01 	sts	0x0176, r22
 1b0:	70 93 77 01 	sts	0x0177, r23
 1b4:	80 93 78 01 	sts	0x0178, r24
 1b8:	90 93 79 01 	sts	0x0179, r25
	ePrev = error;                    // save previous for derivative
 1bc:	c6 01       	movw	r24, r12
 1be:	b5 01       	movw	r22, r10
 1c0:	0e 94 6c 05 	call	0xad8	; 0xad8 <__fixsfsi>
 1c4:	60 93 7a 01 	sts	0x017A, r22
 1c8:	70 93 7b 01 	sts	0x017B, r23
 1cc:	80 93 7c 01 	sts	0x017C, r24
 1d0:	90 93 7d 01 	sts	0x017D, r25

	return pid;
}
 1d4:	b7 01       	movw	r22, r14
 1d6:	c8 01       	movw	r24, r16
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	ff 90       	pop	r15
 1de:	ef 90       	pop	r14
 1e0:	df 90       	pop	r13
 1e2:	cf 90       	pop	r12
 1e4:	bf 90       	pop	r11
 1e6:	af 90       	pop	r10
 1e8:	9f 90       	pop	r9
 1ea:	8f 90       	pop	r8
 1ec:	7f 90       	pop	r7
 1ee:	6f 90       	pop	r6
 1f0:	08 95       	ret

000001f2 <ReadSensors>:

float ReadSensors()
{
 1f2:	ef 92       	push	r14
 1f4:	ff 92       	push	r15
 1f6:	0f 93       	push	r16
 1f8:	1f 93       	push	r17
	int s1=0, s2=0, s3=0;
	
	DDRA=0x00;
 1fa:	1a ba       	out	0x1a, r1	; 26
    DDRB=0xff;
 1fc:	8f ef       	ldi	r24, 0xFF	; 255
 1fe:	87 bb       	out	0x17, r24	; 23
	DDRD=0xff;
 200:	81 bb       	out	0x11, r24	; 17
		s3=0;
	}
	
	 if((s1==0x00)&&(s2==0x00)&&(s3==0x04))
	{
		PORTB=0x04;//turn left
 202:	94 e0       	ldi	r25, 0x04	; 4
 204:	e9 2e       	mov	r14, r25
		PORTD=0x03;
 206:	83 e0       	ldi	r24, 0x03	; 3
 208:	f8 2e       	mov	r15, r24
	   s3=(PINA&0x04);
       

	if ((s1==0x00)&&(s2==0x00)&&(s3==0x00))
	{ 
	 PORTB=0x01;//stop
 20a:	01 e0       	ldi	r16, 0x01	; 1
	 s2=0;
	 s3=0;
	}
	 if ((s1==0x01)&&(s2==0x00)&&(s3==0x00))
	{
		PORTB=0x02;//turn right
 20c:	12 e0       	ldi	r17, 0x02	; 2
		PORTD=0x0c;
 20e:	bc e0       	ldi	r27, 0x0C	; 12
		s2=0;
		s3=0;
	}
	if((s1==0x01)&(s2==0x00)&&(s3==0x04))
	{
		PORTB=0x08;//forward
 210:	a8 e0       	ldi	r26, 0x08	; 8
		PORTD=0x0f;
 212:	ff e0       	ldi	r31, 0x0F	; 15
	s2=0;
	s3=0;
	}
	if((s1==0x01)&(s2==0x02)&&(s3==0x04))
	{
	PORTB=0x10;//stop
 214:	e0 e1       	ldi	r30, 0x10	; 16
	DDRA=0x00;
    DDRB=0xff;
	DDRD=0xff;
	while(1)
    {
	   s1=(PINA&0x01);
 216:	89 b3       	in	r24, 0x19	; 25
 218:	90 e0       	ldi	r25, 0x00	; 0
	   s2=(PINA&0x02);
 21a:	29 b3       	in	r18, 0x19	; 25
 21c:	62 2f       	mov	r22, r18
 21e:	70 e0       	ldi	r23, 0x00	; 0
 220:	62 70       	andi	r22, 0x02	; 2
 222:	70 70       	andi	r23, 0x00	; 0
	   s3=(PINA&0x04);
 224:	29 b3       	in	r18, 0x19	; 25
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	24 70       	andi	r18, 0x04	; 4
 22a:	30 70       	andi	r19, 0x00	; 0
       

	if ((s1==0x00)&&(s2==0x00)&&(s3==0x00))
 22c:	ac 01       	movw	r20, r24
 22e:	41 70       	andi	r20, 0x01	; 1
 230:	50 70       	andi	r21, 0x00	; 0
 232:	80 fd       	sbrc	r24, 0
 234:	09 c0       	rjmp	.+18     	; 0x248 <ReadSensors+0x56>
 236:	61 15       	cp	r22, r1
 238:	71 05       	cpc	r23, r1
 23a:	a9 f4       	brne	.+42     	; 0x266 <ReadSensors+0x74>
 23c:	21 15       	cp	r18, r1
 23e:	31 05       	cpc	r19, r1
 240:	79 f5       	brne	.+94     	; 0x2a0 <ReadSensors+0xae>
	{ 
	 PORTB=0x01;//stop
 242:	08 bb       	out	0x18, r16	; 24
	 PORTD=0x00;
 244:	12 ba       	out	0x12, r1	; 18
 246:	0f c0       	rjmp	.+30     	; 0x266 <ReadSensors+0x74>
	 s1=0;
	 s2=0;
	 s3=0;
	}
	 if ((s1==0x01)&&(s2==0x00)&&(s3==0x00))
 248:	61 15       	cp	r22, r1
 24a:	71 05       	cpc	r23, r1
 24c:	69 f5       	brne	.+90     	; 0x2a8 <ReadSensors+0xb6>
 24e:	21 15       	cp	r18, r1
 250:	31 05       	cpc	r19, r1
 252:	51 f5       	brne	.+84     	; 0x2a8 <ReadSensors+0xb6>
	{
		PORTB=0x02;//turn right
 254:	18 bb       	out	0x18, r17	; 24
		PORTD=0x0c;
 256:	b2 bb       	out	0x12, r27	; 18
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	50 e0       	ldi	r21, 0x00	; 0
 25c:	04 c0       	rjmp	.+8      	; 0x266 <ReadSensors+0x74>
		s3=0;
	}
	
	 if((s1==0x00)&&(s2==0x00)&&(s3==0x04))
	{
		PORTB=0x04;//turn left
 25e:	e8 ba       	out	0x18, r14	; 24
		PORTD=0x03;
 260:	f2 ba       	out	0x12, r15	; 18
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
		s1=0;
		s2=0;
		s3=0;
	}
	if((s1==0x01)&(s2==0x00)&&(s3==0x04))
 266:	41 30       	cpi	r20, 0x01	; 1
 268:	51 05       	cpc	r21, r1
 26a:	61 f4       	brne	.+24     	; 0x284 <ReadSensors+0x92>
 26c:	61 15       	cp	r22, r1
 26e:	71 05       	cpc	r23, r1
 270:	49 f4       	brne	.+18     	; 0x284 <ReadSensors+0x92>
 272:	24 30       	cpi	r18, 0x04	; 4
 274:	31 05       	cpc	r19, r1
 276:	31 f4       	brne	.+12     	; 0x284 <ReadSensors+0x92>
	{
		PORTB=0x08;//forward
 278:	a8 bb       	out	0x18, r26	; 24
		PORTD=0x0f;
 27a:	f2 bb       	out	0x12, r31	; 18
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	50 e0       	ldi	r21, 0x00	; 0
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
	s1=0;
	s2=0;
	s3=0;
	}
	if((s1==0x01)&(s2==0x02)&&(s3==0x04))
 284:	41 30       	cpi	r20, 0x01	; 1
 286:	51 05       	cpc	r21, r1
 288:	49 f4       	brne	.+18     	; 0x29c <ReadSensors+0xaa>
 28a:	62 30       	cpi	r22, 0x02	; 2
 28c:	71 05       	cpc	r23, r1
 28e:	31 f4       	brne	.+12     	; 0x29c <ReadSensors+0xaa>
 290:	24 30       	cpi	r18, 0x04	; 4
 292:	31 05       	cpc	r19, r1
 294:	19 f4       	brne	.+6      	; 0x29c <ReadSensors+0xaa>
	{
	PORTB=0x10;//stop
 296:	e8 bb       	out	0x18, r30	; 24
	PORTD=0x00;
 298:	12 ba       	out	0x12, r1	; 18
 29a:	bd cf       	rjmp	.-134    	; 0x216 <ReadSensors+0x24>
	s1=0;
	s2=0;
	s3=0;
	}
	else
	PORTB=0x00;
 29c:	18 ba       	out	0x18, r1	; 24
 29e:	bb cf       	rjmp	.-138    	; 0x216 <ReadSensors+0x24>
		s1=0;
		s2=0;
		s3=0;
	}
	
	 if((s1==0x00)&&(s2==0x00)&&(s3==0x04))
 2a0:	24 30       	cpi	r18, 0x04	; 4
 2a2:	31 05       	cpc	r19, r1
 2a4:	e1 f2       	breq	.-72     	; 0x25e <ReadSensors+0x6c>
 2a6:	df cf       	rjmp	.-66     	; 0x266 <ReadSensors+0x74>
 2a8:	41 e0       	ldi	r20, 0x01	; 1
 2aa:	50 e0       	ldi	r21, 0x00	; 0
 2ac:	dc cf       	rjmp	.-72     	; 0x266 <ReadSensors+0x74>

000002ae <main>:
float control;
float s;


void main()
{
 2ae:	ef 92       	push	r14
 2b0:	ff 92       	push	r15
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
#include<avr/io.h>
#include<util/delay.h>

void InitADC()
{
	ADMUX=(1<<REFS0);                                  	// For Aref=AVcc;
 2ba:	80 e4       	ldi	r24, 0x40	; 64
 2bc:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);    //Prescalar div factor =128
 2be:	87 e8       	ldi	r24, 0x87	; 135
 2c0:	86 b9       	out	0x06, r24	; 6

void main()
{
	//Initialize Analog to Digital Converter (ADC)
	InitADC();
	DDRA=0x00;
 2c2:	1a ba       	out	0x1a, r1	; 26
	DDRD=0xff;
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	81 bb       	out	0x11, r24	; 17
	DDRB=0xff;
 2c8:	87 bb       	out	0x17, r24	; 23
 2ca:	ca ef       	ldi	r28, 0xFA	; 250
 2cc:	d0 e0       	ldi	r29, 0x00	; 0
		//return value is between 0 to 5
		//When the line is towards right of center then value tends to 5
		//When the line is towards left of center then value tends to 1
		//When line is in the exact center the the value is 3

		s=ReadSensors();
 2ce:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <ReadSensors>
 2d2:	60 93 82 01 	sts	0x0182, r22
 2d6:	70 93 83 01 	sts	0x0183, r23
 2da:	80 93 84 01 	sts	0x0184, r24
 2de:	90 93 85 01 	sts	0x0185, r25
		
		//If line is not found beneath any sensor, use last sensor value.

		if(s==0xFF)
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	4f e7       	ldi	r20, 0x7F	; 127
 2e8:	53 e4       	ldi	r21, 0x43	; 67
 2ea:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__eqsf2>
 2ee:	88 23       	and	r24, r24
 2f0:	41 f4       	brne	.+16     	; 0x302 <main+0x54>
		{
			s=sprev;
 2f2:	e0 92 82 01 	sts	0x0182, r14
 2f6:	f0 92 83 01 	sts	0x0183, r15
 2fa:	00 93 84 01 	sts	0x0184, r16
 2fe:	10 93 85 01 	sts	0x0185, r17
		//The first argument is the current sensor reading.
		//The more the difference between the two greater is the control variable.
		//This control variable is used to produce turning in the robot.
		//When current value is close to required value is close to 0.

		control = PID(s,3.0);
 302:	60 91 82 01 	lds	r22, 0x0182
 306:	70 91 83 01 	lds	r23, 0x0183
 30a:	80 91 84 01 	lds	r24, 0x0184
 30e:	90 91 85 01 	lds	r25, 0x0185
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	40 e4       	ldi	r20, 0x40	; 64
 318:	50 e4       	ldi	r21, 0x40	; 64
 31a:	0e 94 68 00 	call	0xd0	; 0xd0 <PID>
 31e:	60 93 7e 01 	sts	0x017E, r22
 322:	70 93 7f 01 	sts	0x017F, r23
 326:	80 93 80 01 	sts	0x0180, r24
 32a:	90 93 81 01 	sts	0x0181, r25
		
		//Limit the control

		if(control > 510)
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	4f ef       	ldi	r20, 0xFF	; 255
 334:	53 e4       	ldi	r21, 0x43	; 67
 336:	0e 94 ae 04 	call	0x95c	; 0x95c <__gtsf2>
 33a:	18 16       	cp	r1, r24
 33c:	64 f4       	brge	.+24     	; 0x356 <main+0xa8>
		control = 510;
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	af ef       	ldi	r26, 0xFF	; 255
 344:	b3 e4       	ldi	r27, 0x43	; 67
 346:	80 93 7e 01 	sts	0x017E, r24
 34a:	90 93 7f 01 	sts	0x017F, r25
 34e:	a0 93 80 01 	sts	0x0180, r26
 352:	b0 93 81 01 	sts	0x0181, r27
		if(control < -510)
 356:	60 91 7e 01 	lds	r22, 0x017E
 35a:	70 91 7f 01 	lds	r23, 0x017F
 35e:	80 91 80 01 	lds	r24, 0x0180
 362:	90 91 81 01 	lds	r25, 0x0181
 366:	20 e0       	ldi	r18, 0x00	; 0
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	4f ef       	ldi	r20, 0xFF	; 255
 36c:	53 ec       	ldi	r21, 0xC3	; 195
 36e:	0e 94 de 04 	call	0x9bc	; 0x9bc <__ltsf2>
 372:	88 23       	and	r24, r24
 374:	64 f4       	brge	.+24     	; 0x38e <main+0xe0>
		control = -510;
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	af ef       	ldi	r26, 0xFF	; 255
 37c:	b3 ec       	ldi	r27, 0xC3	; 195
 37e:	80 93 7e 01 	sts	0x017E, r24
 382:	90 93 7f 01 	sts	0x017F, r25
 386:	a0 93 80 01 	sts	0x0180, r26
 38a:	b0 93 81 01 	sts	0x0181, r27

	
		
		//Delay

		DelayMs(delay);
 38e:	30 91 6c 00 	lds	r19, 0x006C
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	04 c0       	rjmp	.+8      	; 0x39e <main+0xf0>
 396:	ce 01       	movw	r24, r28
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <main+0xea>
}

void DelayMs(uint8_t ms)
{
	uint8_t i;
	for(i=0;i<ms;i++)
 39c:	2f 5f       	subi	r18, 0xFF	; 255
 39e:	23 17       	cp	r18, r19
 3a0:	d0 f3       	brcs	.-12     	; 0x396 <main+0xe8>
		
		//Delay

		DelayMs(delay);
		
		sprev=s;
 3a2:	e0 90 82 01 	lds	r14, 0x0182
 3a6:	f0 90 83 01 	lds	r15, 0x0183
 3aa:	00 91 84 01 	lds	r16, 0x0184
 3ae:	10 91 85 01 	lds	r17, 0x0185
 3b2:	8d cf       	rjmp	.-230    	; 0x2ce <main+0x20>

000003b4 <_fpadd_parts>:
 3b4:	a0 e0       	ldi	r26, 0x00	; 0
 3b6:	b0 e0       	ldi	r27, 0x00	; 0
 3b8:	e0 ee       	ldi	r30, 0xE0	; 224
 3ba:	f1 e0       	ldi	r31, 0x01	; 1
 3bc:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__prologue_saves__>
 3c0:	dc 01       	movw	r26, r24
 3c2:	2b 01       	movw	r4, r22
 3c4:	fa 01       	movw	r30, r20
 3c6:	9c 91       	ld	r25, X
 3c8:	92 30       	cpi	r25, 0x02	; 2
 3ca:	08 f4       	brcc	.+2      	; 0x3ce <_fpadd_parts+0x1a>
 3cc:	39 c1       	rjmp	.+626    	; 0x640 <__stack+0x1e1>
 3ce:	eb 01       	movw	r28, r22
 3d0:	88 81       	ld	r24, Y
 3d2:	82 30       	cpi	r24, 0x02	; 2
 3d4:	08 f4       	brcc	.+2      	; 0x3d8 <_fpadd_parts+0x24>
 3d6:	33 c1       	rjmp	.+614    	; 0x63e <__stack+0x1df>
 3d8:	94 30       	cpi	r25, 0x04	; 4
 3da:	69 f4       	brne	.+26     	; 0x3f6 <_fpadd_parts+0x42>
 3dc:	84 30       	cpi	r24, 0x04	; 4
 3de:	09 f0       	breq	.+2      	; 0x3e2 <_fpadd_parts+0x2e>
 3e0:	2f c1       	rjmp	.+606    	; 0x640 <__stack+0x1e1>
 3e2:	11 96       	adiw	r26, 0x01	; 1
 3e4:	9c 91       	ld	r25, X
 3e6:	11 97       	sbiw	r26, 0x01	; 1
 3e8:	89 81       	ldd	r24, Y+1	; 0x01
 3ea:	98 17       	cp	r25, r24
 3ec:	09 f4       	brne	.+2      	; 0x3f0 <_fpadd_parts+0x3c>
 3ee:	28 c1       	rjmp	.+592    	; 0x640 <__stack+0x1e1>
 3f0:	ae e6       	ldi	r26, 0x6E	; 110
 3f2:	b0 e0       	ldi	r27, 0x00	; 0
 3f4:	25 c1       	rjmp	.+586    	; 0x640 <__stack+0x1e1>
 3f6:	84 30       	cpi	r24, 0x04	; 4
 3f8:	09 f4       	brne	.+2      	; 0x3fc <_fpadd_parts+0x48>
 3fa:	21 c1       	rjmp	.+578    	; 0x63e <__stack+0x1df>
 3fc:	82 30       	cpi	r24, 0x02	; 2
 3fe:	a9 f4       	brne	.+42     	; 0x42a <_fpadd_parts+0x76>
 400:	92 30       	cpi	r25, 0x02	; 2
 402:	09 f0       	breq	.+2      	; 0x406 <_fpadd_parts+0x52>
 404:	1d c1       	rjmp	.+570    	; 0x640 <__stack+0x1e1>
 406:	9a 01       	movw	r18, r20
 408:	ad 01       	movw	r20, r26
 40a:	88 e0       	ldi	r24, 0x08	; 8
 40c:	ea 01       	movw	r28, r20
 40e:	09 90       	ld	r0, Y+
 410:	ae 01       	movw	r20, r28
 412:	e9 01       	movw	r28, r18
 414:	09 92       	st	Y+, r0
 416:	9e 01       	movw	r18, r28
 418:	81 50       	subi	r24, 0x01	; 1
 41a:	c1 f7       	brne	.-16     	; 0x40c <_fpadd_parts+0x58>
 41c:	e2 01       	movw	r28, r4
 41e:	89 81       	ldd	r24, Y+1	; 0x01
 420:	11 96       	adiw	r26, 0x01	; 1
 422:	9c 91       	ld	r25, X
 424:	89 23       	and	r24, r25
 426:	81 83       	std	Z+1, r24	; 0x01
 428:	08 c1       	rjmp	.+528    	; 0x63a <__stack+0x1db>
 42a:	92 30       	cpi	r25, 0x02	; 2
 42c:	09 f4       	brne	.+2      	; 0x430 <_fpadd_parts+0x7c>
 42e:	07 c1       	rjmp	.+526    	; 0x63e <__stack+0x1df>
 430:	12 96       	adiw	r26, 0x02	; 2
 432:	2d 90       	ld	r2, X+
 434:	3c 90       	ld	r3, X
 436:	13 97       	sbiw	r26, 0x03	; 3
 438:	eb 01       	movw	r28, r22
 43a:	8a 81       	ldd	r24, Y+2	; 0x02
 43c:	9b 81       	ldd	r25, Y+3	; 0x03
 43e:	14 96       	adiw	r26, 0x04	; 4
 440:	ad 90       	ld	r10, X+
 442:	bd 90       	ld	r11, X+
 444:	cd 90       	ld	r12, X+
 446:	dc 90       	ld	r13, X
 448:	17 97       	sbiw	r26, 0x07	; 7
 44a:	ec 80       	ldd	r14, Y+4	; 0x04
 44c:	fd 80       	ldd	r15, Y+5	; 0x05
 44e:	0e 81       	ldd	r16, Y+6	; 0x06
 450:	1f 81       	ldd	r17, Y+7	; 0x07
 452:	91 01       	movw	r18, r2
 454:	28 1b       	sub	r18, r24
 456:	39 0b       	sbc	r19, r25
 458:	b9 01       	movw	r22, r18
 45a:	37 ff       	sbrs	r19, 7
 45c:	04 c0       	rjmp	.+8      	; 0x466 <__stack+0x7>
 45e:	66 27       	eor	r22, r22
 460:	77 27       	eor	r23, r23
 462:	62 1b       	sub	r22, r18
 464:	73 0b       	sbc	r23, r19
 466:	60 32       	cpi	r22, 0x20	; 32
 468:	71 05       	cpc	r23, r1
 46a:	0c f0       	brlt	.+2      	; 0x46e <__stack+0xf>
 46c:	61 c0       	rjmp	.+194    	; 0x530 <__stack+0xd1>
 46e:	12 16       	cp	r1, r18
 470:	13 06       	cpc	r1, r19
 472:	6c f5       	brge	.+90     	; 0x4ce <__stack+0x6f>
 474:	37 01       	movw	r6, r14
 476:	48 01       	movw	r8, r16
 478:	06 2e       	mov	r0, r22
 47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
 47c:	96 94       	lsr	r9
 47e:	87 94       	ror	r8
 480:	77 94       	ror	r7
 482:	67 94       	ror	r6
 484:	0a 94       	dec	r0
 486:	d2 f7       	brpl	.-12     	; 0x47c <__stack+0x1d>
 488:	21 e0       	ldi	r18, 0x01	; 1
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	40 e0       	ldi	r20, 0x00	; 0
 48e:	50 e0       	ldi	r21, 0x00	; 0
 490:	04 c0       	rjmp	.+8      	; 0x49a <__stack+0x3b>
 492:	22 0f       	add	r18, r18
 494:	33 1f       	adc	r19, r19
 496:	44 1f       	adc	r20, r20
 498:	55 1f       	adc	r21, r21
 49a:	6a 95       	dec	r22
 49c:	d2 f7       	brpl	.-12     	; 0x492 <__stack+0x33>
 49e:	21 50       	subi	r18, 0x01	; 1
 4a0:	30 40       	sbci	r19, 0x00	; 0
 4a2:	40 40       	sbci	r20, 0x00	; 0
 4a4:	50 40       	sbci	r21, 0x00	; 0
 4a6:	2e 21       	and	r18, r14
 4a8:	3f 21       	and	r19, r15
 4aa:	40 23       	and	r20, r16
 4ac:	51 23       	and	r21, r17
 4ae:	21 15       	cp	r18, r1
 4b0:	31 05       	cpc	r19, r1
 4b2:	41 05       	cpc	r20, r1
 4b4:	51 05       	cpc	r21, r1
 4b6:	21 f0       	breq	.+8      	; 0x4c0 <__stack+0x61>
 4b8:	21 e0       	ldi	r18, 0x01	; 1
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	40 e0       	ldi	r20, 0x00	; 0
 4be:	50 e0       	ldi	r21, 0x00	; 0
 4c0:	79 01       	movw	r14, r18
 4c2:	8a 01       	movw	r16, r20
 4c4:	e6 28       	or	r14, r6
 4c6:	f7 28       	or	r15, r7
 4c8:	08 29       	or	r16, r8
 4ca:	19 29       	or	r17, r9
 4cc:	3c c0       	rjmp	.+120    	; 0x546 <__stack+0xe7>
 4ce:	23 2b       	or	r18, r19
 4d0:	d1 f1       	breq	.+116    	; 0x546 <__stack+0xe7>
 4d2:	26 0e       	add	r2, r22
 4d4:	37 1e       	adc	r3, r23
 4d6:	35 01       	movw	r6, r10
 4d8:	46 01       	movw	r8, r12
 4da:	06 2e       	mov	r0, r22
 4dc:	04 c0       	rjmp	.+8      	; 0x4e6 <__stack+0x87>
 4de:	96 94       	lsr	r9
 4e0:	87 94       	ror	r8
 4e2:	77 94       	ror	r7
 4e4:	67 94       	ror	r6
 4e6:	0a 94       	dec	r0
 4e8:	d2 f7       	brpl	.-12     	; 0x4de <__stack+0x7f>
 4ea:	21 e0       	ldi	r18, 0x01	; 1
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	40 e0       	ldi	r20, 0x00	; 0
 4f0:	50 e0       	ldi	r21, 0x00	; 0
 4f2:	04 c0       	rjmp	.+8      	; 0x4fc <__stack+0x9d>
 4f4:	22 0f       	add	r18, r18
 4f6:	33 1f       	adc	r19, r19
 4f8:	44 1f       	adc	r20, r20
 4fa:	55 1f       	adc	r21, r21
 4fc:	6a 95       	dec	r22
 4fe:	d2 f7       	brpl	.-12     	; 0x4f4 <__stack+0x95>
 500:	21 50       	subi	r18, 0x01	; 1
 502:	30 40       	sbci	r19, 0x00	; 0
 504:	40 40       	sbci	r20, 0x00	; 0
 506:	50 40       	sbci	r21, 0x00	; 0
 508:	2a 21       	and	r18, r10
 50a:	3b 21       	and	r19, r11
 50c:	4c 21       	and	r20, r12
 50e:	5d 21       	and	r21, r13
 510:	21 15       	cp	r18, r1
 512:	31 05       	cpc	r19, r1
 514:	41 05       	cpc	r20, r1
 516:	51 05       	cpc	r21, r1
 518:	21 f0       	breq	.+8      	; 0x522 <__stack+0xc3>
 51a:	21 e0       	ldi	r18, 0x01	; 1
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	40 e0       	ldi	r20, 0x00	; 0
 520:	50 e0       	ldi	r21, 0x00	; 0
 522:	59 01       	movw	r10, r18
 524:	6a 01       	movw	r12, r20
 526:	a6 28       	or	r10, r6
 528:	b7 28       	or	r11, r7
 52a:	c8 28       	or	r12, r8
 52c:	d9 28       	or	r13, r9
 52e:	0b c0       	rjmp	.+22     	; 0x546 <__stack+0xe7>
 530:	82 15       	cp	r24, r2
 532:	93 05       	cpc	r25, r3
 534:	2c f0       	brlt	.+10     	; 0x540 <__stack+0xe1>
 536:	1c 01       	movw	r2, r24
 538:	aa 24       	eor	r10, r10
 53a:	bb 24       	eor	r11, r11
 53c:	65 01       	movw	r12, r10
 53e:	03 c0       	rjmp	.+6      	; 0x546 <__stack+0xe7>
 540:	ee 24       	eor	r14, r14
 542:	ff 24       	eor	r15, r15
 544:	87 01       	movw	r16, r14
 546:	11 96       	adiw	r26, 0x01	; 1
 548:	9c 91       	ld	r25, X
 54a:	d2 01       	movw	r26, r4
 54c:	11 96       	adiw	r26, 0x01	; 1
 54e:	8c 91       	ld	r24, X
 550:	98 17       	cp	r25, r24
 552:	09 f4       	brne	.+2      	; 0x556 <__stack+0xf7>
 554:	45 c0       	rjmp	.+138    	; 0x5e0 <__stack+0x181>
 556:	99 23       	and	r25, r25
 558:	39 f0       	breq	.+14     	; 0x568 <__stack+0x109>
 55a:	a8 01       	movw	r20, r16
 55c:	97 01       	movw	r18, r14
 55e:	2a 19       	sub	r18, r10
 560:	3b 09       	sbc	r19, r11
 562:	4c 09       	sbc	r20, r12
 564:	5d 09       	sbc	r21, r13
 566:	06 c0       	rjmp	.+12     	; 0x574 <__stack+0x115>
 568:	a6 01       	movw	r20, r12
 56a:	95 01       	movw	r18, r10
 56c:	2e 19       	sub	r18, r14
 56e:	3f 09       	sbc	r19, r15
 570:	40 0b       	sbc	r20, r16
 572:	51 0b       	sbc	r21, r17
 574:	57 fd       	sbrc	r21, 7
 576:	08 c0       	rjmp	.+16     	; 0x588 <__stack+0x129>
 578:	11 82       	std	Z+1, r1	; 0x01
 57a:	33 82       	std	Z+3, r3	; 0x03
 57c:	22 82       	std	Z+2, r2	; 0x02
 57e:	24 83       	std	Z+4, r18	; 0x04
 580:	35 83       	std	Z+5, r19	; 0x05
 582:	46 83       	std	Z+6, r20	; 0x06
 584:	57 83       	std	Z+7, r21	; 0x07
 586:	1d c0       	rjmp	.+58     	; 0x5c2 <__stack+0x163>
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	81 83       	std	Z+1, r24	; 0x01
 58c:	33 82       	std	Z+3, r3	; 0x03
 58e:	22 82       	std	Z+2, r2	; 0x02
 590:	88 27       	eor	r24, r24
 592:	99 27       	eor	r25, r25
 594:	dc 01       	movw	r26, r24
 596:	82 1b       	sub	r24, r18
 598:	93 0b       	sbc	r25, r19
 59a:	a4 0b       	sbc	r26, r20
 59c:	b5 0b       	sbc	r27, r21
 59e:	84 83       	std	Z+4, r24	; 0x04
 5a0:	95 83       	std	Z+5, r25	; 0x05
 5a2:	a6 83       	std	Z+6, r26	; 0x06
 5a4:	b7 83       	std	Z+7, r27	; 0x07
 5a6:	0d c0       	rjmp	.+26     	; 0x5c2 <__stack+0x163>
 5a8:	22 0f       	add	r18, r18
 5aa:	33 1f       	adc	r19, r19
 5ac:	44 1f       	adc	r20, r20
 5ae:	55 1f       	adc	r21, r21
 5b0:	24 83       	std	Z+4, r18	; 0x04
 5b2:	35 83       	std	Z+5, r19	; 0x05
 5b4:	46 83       	std	Z+6, r20	; 0x06
 5b6:	57 83       	std	Z+7, r21	; 0x07
 5b8:	82 81       	ldd	r24, Z+2	; 0x02
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	01 97       	sbiw	r24, 0x01	; 1
 5be:	93 83       	std	Z+3, r25	; 0x03
 5c0:	82 83       	std	Z+2, r24	; 0x02
 5c2:	24 81       	ldd	r18, Z+4	; 0x04
 5c4:	35 81       	ldd	r19, Z+5	; 0x05
 5c6:	46 81       	ldd	r20, Z+6	; 0x06
 5c8:	57 81       	ldd	r21, Z+7	; 0x07
 5ca:	da 01       	movw	r26, r20
 5cc:	c9 01       	movw	r24, r18
 5ce:	01 97       	sbiw	r24, 0x01	; 1
 5d0:	a1 09       	sbc	r26, r1
 5d2:	b1 09       	sbc	r27, r1
 5d4:	8f 5f       	subi	r24, 0xFF	; 255
 5d6:	9f 4f       	sbci	r25, 0xFF	; 255
 5d8:	af 4f       	sbci	r26, 0xFF	; 255
 5da:	bf 43       	sbci	r27, 0x3F	; 63
 5dc:	28 f3       	brcs	.-54     	; 0x5a8 <__stack+0x149>
 5de:	0b c0       	rjmp	.+22     	; 0x5f6 <__stack+0x197>
 5e0:	91 83       	std	Z+1, r25	; 0x01
 5e2:	33 82       	std	Z+3, r3	; 0x03
 5e4:	22 82       	std	Z+2, r2	; 0x02
 5e6:	ea 0c       	add	r14, r10
 5e8:	fb 1c       	adc	r15, r11
 5ea:	0c 1d       	adc	r16, r12
 5ec:	1d 1d       	adc	r17, r13
 5ee:	e4 82       	std	Z+4, r14	; 0x04
 5f0:	f5 82       	std	Z+5, r15	; 0x05
 5f2:	06 83       	std	Z+6, r16	; 0x06
 5f4:	17 83       	std	Z+7, r17	; 0x07
 5f6:	83 e0       	ldi	r24, 0x03	; 3
 5f8:	80 83       	st	Z, r24
 5fa:	24 81       	ldd	r18, Z+4	; 0x04
 5fc:	35 81       	ldd	r19, Z+5	; 0x05
 5fe:	46 81       	ldd	r20, Z+6	; 0x06
 600:	57 81       	ldd	r21, Z+7	; 0x07
 602:	57 ff       	sbrs	r21, 7
 604:	1a c0       	rjmp	.+52     	; 0x63a <__stack+0x1db>
 606:	c9 01       	movw	r24, r18
 608:	aa 27       	eor	r26, r26
 60a:	97 fd       	sbrc	r25, 7
 60c:	a0 95       	com	r26
 60e:	ba 2f       	mov	r27, r26
 610:	81 70       	andi	r24, 0x01	; 1
 612:	90 70       	andi	r25, 0x00	; 0
 614:	a0 70       	andi	r26, 0x00	; 0
 616:	b0 70       	andi	r27, 0x00	; 0
 618:	56 95       	lsr	r21
 61a:	47 95       	ror	r20
 61c:	37 95       	ror	r19
 61e:	27 95       	ror	r18
 620:	82 2b       	or	r24, r18
 622:	93 2b       	or	r25, r19
 624:	a4 2b       	or	r26, r20
 626:	b5 2b       	or	r27, r21
 628:	84 83       	std	Z+4, r24	; 0x04
 62a:	95 83       	std	Z+5, r25	; 0x05
 62c:	a6 83       	std	Z+6, r26	; 0x06
 62e:	b7 83       	std	Z+7, r27	; 0x07
 630:	82 81       	ldd	r24, Z+2	; 0x02
 632:	93 81       	ldd	r25, Z+3	; 0x03
 634:	01 96       	adiw	r24, 0x01	; 1
 636:	93 83       	std	Z+3, r25	; 0x03
 638:	82 83       	std	Z+2, r24	; 0x02
 63a:	df 01       	movw	r26, r30
 63c:	01 c0       	rjmp	.+2      	; 0x640 <__stack+0x1e1>
 63e:	d2 01       	movw	r26, r4
 640:	cd 01       	movw	r24, r26
 642:	cd b7       	in	r28, 0x3d	; 61
 644:	de b7       	in	r29, 0x3e	; 62
 646:	e2 e1       	ldi	r30, 0x12	; 18
 648:	0c 94 d1 07 	jmp	0xfa2	; 0xfa2 <__epilogue_restores__>

0000064c <__subsf3>:
 64c:	a0 e2       	ldi	r26, 0x20	; 32
 64e:	b0 e0       	ldi	r27, 0x00	; 0
 650:	ec e2       	ldi	r30, 0x2C	; 44
 652:	f3 e0       	ldi	r31, 0x03	; 3
 654:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x18>
 658:	69 83       	std	Y+1, r22	; 0x01
 65a:	7a 83       	std	Y+2, r23	; 0x02
 65c:	8b 83       	std	Y+3, r24	; 0x03
 65e:	9c 83       	std	Y+4, r25	; 0x04
 660:	2d 83       	std	Y+5, r18	; 0x05
 662:	3e 83       	std	Y+6, r19	; 0x06
 664:	4f 83       	std	Y+7, r20	; 0x07
 666:	58 87       	std	Y+8, r21	; 0x08
 668:	e9 e0       	ldi	r30, 0x09	; 9
 66a:	ee 2e       	mov	r14, r30
 66c:	f1 2c       	mov	r15, r1
 66e:	ec 0e       	add	r14, r28
 670:	fd 1e       	adc	r15, r29
 672:	ce 01       	movw	r24, r28
 674:	01 96       	adiw	r24, 0x01	; 1
 676:	b7 01       	movw	r22, r14
 678:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 67c:	8e 01       	movw	r16, r28
 67e:	0f 5e       	subi	r16, 0xEF	; 239
 680:	1f 4f       	sbci	r17, 0xFF	; 255
 682:	ce 01       	movw	r24, r28
 684:	05 96       	adiw	r24, 0x05	; 5
 686:	b8 01       	movw	r22, r16
 688:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 68c:	8a 89       	ldd	r24, Y+18	; 0x12
 68e:	91 e0       	ldi	r25, 0x01	; 1
 690:	89 27       	eor	r24, r25
 692:	8a 8b       	std	Y+18, r24	; 0x12
 694:	c7 01       	movw	r24, r14
 696:	b8 01       	movw	r22, r16
 698:	ae 01       	movw	r20, r28
 69a:	47 5e       	subi	r20, 0xE7	; 231
 69c:	5f 4f       	sbci	r21, 0xFF	; 255
 69e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_fpadd_parts>
 6a2:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__pack_f>
 6a6:	a0 96       	adiw	r28, 0x20	; 32
 6a8:	e6 e0       	ldi	r30, 0x06	; 6
 6aa:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__epilogue_restores__+0x18>

000006ae <__addsf3>:
 6ae:	a0 e2       	ldi	r26, 0x20	; 32
 6b0:	b0 e0       	ldi	r27, 0x00	; 0
 6b2:	ed e5       	ldi	r30, 0x5D	; 93
 6b4:	f3 e0       	ldi	r31, 0x03	; 3
 6b6:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x18>
 6ba:	69 83       	std	Y+1, r22	; 0x01
 6bc:	7a 83       	std	Y+2, r23	; 0x02
 6be:	8b 83       	std	Y+3, r24	; 0x03
 6c0:	9c 83       	std	Y+4, r25	; 0x04
 6c2:	2d 83       	std	Y+5, r18	; 0x05
 6c4:	3e 83       	std	Y+6, r19	; 0x06
 6c6:	4f 83       	std	Y+7, r20	; 0x07
 6c8:	58 87       	std	Y+8, r21	; 0x08
 6ca:	f9 e0       	ldi	r31, 0x09	; 9
 6cc:	ef 2e       	mov	r14, r31
 6ce:	f1 2c       	mov	r15, r1
 6d0:	ec 0e       	add	r14, r28
 6d2:	fd 1e       	adc	r15, r29
 6d4:	ce 01       	movw	r24, r28
 6d6:	01 96       	adiw	r24, 0x01	; 1
 6d8:	b7 01       	movw	r22, r14
 6da:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 6de:	8e 01       	movw	r16, r28
 6e0:	0f 5e       	subi	r16, 0xEF	; 239
 6e2:	1f 4f       	sbci	r17, 0xFF	; 255
 6e4:	ce 01       	movw	r24, r28
 6e6:	05 96       	adiw	r24, 0x05	; 5
 6e8:	b8 01       	movw	r22, r16
 6ea:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 6ee:	c7 01       	movw	r24, r14
 6f0:	b8 01       	movw	r22, r16
 6f2:	ae 01       	movw	r20, r28
 6f4:	47 5e       	subi	r20, 0xE7	; 231
 6f6:	5f 4f       	sbci	r21, 0xFF	; 255
 6f8:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_fpadd_parts>
 6fc:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__pack_f>
 700:	a0 96       	adiw	r28, 0x20	; 32
 702:	e6 e0       	ldi	r30, 0x06	; 6
 704:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__epilogue_restores__+0x18>

00000708 <__mulsf3>:
 708:	a0 e2       	ldi	r26, 0x20	; 32
 70a:	b0 e0       	ldi	r27, 0x00	; 0
 70c:	ea e8       	ldi	r30, 0x8A	; 138
 70e:	f3 e0       	ldi	r31, 0x03	; 3
 710:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__prologue_saves__>
 714:	69 83       	std	Y+1, r22	; 0x01
 716:	7a 83       	std	Y+2, r23	; 0x02
 718:	8b 83       	std	Y+3, r24	; 0x03
 71a:	9c 83       	std	Y+4, r25	; 0x04
 71c:	2d 83       	std	Y+5, r18	; 0x05
 71e:	3e 83       	std	Y+6, r19	; 0x06
 720:	4f 83       	std	Y+7, r20	; 0x07
 722:	58 87       	std	Y+8, r21	; 0x08
 724:	ce 01       	movw	r24, r28
 726:	01 96       	adiw	r24, 0x01	; 1
 728:	be 01       	movw	r22, r28
 72a:	67 5f       	subi	r22, 0xF7	; 247
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 732:	ce 01       	movw	r24, r28
 734:	05 96       	adiw	r24, 0x05	; 5
 736:	be 01       	movw	r22, r28
 738:	6f 5e       	subi	r22, 0xEF	; 239
 73a:	7f 4f       	sbci	r23, 0xFF	; 255
 73c:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 740:	99 85       	ldd	r25, Y+9	; 0x09
 742:	92 30       	cpi	r25, 0x02	; 2
 744:	88 f0       	brcs	.+34     	; 0x768 <__mulsf3+0x60>
 746:	89 89       	ldd	r24, Y+17	; 0x11
 748:	82 30       	cpi	r24, 0x02	; 2
 74a:	c8 f0       	brcs	.+50     	; 0x77e <__mulsf3+0x76>
 74c:	94 30       	cpi	r25, 0x04	; 4
 74e:	19 f4       	brne	.+6      	; 0x756 <__mulsf3+0x4e>
 750:	82 30       	cpi	r24, 0x02	; 2
 752:	51 f4       	brne	.+20     	; 0x768 <__mulsf3+0x60>
 754:	04 c0       	rjmp	.+8      	; 0x75e <__mulsf3+0x56>
 756:	84 30       	cpi	r24, 0x04	; 4
 758:	29 f4       	brne	.+10     	; 0x764 <__mulsf3+0x5c>
 75a:	92 30       	cpi	r25, 0x02	; 2
 75c:	81 f4       	brne	.+32     	; 0x77e <__mulsf3+0x76>
 75e:	8e e6       	ldi	r24, 0x6E	; 110
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	c6 c0       	rjmp	.+396    	; 0x8f0 <__mulsf3+0x1e8>
 764:	92 30       	cpi	r25, 0x02	; 2
 766:	49 f4       	brne	.+18     	; 0x77a <__mulsf3+0x72>
 768:	20 e0       	ldi	r18, 0x00	; 0
 76a:	9a 85       	ldd	r25, Y+10	; 0x0a
 76c:	8a 89       	ldd	r24, Y+18	; 0x12
 76e:	98 13       	cpse	r25, r24
 770:	21 e0       	ldi	r18, 0x01	; 1
 772:	2a 87       	std	Y+10, r18	; 0x0a
 774:	ce 01       	movw	r24, r28
 776:	09 96       	adiw	r24, 0x09	; 9
 778:	bb c0       	rjmp	.+374    	; 0x8f0 <__mulsf3+0x1e8>
 77a:	82 30       	cpi	r24, 0x02	; 2
 77c:	49 f4       	brne	.+18     	; 0x790 <__mulsf3+0x88>
 77e:	20 e0       	ldi	r18, 0x00	; 0
 780:	9a 85       	ldd	r25, Y+10	; 0x0a
 782:	8a 89       	ldd	r24, Y+18	; 0x12
 784:	98 13       	cpse	r25, r24
 786:	21 e0       	ldi	r18, 0x01	; 1
 788:	2a 8b       	std	Y+18, r18	; 0x12
 78a:	ce 01       	movw	r24, r28
 78c:	41 96       	adiw	r24, 0x11	; 17
 78e:	b0 c0       	rjmp	.+352    	; 0x8f0 <__mulsf3+0x1e8>
 790:	2d 84       	ldd	r2, Y+13	; 0x0d
 792:	3e 84       	ldd	r3, Y+14	; 0x0e
 794:	4f 84       	ldd	r4, Y+15	; 0x0f
 796:	58 88       	ldd	r5, Y+16	; 0x10
 798:	6d 88       	ldd	r6, Y+21	; 0x15
 79a:	7e 88       	ldd	r7, Y+22	; 0x16
 79c:	8f 88       	ldd	r8, Y+23	; 0x17
 79e:	98 8c       	ldd	r9, Y+24	; 0x18
 7a0:	ee 24       	eor	r14, r14
 7a2:	ff 24       	eor	r15, r15
 7a4:	87 01       	movw	r16, r14
 7a6:	aa 24       	eor	r10, r10
 7a8:	bb 24       	eor	r11, r11
 7aa:	65 01       	movw	r12, r10
 7ac:	40 e0       	ldi	r20, 0x00	; 0
 7ae:	50 e0       	ldi	r21, 0x00	; 0
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	70 e0       	ldi	r23, 0x00	; 0
 7b4:	e0 e0       	ldi	r30, 0x00	; 0
 7b6:	f0 e0       	ldi	r31, 0x00	; 0
 7b8:	c1 01       	movw	r24, r2
 7ba:	81 70       	andi	r24, 0x01	; 1
 7bc:	90 70       	andi	r25, 0x00	; 0
 7be:	89 2b       	or	r24, r25
 7c0:	e9 f0       	breq	.+58     	; 0x7fc <__mulsf3+0xf4>
 7c2:	e6 0c       	add	r14, r6
 7c4:	f7 1c       	adc	r15, r7
 7c6:	08 1d       	adc	r16, r8
 7c8:	19 1d       	adc	r17, r9
 7ca:	9a 01       	movw	r18, r20
 7cc:	ab 01       	movw	r20, r22
 7ce:	2a 0d       	add	r18, r10
 7d0:	3b 1d       	adc	r19, r11
 7d2:	4c 1d       	adc	r20, r12
 7d4:	5d 1d       	adc	r21, r13
 7d6:	80 e0       	ldi	r24, 0x00	; 0
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	a0 e0       	ldi	r26, 0x00	; 0
 7dc:	b0 e0       	ldi	r27, 0x00	; 0
 7de:	e6 14       	cp	r14, r6
 7e0:	f7 04       	cpc	r15, r7
 7e2:	08 05       	cpc	r16, r8
 7e4:	19 05       	cpc	r17, r9
 7e6:	20 f4       	brcc	.+8      	; 0x7f0 <__mulsf3+0xe8>
 7e8:	81 e0       	ldi	r24, 0x01	; 1
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	a0 e0       	ldi	r26, 0x00	; 0
 7ee:	b0 e0       	ldi	r27, 0x00	; 0
 7f0:	ba 01       	movw	r22, r20
 7f2:	a9 01       	movw	r20, r18
 7f4:	48 0f       	add	r20, r24
 7f6:	59 1f       	adc	r21, r25
 7f8:	6a 1f       	adc	r22, r26
 7fa:	7b 1f       	adc	r23, r27
 7fc:	aa 0c       	add	r10, r10
 7fe:	bb 1c       	adc	r11, r11
 800:	cc 1c       	adc	r12, r12
 802:	dd 1c       	adc	r13, r13
 804:	97 fe       	sbrs	r9, 7
 806:	08 c0       	rjmp	.+16     	; 0x818 <__mulsf3+0x110>
 808:	81 e0       	ldi	r24, 0x01	; 1
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	a0 e0       	ldi	r26, 0x00	; 0
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	a8 2a       	or	r10, r24
 812:	b9 2a       	or	r11, r25
 814:	ca 2a       	or	r12, r26
 816:	db 2a       	or	r13, r27
 818:	31 96       	adiw	r30, 0x01	; 1
 81a:	e0 32       	cpi	r30, 0x20	; 32
 81c:	f1 05       	cpc	r31, r1
 81e:	49 f0       	breq	.+18     	; 0x832 <__mulsf3+0x12a>
 820:	66 0c       	add	r6, r6
 822:	77 1c       	adc	r7, r7
 824:	88 1c       	adc	r8, r8
 826:	99 1c       	adc	r9, r9
 828:	56 94       	lsr	r5
 82a:	47 94       	ror	r4
 82c:	37 94       	ror	r3
 82e:	27 94       	ror	r2
 830:	c3 cf       	rjmp	.-122    	; 0x7b8 <__mulsf3+0xb0>
 832:	fa 85       	ldd	r31, Y+10	; 0x0a
 834:	ea 89       	ldd	r30, Y+18	; 0x12
 836:	2b 89       	ldd	r18, Y+19	; 0x13
 838:	3c 89       	ldd	r19, Y+20	; 0x14
 83a:	8b 85       	ldd	r24, Y+11	; 0x0b
 83c:	9c 85       	ldd	r25, Y+12	; 0x0c
 83e:	28 0f       	add	r18, r24
 840:	39 1f       	adc	r19, r25
 842:	2e 5f       	subi	r18, 0xFE	; 254
 844:	3f 4f       	sbci	r19, 0xFF	; 255
 846:	17 c0       	rjmp	.+46     	; 0x876 <__mulsf3+0x16e>
 848:	ca 01       	movw	r24, r20
 84a:	81 70       	andi	r24, 0x01	; 1
 84c:	90 70       	andi	r25, 0x00	; 0
 84e:	89 2b       	or	r24, r25
 850:	61 f0       	breq	.+24     	; 0x86a <__mulsf3+0x162>
 852:	16 95       	lsr	r17
 854:	07 95       	ror	r16
 856:	f7 94       	ror	r15
 858:	e7 94       	ror	r14
 85a:	80 e0       	ldi	r24, 0x00	; 0
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	a0 e0       	ldi	r26, 0x00	; 0
 860:	b0 e8       	ldi	r27, 0x80	; 128
 862:	e8 2a       	or	r14, r24
 864:	f9 2a       	or	r15, r25
 866:	0a 2b       	or	r16, r26
 868:	1b 2b       	or	r17, r27
 86a:	76 95       	lsr	r23
 86c:	67 95       	ror	r22
 86e:	57 95       	ror	r21
 870:	47 95       	ror	r20
 872:	2f 5f       	subi	r18, 0xFF	; 255
 874:	3f 4f       	sbci	r19, 0xFF	; 255
 876:	77 fd       	sbrc	r23, 7
 878:	e7 cf       	rjmp	.-50     	; 0x848 <__mulsf3+0x140>
 87a:	0c c0       	rjmp	.+24     	; 0x894 <__mulsf3+0x18c>
 87c:	44 0f       	add	r20, r20
 87e:	55 1f       	adc	r21, r21
 880:	66 1f       	adc	r22, r22
 882:	77 1f       	adc	r23, r23
 884:	17 fd       	sbrc	r17, 7
 886:	41 60       	ori	r20, 0x01	; 1
 888:	ee 0c       	add	r14, r14
 88a:	ff 1c       	adc	r15, r15
 88c:	00 1f       	adc	r16, r16
 88e:	11 1f       	adc	r17, r17
 890:	21 50       	subi	r18, 0x01	; 1
 892:	30 40       	sbci	r19, 0x00	; 0
 894:	40 30       	cpi	r20, 0x00	; 0
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	59 07       	cpc	r21, r25
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	69 07       	cpc	r22, r25
 89e:	90 e4       	ldi	r25, 0x40	; 64
 8a0:	79 07       	cpc	r23, r25
 8a2:	60 f3       	brcs	.-40     	; 0x87c <__mulsf3+0x174>
 8a4:	2b 8f       	std	Y+27, r18	; 0x1b
 8a6:	3c 8f       	std	Y+28, r19	; 0x1c
 8a8:	db 01       	movw	r26, r22
 8aa:	ca 01       	movw	r24, r20
 8ac:	8f 77       	andi	r24, 0x7F	; 127
 8ae:	90 70       	andi	r25, 0x00	; 0
 8b0:	a0 70       	andi	r26, 0x00	; 0
 8b2:	b0 70       	andi	r27, 0x00	; 0
 8b4:	80 34       	cpi	r24, 0x40	; 64
 8b6:	91 05       	cpc	r25, r1
 8b8:	a1 05       	cpc	r26, r1
 8ba:	b1 05       	cpc	r27, r1
 8bc:	61 f4       	brne	.+24     	; 0x8d6 <__mulsf3+0x1ce>
 8be:	47 fd       	sbrc	r20, 7
 8c0:	0a c0       	rjmp	.+20     	; 0x8d6 <__mulsf3+0x1ce>
 8c2:	e1 14       	cp	r14, r1
 8c4:	f1 04       	cpc	r15, r1
 8c6:	01 05       	cpc	r16, r1
 8c8:	11 05       	cpc	r17, r1
 8ca:	29 f0       	breq	.+10     	; 0x8d6 <__mulsf3+0x1ce>
 8cc:	40 5c       	subi	r20, 0xC0	; 192
 8ce:	5f 4f       	sbci	r21, 0xFF	; 255
 8d0:	6f 4f       	sbci	r22, 0xFF	; 255
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	40 78       	andi	r20, 0x80	; 128
 8d6:	1a 8e       	std	Y+26, r1	; 0x1a
 8d8:	fe 17       	cp	r31, r30
 8da:	11 f0       	breq	.+4      	; 0x8e0 <__mulsf3+0x1d8>
 8dc:	81 e0       	ldi	r24, 0x01	; 1
 8de:	8a 8f       	std	Y+26, r24	; 0x1a
 8e0:	4d 8f       	std	Y+29, r20	; 0x1d
 8e2:	5e 8f       	std	Y+30, r21	; 0x1e
 8e4:	6f 8f       	std	Y+31, r22	; 0x1f
 8e6:	78 a3       	std	Y+32, r23	; 0x20
 8e8:	83 e0       	ldi	r24, 0x03	; 3
 8ea:	89 8f       	std	Y+25, r24	; 0x19
 8ec:	ce 01       	movw	r24, r28
 8ee:	49 96       	adiw	r24, 0x19	; 25
 8f0:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__pack_f>
 8f4:	a0 96       	adiw	r28, 0x20	; 32
 8f6:	e2 e1       	ldi	r30, 0x12	; 18
 8f8:	0c 94 d1 07 	jmp	0xfa2	; 0xfa2 <__epilogue_restores__>

000008fc <__eqsf2>:
 8fc:	a8 e1       	ldi	r26, 0x18	; 24
 8fe:	b0 e0       	ldi	r27, 0x00	; 0
 900:	e4 e8       	ldi	r30, 0x84	; 132
 902:	f4 e0       	ldi	r31, 0x04	; 4
 904:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x18>
 908:	69 83       	std	Y+1, r22	; 0x01
 90a:	7a 83       	std	Y+2, r23	; 0x02
 90c:	8b 83       	std	Y+3, r24	; 0x03
 90e:	9c 83       	std	Y+4, r25	; 0x04
 910:	2d 83       	std	Y+5, r18	; 0x05
 912:	3e 83       	std	Y+6, r19	; 0x06
 914:	4f 83       	std	Y+7, r20	; 0x07
 916:	58 87       	std	Y+8, r21	; 0x08
 918:	89 e0       	ldi	r24, 0x09	; 9
 91a:	e8 2e       	mov	r14, r24
 91c:	f1 2c       	mov	r15, r1
 91e:	ec 0e       	add	r14, r28
 920:	fd 1e       	adc	r15, r29
 922:	ce 01       	movw	r24, r28
 924:	01 96       	adiw	r24, 0x01	; 1
 926:	b7 01       	movw	r22, r14
 928:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 92c:	8e 01       	movw	r16, r28
 92e:	0f 5e       	subi	r16, 0xEF	; 239
 930:	1f 4f       	sbci	r17, 0xFF	; 255
 932:	ce 01       	movw	r24, r28
 934:	05 96       	adiw	r24, 0x05	; 5
 936:	b8 01       	movw	r22, r16
 938:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 93c:	89 85       	ldd	r24, Y+9	; 0x09
 93e:	82 30       	cpi	r24, 0x02	; 2
 940:	40 f0       	brcs	.+16     	; 0x952 <__eqsf2+0x56>
 942:	89 89       	ldd	r24, Y+17	; 0x11
 944:	82 30       	cpi	r24, 0x02	; 2
 946:	28 f0       	brcs	.+10     	; 0x952 <__eqsf2+0x56>
 948:	c7 01       	movw	r24, r14
 94a:	b8 01       	movw	r22, r16
 94c:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fpcmp_parts_f>
 950:	01 c0       	rjmp	.+2      	; 0x954 <__eqsf2+0x58>
 952:	81 e0       	ldi	r24, 0x01	; 1
 954:	68 96       	adiw	r28, 0x18	; 24
 956:	e6 e0       	ldi	r30, 0x06	; 6
 958:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__epilogue_restores__+0x18>

0000095c <__gtsf2>:
 95c:	a8 e1       	ldi	r26, 0x18	; 24
 95e:	b0 e0       	ldi	r27, 0x00	; 0
 960:	e4 eb       	ldi	r30, 0xB4	; 180
 962:	f4 e0       	ldi	r31, 0x04	; 4
 964:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x18>
 968:	69 83       	std	Y+1, r22	; 0x01
 96a:	7a 83       	std	Y+2, r23	; 0x02
 96c:	8b 83       	std	Y+3, r24	; 0x03
 96e:	9c 83       	std	Y+4, r25	; 0x04
 970:	2d 83       	std	Y+5, r18	; 0x05
 972:	3e 83       	std	Y+6, r19	; 0x06
 974:	4f 83       	std	Y+7, r20	; 0x07
 976:	58 87       	std	Y+8, r21	; 0x08
 978:	89 e0       	ldi	r24, 0x09	; 9
 97a:	e8 2e       	mov	r14, r24
 97c:	f1 2c       	mov	r15, r1
 97e:	ec 0e       	add	r14, r28
 980:	fd 1e       	adc	r15, r29
 982:	ce 01       	movw	r24, r28
 984:	01 96       	adiw	r24, 0x01	; 1
 986:	b7 01       	movw	r22, r14
 988:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 98c:	8e 01       	movw	r16, r28
 98e:	0f 5e       	subi	r16, 0xEF	; 239
 990:	1f 4f       	sbci	r17, 0xFF	; 255
 992:	ce 01       	movw	r24, r28
 994:	05 96       	adiw	r24, 0x05	; 5
 996:	b8 01       	movw	r22, r16
 998:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 99c:	89 85       	ldd	r24, Y+9	; 0x09
 99e:	82 30       	cpi	r24, 0x02	; 2
 9a0:	40 f0       	brcs	.+16     	; 0x9b2 <__gtsf2+0x56>
 9a2:	89 89       	ldd	r24, Y+17	; 0x11
 9a4:	82 30       	cpi	r24, 0x02	; 2
 9a6:	28 f0       	brcs	.+10     	; 0x9b2 <__gtsf2+0x56>
 9a8:	c7 01       	movw	r24, r14
 9aa:	b8 01       	movw	r22, r16
 9ac:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fpcmp_parts_f>
 9b0:	01 c0       	rjmp	.+2      	; 0x9b4 <__gtsf2+0x58>
 9b2:	8f ef       	ldi	r24, 0xFF	; 255
 9b4:	68 96       	adiw	r28, 0x18	; 24
 9b6:	e6 e0       	ldi	r30, 0x06	; 6
 9b8:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__epilogue_restores__+0x18>

000009bc <__ltsf2>:
 9bc:	a8 e1       	ldi	r26, 0x18	; 24
 9be:	b0 e0       	ldi	r27, 0x00	; 0
 9c0:	e4 ee       	ldi	r30, 0xE4	; 228
 9c2:	f4 e0       	ldi	r31, 0x04	; 4
 9c4:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x18>
 9c8:	69 83       	std	Y+1, r22	; 0x01
 9ca:	7a 83       	std	Y+2, r23	; 0x02
 9cc:	8b 83       	std	Y+3, r24	; 0x03
 9ce:	9c 83       	std	Y+4, r25	; 0x04
 9d0:	2d 83       	std	Y+5, r18	; 0x05
 9d2:	3e 83       	std	Y+6, r19	; 0x06
 9d4:	4f 83       	std	Y+7, r20	; 0x07
 9d6:	58 87       	std	Y+8, r21	; 0x08
 9d8:	89 e0       	ldi	r24, 0x09	; 9
 9da:	e8 2e       	mov	r14, r24
 9dc:	f1 2c       	mov	r15, r1
 9de:	ec 0e       	add	r14, r28
 9e0:	fd 1e       	adc	r15, r29
 9e2:	ce 01       	movw	r24, r28
 9e4:	01 96       	adiw	r24, 0x01	; 1
 9e6:	b7 01       	movw	r22, r14
 9e8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 9ec:	8e 01       	movw	r16, r28
 9ee:	0f 5e       	subi	r16, 0xEF	; 239
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	ce 01       	movw	r24, r28
 9f4:	05 96       	adiw	r24, 0x05	; 5
 9f6:	b8 01       	movw	r22, r16
 9f8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 9fc:	89 85       	ldd	r24, Y+9	; 0x09
 9fe:	82 30       	cpi	r24, 0x02	; 2
 a00:	40 f0       	brcs	.+16     	; 0xa12 <__ltsf2+0x56>
 a02:	89 89       	ldd	r24, Y+17	; 0x11
 a04:	82 30       	cpi	r24, 0x02	; 2
 a06:	28 f0       	brcs	.+10     	; 0xa12 <__ltsf2+0x56>
 a08:	c7 01       	movw	r24, r14
 a0a:	b8 01       	movw	r22, r16
 a0c:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fpcmp_parts_f>
 a10:	01 c0       	rjmp	.+2      	; 0xa14 <__ltsf2+0x58>
 a12:	81 e0       	ldi	r24, 0x01	; 1
 a14:	68 96       	adiw	r28, 0x18	; 24
 a16:	e6 e0       	ldi	r30, 0x06	; 6
 a18:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__epilogue_restores__+0x18>

00000a1c <__floatsisf>:
 a1c:	a8 e0       	ldi	r26, 0x08	; 8
 a1e:	b0 e0       	ldi	r27, 0x00	; 0
 a20:	e4 e1       	ldi	r30, 0x14	; 20
 a22:	f5 e0       	ldi	r31, 0x05	; 5
 a24:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__prologue_saves__+0x12>
 a28:	9b 01       	movw	r18, r22
 a2a:	ac 01       	movw	r20, r24
 a2c:	83 e0       	ldi	r24, 0x03	; 3
 a2e:	89 83       	std	Y+1, r24	; 0x01
 a30:	da 01       	movw	r26, r20
 a32:	c9 01       	movw	r24, r18
 a34:	88 27       	eor	r24, r24
 a36:	b7 fd       	sbrc	r27, 7
 a38:	83 95       	inc	r24
 a3a:	99 27       	eor	r25, r25
 a3c:	aa 27       	eor	r26, r26
 a3e:	bb 27       	eor	r27, r27
 a40:	b8 2e       	mov	r11, r24
 a42:	21 15       	cp	r18, r1
 a44:	31 05       	cpc	r19, r1
 a46:	41 05       	cpc	r20, r1
 a48:	51 05       	cpc	r21, r1
 a4a:	19 f4       	brne	.+6      	; 0xa52 <__floatsisf+0x36>
 a4c:	82 e0       	ldi	r24, 0x02	; 2
 a4e:	89 83       	std	Y+1, r24	; 0x01
 a50:	3a c0       	rjmp	.+116    	; 0xac6 <__floatsisf+0xaa>
 a52:	88 23       	and	r24, r24
 a54:	a9 f0       	breq	.+42     	; 0xa80 <__floatsisf+0x64>
 a56:	20 30       	cpi	r18, 0x00	; 0
 a58:	80 e0       	ldi	r24, 0x00	; 0
 a5a:	38 07       	cpc	r19, r24
 a5c:	80 e0       	ldi	r24, 0x00	; 0
 a5e:	48 07       	cpc	r20, r24
 a60:	80 e8       	ldi	r24, 0x80	; 128
 a62:	58 07       	cpc	r21, r24
 a64:	29 f4       	brne	.+10     	; 0xa70 <__floatsisf+0x54>
 a66:	60 e0       	ldi	r22, 0x00	; 0
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	80 e0       	ldi	r24, 0x00	; 0
 a6c:	9f ec       	ldi	r25, 0xCF	; 207
 a6e:	30 c0       	rjmp	.+96     	; 0xad0 <__floatsisf+0xb4>
 a70:	ee 24       	eor	r14, r14
 a72:	ff 24       	eor	r15, r15
 a74:	87 01       	movw	r16, r14
 a76:	e2 1a       	sub	r14, r18
 a78:	f3 0a       	sbc	r15, r19
 a7a:	04 0b       	sbc	r16, r20
 a7c:	15 0b       	sbc	r17, r21
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <__floatsisf+0x68>
 a80:	79 01       	movw	r14, r18
 a82:	8a 01       	movw	r16, r20
 a84:	8e e1       	ldi	r24, 0x1E	; 30
 a86:	c8 2e       	mov	r12, r24
 a88:	d1 2c       	mov	r13, r1
 a8a:	dc 82       	std	Y+4, r13	; 0x04
 a8c:	cb 82       	std	Y+3, r12	; 0x03
 a8e:	ed 82       	std	Y+5, r14	; 0x05
 a90:	fe 82       	std	Y+6, r15	; 0x06
 a92:	0f 83       	std	Y+7, r16	; 0x07
 a94:	18 87       	std	Y+8, r17	; 0x08
 a96:	c8 01       	movw	r24, r16
 a98:	b7 01       	movw	r22, r14
 a9a:	0e 94 c0 05 	call	0xb80	; 0xb80 <__clzsi2>
 a9e:	01 97       	sbiw	r24, 0x01	; 1
 aa0:	18 16       	cp	r1, r24
 aa2:	19 06       	cpc	r1, r25
 aa4:	84 f4       	brge	.+32     	; 0xac6 <__floatsisf+0xaa>
 aa6:	08 2e       	mov	r0, r24
 aa8:	04 c0       	rjmp	.+8      	; 0xab2 <__floatsisf+0x96>
 aaa:	ee 0c       	add	r14, r14
 aac:	ff 1c       	adc	r15, r15
 aae:	00 1f       	adc	r16, r16
 ab0:	11 1f       	adc	r17, r17
 ab2:	0a 94       	dec	r0
 ab4:	d2 f7       	brpl	.-12     	; 0xaaa <__floatsisf+0x8e>
 ab6:	ed 82       	std	Y+5, r14	; 0x05
 ab8:	fe 82       	std	Y+6, r15	; 0x06
 aba:	0f 83       	std	Y+7, r16	; 0x07
 abc:	18 87       	std	Y+8, r17	; 0x08
 abe:	c8 1a       	sub	r12, r24
 ac0:	d9 0a       	sbc	r13, r25
 ac2:	dc 82       	std	Y+4, r13	; 0x04
 ac4:	cb 82       	std	Y+3, r12	; 0x03
 ac6:	ba 82       	std	Y+2, r11	; 0x02
 ac8:	ce 01       	movw	r24, r28
 aca:	01 96       	adiw	r24, 0x01	; 1
 acc:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__pack_f>
 ad0:	28 96       	adiw	r28, 0x08	; 8
 ad2:	e9 e0       	ldi	r30, 0x09	; 9
 ad4:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__epilogue_restores__+0x12>

00000ad8 <__fixsfsi>:
 ad8:	ac e0       	ldi	r26, 0x0C	; 12
 ada:	b0 e0       	ldi	r27, 0x00	; 0
 adc:	e2 e7       	ldi	r30, 0x72	; 114
 ade:	f5 e0       	ldi	r31, 0x05	; 5
 ae0:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__prologue_saves__+0x20>
 ae4:	69 83       	std	Y+1, r22	; 0x01
 ae6:	7a 83       	std	Y+2, r23	; 0x02
 ae8:	8b 83       	std	Y+3, r24	; 0x03
 aea:	9c 83       	std	Y+4, r25	; 0x04
 aec:	ce 01       	movw	r24, r28
 aee:	01 96       	adiw	r24, 0x01	; 1
 af0:	be 01       	movw	r22, r28
 af2:	6b 5f       	subi	r22, 0xFB	; 251
 af4:	7f 4f       	sbci	r23, 0xFF	; 255
 af6:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__unpack_f>
 afa:	8d 81       	ldd	r24, Y+5	; 0x05
 afc:	82 30       	cpi	r24, 0x02	; 2
 afe:	61 f1       	breq	.+88     	; 0xb58 <__fixsfsi+0x80>
 b00:	82 30       	cpi	r24, 0x02	; 2
 b02:	50 f1       	brcs	.+84     	; 0xb58 <__fixsfsi+0x80>
 b04:	84 30       	cpi	r24, 0x04	; 4
 b06:	21 f4       	brne	.+8      	; 0xb10 <__fixsfsi+0x38>
 b08:	8e 81       	ldd	r24, Y+6	; 0x06
 b0a:	88 23       	and	r24, r24
 b0c:	51 f1       	breq	.+84     	; 0xb62 <__fixsfsi+0x8a>
 b0e:	2e c0       	rjmp	.+92     	; 0xb6c <__fixsfsi+0x94>
 b10:	2f 81       	ldd	r18, Y+7	; 0x07
 b12:	38 85       	ldd	r19, Y+8	; 0x08
 b14:	37 fd       	sbrc	r19, 7
 b16:	20 c0       	rjmp	.+64     	; 0xb58 <__fixsfsi+0x80>
 b18:	6e 81       	ldd	r22, Y+6	; 0x06
 b1a:	2f 31       	cpi	r18, 0x1F	; 31
 b1c:	31 05       	cpc	r19, r1
 b1e:	1c f0       	brlt	.+6      	; 0xb26 <__fixsfsi+0x4e>
 b20:	66 23       	and	r22, r22
 b22:	f9 f0       	breq	.+62     	; 0xb62 <__fixsfsi+0x8a>
 b24:	23 c0       	rjmp	.+70     	; 0xb6c <__fixsfsi+0x94>
 b26:	8e e1       	ldi	r24, 0x1E	; 30
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	82 1b       	sub	r24, r18
 b2c:	93 0b       	sbc	r25, r19
 b2e:	29 85       	ldd	r18, Y+9	; 0x09
 b30:	3a 85       	ldd	r19, Y+10	; 0x0a
 b32:	4b 85       	ldd	r20, Y+11	; 0x0b
 b34:	5c 85       	ldd	r21, Y+12	; 0x0c
 b36:	04 c0       	rjmp	.+8      	; 0xb40 <__fixsfsi+0x68>
 b38:	56 95       	lsr	r21
 b3a:	47 95       	ror	r20
 b3c:	37 95       	ror	r19
 b3e:	27 95       	ror	r18
 b40:	8a 95       	dec	r24
 b42:	d2 f7       	brpl	.-12     	; 0xb38 <__fixsfsi+0x60>
 b44:	66 23       	and	r22, r22
 b46:	b1 f0       	breq	.+44     	; 0xb74 <__fixsfsi+0x9c>
 b48:	50 95       	com	r21
 b4a:	40 95       	com	r20
 b4c:	30 95       	com	r19
 b4e:	21 95       	neg	r18
 b50:	3f 4f       	sbci	r19, 0xFF	; 255
 b52:	4f 4f       	sbci	r20, 0xFF	; 255
 b54:	5f 4f       	sbci	r21, 0xFF	; 255
 b56:	0e c0       	rjmp	.+28     	; 0xb74 <__fixsfsi+0x9c>
 b58:	20 e0       	ldi	r18, 0x00	; 0
 b5a:	30 e0       	ldi	r19, 0x00	; 0
 b5c:	40 e0       	ldi	r20, 0x00	; 0
 b5e:	50 e0       	ldi	r21, 0x00	; 0
 b60:	09 c0       	rjmp	.+18     	; 0xb74 <__fixsfsi+0x9c>
 b62:	2f ef       	ldi	r18, 0xFF	; 255
 b64:	3f ef       	ldi	r19, 0xFF	; 255
 b66:	4f ef       	ldi	r20, 0xFF	; 255
 b68:	5f e7       	ldi	r21, 0x7F	; 127
 b6a:	04 c0       	rjmp	.+8      	; 0xb74 <__fixsfsi+0x9c>
 b6c:	20 e0       	ldi	r18, 0x00	; 0
 b6e:	30 e0       	ldi	r19, 0x00	; 0
 b70:	40 e0       	ldi	r20, 0x00	; 0
 b72:	50 e8       	ldi	r21, 0x80	; 128
 b74:	b9 01       	movw	r22, r18
 b76:	ca 01       	movw	r24, r20
 b78:	2c 96       	adiw	r28, 0x0c	; 12
 b7a:	e2 e0       	ldi	r30, 0x02	; 2
 b7c:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <__epilogue_restores__+0x20>

00000b80 <__clzsi2>:
 b80:	ef 92       	push	r14
 b82:	ff 92       	push	r15
 b84:	0f 93       	push	r16
 b86:	1f 93       	push	r17
 b88:	7b 01       	movw	r14, r22
 b8a:	8c 01       	movw	r16, r24
 b8c:	80 e0       	ldi	r24, 0x00	; 0
 b8e:	e8 16       	cp	r14, r24
 b90:	80 e0       	ldi	r24, 0x00	; 0
 b92:	f8 06       	cpc	r15, r24
 b94:	81 e0       	ldi	r24, 0x01	; 1
 b96:	08 07       	cpc	r16, r24
 b98:	80 e0       	ldi	r24, 0x00	; 0
 b9a:	18 07       	cpc	r17, r24
 b9c:	88 f4       	brcc	.+34     	; 0xbc0 <__clzsi2+0x40>
 b9e:	8f ef       	ldi	r24, 0xFF	; 255
 ba0:	e8 16       	cp	r14, r24
 ba2:	f1 04       	cpc	r15, r1
 ba4:	01 05       	cpc	r16, r1
 ba6:	11 05       	cpc	r17, r1
 ba8:	31 f0       	breq	.+12     	; 0xbb6 <__clzsi2+0x36>
 baa:	28 f0       	brcs	.+10     	; 0xbb6 <__clzsi2+0x36>
 bac:	88 e0       	ldi	r24, 0x08	; 8
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	a0 e0       	ldi	r26, 0x00	; 0
 bb2:	b0 e0       	ldi	r27, 0x00	; 0
 bb4:	17 c0       	rjmp	.+46     	; 0xbe4 <__clzsi2+0x64>
 bb6:	80 e0       	ldi	r24, 0x00	; 0
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	a0 e0       	ldi	r26, 0x00	; 0
 bbc:	b0 e0       	ldi	r27, 0x00	; 0
 bbe:	12 c0       	rjmp	.+36     	; 0xbe4 <__clzsi2+0x64>
 bc0:	80 e0       	ldi	r24, 0x00	; 0
 bc2:	e8 16       	cp	r14, r24
 bc4:	80 e0       	ldi	r24, 0x00	; 0
 bc6:	f8 06       	cpc	r15, r24
 bc8:	80 e0       	ldi	r24, 0x00	; 0
 bca:	08 07       	cpc	r16, r24
 bcc:	81 e0       	ldi	r24, 0x01	; 1
 bce:	18 07       	cpc	r17, r24
 bd0:	28 f0       	brcs	.+10     	; 0xbdc <__clzsi2+0x5c>
 bd2:	88 e1       	ldi	r24, 0x18	; 24
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	a0 e0       	ldi	r26, 0x00	; 0
 bd8:	b0 e0       	ldi	r27, 0x00	; 0
 bda:	04 c0       	rjmp	.+8      	; 0xbe4 <__clzsi2+0x64>
 bdc:	80 e1       	ldi	r24, 0x10	; 16
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	a0 e0       	ldi	r26, 0x00	; 0
 be2:	b0 e0       	ldi	r27, 0x00	; 0
 be4:	20 e2       	ldi	r18, 0x20	; 32
 be6:	30 e0       	ldi	r19, 0x00	; 0
 be8:	40 e0       	ldi	r20, 0x00	; 0
 bea:	50 e0       	ldi	r21, 0x00	; 0
 bec:	28 1b       	sub	r18, r24
 bee:	39 0b       	sbc	r19, r25
 bf0:	4a 0b       	sbc	r20, r26
 bf2:	5b 0b       	sbc	r21, r27
 bf4:	04 c0       	rjmp	.+8      	; 0xbfe <__clzsi2+0x7e>
 bf6:	16 95       	lsr	r17
 bf8:	07 95       	ror	r16
 bfa:	f7 94       	ror	r15
 bfc:	e7 94       	ror	r14
 bfe:	8a 95       	dec	r24
 c00:	d2 f7       	brpl	.-12     	; 0xbf6 <__clzsi2+0x76>
 c02:	f7 01       	movw	r30, r14
 c04:	ea 58       	subi	r30, 0x8A	; 138
 c06:	ff 4f       	sbci	r31, 0xFF	; 255
 c08:	80 81       	ld	r24, Z
 c0a:	28 1b       	sub	r18, r24
 c0c:	31 09       	sbc	r19, r1
 c0e:	41 09       	sbc	r20, r1
 c10:	51 09       	sbc	r21, r1
 c12:	c9 01       	movw	r24, r18
 c14:	1f 91       	pop	r17
 c16:	0f 91       	pop	r16
 c18:	ff 90       	pop	r15
 c1a:	ef 90       	pop	r14
 c1c:	08 95       	ret

00000c1e <__pack_f>:
 c1e:	df 92       	push	r13
 c20:	ef 92       	push	r14
 c22:	ff 92       	push	r15
 c24:	0f 93       	push	r16
 c26:	1f 93       	push	r17
 c28:	fc 01       	movw	r30, r24
 c2a:	e4 80       	ldd	r14, Z+4	; 0x04
 c2c:	f5 80       	ldd	r15, Z+5	; 0x05
 c2e:	06 81       	ldd	r16, Z+6	; 0x06
 c30:	17 81       	ldd	r17, Z+7	; 0x07
 c32:	d1 80       	ldd	r13, Z+1	; 0x01
 c34:	80 81       	ld	r24, Z
 c36:	82 30       	cpi	r24, 0x02	; 2
 c38:	48 f4       	brcc	.+18     	; 0xc4c <__pack_f+0x2e>
 c3a:	80 e0       	ldi	r24, 0x00	; 0
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	a0 e1       	ldi	r26, 0x10	; 16
 c40:	b0 e0       	ldi	r27, 0x00	; 0
 c42:	e8 2a       	or	r14, r24
 c44:	f9 2a       	or	r15, r25
 c46:	0a 2b       	or	r16, r26
 c48:	1b 2b       	or	r17, r27
 c4a:	a5 c0       	rjmp	.+330    	; 0xd96 <__pack_f+0x178>
 c4c:	84 30       	cpi	r24, 0x04	; 4
 c4e:	09 f4       	brne	.+2      	; 0xc52 <__pack_f+0x34>
 c50:	9f c0       	rjmp	.+318    	; 0xd90 <__pack_f+0x172>
 c52:	82 30       	cpi	r24, 0x02	; 2
 c54:	21 f4       	brne	.+8      	; 0xc5e <__pack_f+0x40>
 c56:	ee 24       	eor	r14, r14
 c58:	ff 24       	eor	r15, r15
 c5a:	87 01       	movw	r16, r14
 c5c:	05 c0       	rjmp	.+10     	; 0xc68 <__pack_f+0x4a>
 c5e:	e1 14       	cp	r14, r1
 c60:	f1 04       	cpc	r15, r1
 c62:	01 05       	cpc	r16, r1
 c64:	11 05       	cpc	r17, r1
 c66:	19 f4       	brne	.+6      	; 0xc6e <__pack_f+0x50>
 c68:	e0 e0       	ldi	r30, 0x00	; 0
 c6a:	f0 e0       	ldi	r31, 0x00	; 0
 c6c:	96 c0       	rjmp	.+300    	; 0xd9a <__pack_f+0x17c>
 c6e:	62 81       	ldd	r22, Z+2	; 0x02
 c70:	73 81       	ldd	r23, Z+3	; 0x03
 c72:	9f ef       	ldi	r25, 0xFF	; 255
 c74:	62 38       	cpi	r22, 0x82	; 130
 c76:	79 07       	cpc	r23, r25
 c78:	0c f0       	brlt	.+2      	; 0xc7c <__pack_f+0x5e>
 c7a:	5b c0       	rjmp	.+182    	; 0xd32 <__pack_f+0x114>
 c7c:	22 e8       	ldi	r18, 0x82	; 130
 c7e:	3f ef       	ldi	r19, 0xFF	; 255
 c80:	26 1b       	sub	r18, r22
 c82:	37 0b       	sbc	r19, r23
 c84:	2a 31       	cpi	r18, 0x1A	; 26
 c86:	31 05       	cpc	r19, r1
 c88:	2c f0       	brlt	.+10     	; 0xc94 <__pack_f+0x76>
 c8a:	20 e0       	ldi	r18, 0x00	; 0
 c8c:	30 e0       	ldi	r19, 0x00	; 0
 c8e:	40 e0       	ldi	r20, 0x00	; 0
 c90:	50 e0       	ldi	r21, 0x00	; 0
 c92:	2a c0       	rjmp	.+84     	; 0xce8 <__pack_f+0xca>
 c94:	b8 01       	movw	r22, r16
 c96:	a7 01       	movw	r20, r14
 c98:	02 2e       	mov	r0, r18
 c9a:	04 c0       	rjmp	.+8      	; 0xca4 <__pack_f+0x86>
 c9c:	76 95       	lsr	r23
 c9e:	67 95       	ror	r22
 ca0:	57 95       	ror	r21
 ca2:	47 95       	ror	r20
 ca4:	0a 94       	dec	r0
 ca6:	d2 f7       	brpl	.-12     	; 0xc9c <__pack_f+0x7e>
 ca8:	81 e0       	ldi	r24, 0x01	; 1
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	a0 e0       	ldi	r26, 0x00	; 0
 cae:	b0 e0       	ldi	r27, 0x00	; 0
 cb0:	04 c0       	rjmp	.+8      	; 0xcba <__pack_f+0x9c>
 cb2:	88 0f       	add	r24, r24
 cb4:	99 1f       	adc	r25, r25
 cb6:	aa 1f       	adc	r26, r26
 cb8:	bb 1f       	adc	r27, r27
 cba:	2a 95       	dec	r18
 cbc:	d2 f7       	brpl	.-12     	; 0xcb2 <__pack_f+0x94>
 cbe:	01 97       	sbiw	r24, 0x01	; 1
 cc0:	a1 09       	sbc	r26, r1
 cc2:	b1 09       	sbc	r27, r1
 cc4:	8e 21       	and	r24, r14
 cc6:	9f 21       	and	r25, r15
 cc8:	a0 23       	and	r26, r16
 cca:	b1 23       	and	r27, r17
 ccc:	00 97       	sbiw	r24, 0x00	; 0
 cce:	a1 05       	cpc	r26, r1
 cd0:	b1 05       	cpc	r27, r1
 cd2:	21 f0       	breq	.+8      	; 0xcdc <__pack_f+0xbe>
 cd4:	81 e0       	ldi	r24, 0x01	; 1
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	a0 e0       	ldi	r26, 0x00	; 0
 cda:	b0 e0       	ldi	r27, 0x00	; 0
 cdc:	9a 01       	movw	r18, r20
 cde:	ab 01       	movw	r20, r22
 ce0:	28 2b       	or	r18, r24
 ce2:	39 2b       	or	r19, r25
 ce4:	4a 2b       	or	r20, r26
 ce6:	5b 2b       	or	r21, r27
 ce8:	da 01       	movw	r26, r20
 cea:	c9 01       	movw	r24, r18
 cec:	8f 77       	andi	r24, 0x7F	; 127
 cee:	90 70       	andi	r25, 0x00	; 0
 cf0:	a0 70       	andi	r26, 0x00	; 0
 cf2:	b0 70       	andi	r27, 0x00	; 0
 cf4:	80 34       	cpi	r24, 0x40	; 64
 cf6:	91 05       	cpc	r25, r1
 cf8:	a1 05       	cpc	r26, r1
 cfa:	b1 05       	cpc	r27, r1
 cfc:	39 f4       	brne	.+14     	; 0xd0c <__pack_f+0xee>
 cfe:	27 ff       	sbrs	r18, 7
 d00:	09 c0       	rjmp	.+18     	; 0xd14 <__pack_f+0xf6>
 d02:	20 5c       	subi	r18, 0xC0	; 192
 d04:	3f 4f       	sbci	r19, 0xFF	; 255
 d06:	4f 4f       	sbci	r20, 0xFF	; 255
 d08:	5f 4f       	sbci	r21, 0xFF	; 255
 d0a:	04 c0       	rjmp	.+8      	; 0xd14 <__pack_f+0xf6>
 d0c:	21 5c       	subi	r18, 0xC1	; 193
 d0e:	3f 4f       	sbci	r19, 0xFF	; 255
 d10:	4f 4f       	sbci	r20, 0xFF	; 255
 d12:	5f 4f       	sbci	r21, 0xFF	; 255
 d14:	e0 e0       	ldi	r30, 0x00	; 0
 d16:	f0 e0       	ldi	r31, 0x00	; 0
 d18:	20 30       	cpi	r18, 0x00	; 0
 d1a:	a0 e0       	ldi	r26, 0x00	; 0
 d1c:	3a 07       	cpc	r19, r26
 d1e:	a0 e0       	ldi	r26, 0x00	; 0
 d20:	4a 07       	cpc	r20, r26
 d22:	a0 e4       	ldi	r26, 0x40	; 64
 d24:	5a 07       	cpc	r21, r26
 d26:	10 f0       	brcs	.+4      	; 0xd2c <__pack_f+0x10e>
 d28:	e1 e0       	ldi	r30, 0x01	; 1
 d2a:	f0 e0       	ldi	r31, 0x00	; 0
 d2c:	79 01       	movw	r14, r18
 d2e:	8a 01       	movw	r16, r20
 d30:	27 c0       	rjmp	.+78     	; 0xd80 <__pack_f+0x162>
 d32:	60 38       	cpi	r22, 0x80	; 128
 d34:	71 05       	cpc	r23, r1
 d36:	64 f5       	brge	.+88     	; 0xd90 <__pack_f+0x172>
 d38:	fb 01       	movw	r30, r22
 d3a:	e1 58       	subi	r30, 0x81	; 129
 d3c:	ff 4f       	sbci	r31, 0xFF	; 255
 d3e:	d8 01       	movw	r26, r16
 d40:	c7 01       	movw	r24, r14
 d42:	8f 77       	andi	r24, 0x7F	; 127
 d44:	90 70       	andi	r25, 0x00	; 0
 d46:	a0 70       	andi	r26, 0x00	; 0
 d48:	b0 70       	andi	r27, 0x00	; 0
 d4a:	80 34       	cpi	r24, 0x40	; 64
 d4c:	91 05       	cpc	r25, r1
 d4e:	a1 05       	cpc	r26, r1
 d50:	b1 05       	cpc	r27, r1
 d52:	39 f4       	brne	.+14     	; 0xd62 <__pack_f+0x144>
 d54:	e7 fe       	sbrs	r14, 7
 d56:	0d c0       	rjmp	.+26     	; 0xd72 <__pack_f+0x154>
 d58:	80 e4       	ldi	r24, 0x40	; 64
 d5a:	90 e0       	ldi	r25, 0x00	; 0
 d5c:	a0 e0       	ldi	r26, 0x00	; 0
 d5e:	b0 e0       	ldi	r27, 0x00	; 0
 d60:	04 c0       	rjmp	.+8      	; 0xd6a <__pack_f+0x14c>
 d62:	8f e3       	ldi	r24, 0x3F	; 63
 d64:	90 e0       	ldi	r25, 0x00	; 0
 d66:	a0 e0       	ldi	r26, 0x00	; 0
 d68:	b0 e0       	ldi	r27, 0x00	; 0
 d6a:	e8 0e       	add	r14, r24
 d6c:	f9 1e       	adc	r15, r25
 d6e:	0a 1f       	adc	r16, r26
 d70:	1b 1f       	adc	r17, r27
 d72:	17 ff       	sbrs	r17, 7
 d74:	05 c0       	rjmp	.+10     	; 0xd80 <__pack_f+0x162>
 d76:	16 95       	lsr	r17
 d78:	07 95       	ror	r16
 d7a:	f7 94       	ror	r15
 d7c:	e7 94       	ror	r14
 d7e:	31 96       	adiw	r30, 0x01	; 1
 d80:	87 e0       	ldi	r24, 0x07	; 7
 d82:	16 95       	lsr	r17
 d84:	07 95       	ror	r16
 d86:	f7 94       	ror	r15
 d88:	e7 94       	ror	r14
 d8a:	8a 95       	dec	r24
 d8c:	d1 f7       	brne	.-12     	; 0xd82 <__pack_f+0x164>
 d8e:	05 c0       	rjmp	.+10     	; 0xd9a <__pack_f+0x17c>
 d90:	ee 24       	eor	r14, r14
 d92:	ff 24       	eor	r15, r15
 d94:	87 01       	movw	r16, r14
 d96:	ef ef       	ldi	r30, 0xFF	; 255
 d98:	f0 e0       	ldi	r31, 0x00	; 0
 d9a:	6e 2f       	mov	r22, r30
 d9c:	67 95       	ror	r22
 d9e:	66 27       	eor	r22, r22
 da0:	67 95       	ror	r22
 da2:	90 2f       	mov	r25, r16
 da4:	9f 77       	andi	r25, 0x7F	; 127
 da6:	d7 94       	ror	r13
 da8:	dd 24       	eor	r13, r13
 daa:	d7 94       	ror	r13
 dac:	8e 2f       	mov	r24, r30
 dae:	86 95       	lsr	r24
 db0:	49 2f       	mov	r20, r25
 db2:	46 2b       	or	r20, r22
 db4:	58 2f       	mov	r21, r24
 db6:	5d 29       	or	r21, r13
 db8:	b7 01       	movw	r22, r14
 dba:	ca 01       	movw	r24, r20
 dbc:	1f 91       	pop	r17
 dbe:	0f 91       	pop	r16
 dc0:	ff 90       	pop	r15
 dc2:	ef 90       	pop	r14
 dc4:	df 90       	pop	r13
 dc6:	08 95       	ret

00000dc8 <__unpack_f>:
 dc8:	fc 01       	movw	r30, r24
 dca:	db 01       	movw	r26, r22
 dcc:	40 81       	ld	r20, Z
 dce:	51 81       	ldd	r21, Z+1	; 0x01
 dd0:	22 81       	ldd	r18, Z+2	; 0x02
 dd2:	62 2f       	mov	r22, r18
 dd4:	6f 77       	andi	r22, 0x7F	; 127
 dd6:	70 e0       	ldi	r23, 0x00	; 0
 dd8:	22 1f       	adc	r18, r18
 dda:	22 27       	eor	r18, r18
 ddc:	22 1f       	adc	r18, r18
 dde:	93 81       	ldd	r25, Z+3	; 0x03
 de0:	89 2f       	mov	r24, r25
 de2:	88 0f       	add	r24, r24
 de4:	82 2b       	or	r24, r18
 de6:	28 2f       	mov	r18, r24
 de8:	30 e0       	ldi	r19, 0x00	; 0
 dea:	99 1f       	adc	r25, r25
 dec:	99 27       	eor	r25, r25
 dee:	99 1f       	adc	r25, r25
 df0:	11 96       	adiw	r26, 0x01	; 1
 df2:	9c 93       	st	X, r25
 df4:	11 97       	sbiw	r26, 0x01	; 1
 df6:	21 15       	cp	r18, r1
 df8:	31 05       	cpc	r19, r1
 dfa:	a9 f5       	brne	.+106    	; 0xe66 <__unpack_f+0x9e>
 dfc:	41 15       	cp	r20, r1
 dfe:	51 05       	cpc	r21, r1
 e00:	61 05       	cpc	r22, r1
 e02:	71 05       	cpc	r23, r1
 e04:	11 f4       	brne	.+4      	; 0xe0a <__unpack_f+0x42>
 e06:	82 e0       	ldi	r24, 0x02	; 2
 e08:	37 c0       	rjmp	.+110    	; 0xe78 <__unpack_f+0xb0>
 e0a:	82 e8       	ldi	r24, 0x82	; 130
 e0c:	9f ef       	ldi	r25, 0xFF	; 255
 e0e:	13 96       	adiw	r26, 0x03	; 3
 e10:	9c 93       	st	X, r25
 e12:	8e 93       	st	-X, r24
 e14:	12 97       	sbiw	r26, 0x02	; 2
 e16:	9a 01       	movw	r18, r20
 e18:	ab 01       	movw	r20, r22
 e1a:	67 e0       	ldi	r22, 0x07	; 7
 e1c:	22 0f       	add	r18, r18
 e1e:	33 1f       	adc	r19, r19
 e20:	44 1f       	adc	r20, r20
 e22:	55 1f       	adc	r21, r21
 e24:	6a 95       	dec	r22
 e26:	d1 f7       	brne	.-12     	; 0xe1c <__unpack_f+0x54>
 e28:	83 e0       	ldi	r24, 0x03	; 3
 e2a:	8c 93       	st	X, r24
 e2c:	0d c0       	rjmp	.+26     	; 0xe48 <__unpack_f+0x80>
 e2e:	22 0f       	add	r18, r18
 e30:	33 1f       	adc	r19, r19
 e32:	44 1f       	adc	r20, r20
 e34:	55 1f       	adc	r21, r21
 e36:	12 96       	adiw	r26, 0x02	; 2
 e38:	8d 91       	ld	r24, X+
 e3a:	9c 91       	ld	r25, X
 e3c:	13 97       	sbiw	r26, 0x03	; 3
 e3e:	01 97       	sbiw	r24, 0x01	; 1
 e40:	13 96       	adiw	r26, 0x03	; 3
 e42:	9c 93       	st	X, r25
 e44:	8e 93       	st	-X, r24
 e46:	12 97       	sbiw	r26, 0x02	; 2
 e48:	20 30       	cpi	r18, 0x00	; 0
 e4a:	80 e0       	ldi	r24, 0x00	; 0
 e4c:	38 07       	cpc	r19, r24
 e4e:	80 e0       	ldi	r24, 0x00	; 0
 e50:	48 07       	cpc	r20, r24
 e52:	80 e4       	ldi	r24, 0x40	; 64
 e54:	58 07       	cpc	r21, r24
 e56:	58 f3       	brcs	.-42     	; 0xe2e <__unpack_f+0x66>
 e58:	14 96       	adiw	r26, 0x04	; 4
 e5a:	2d 93       	st	X+, r18
 e5c:	3d 93       	st	X+, r19
 e5e:	4d 93       	st	X+, r20
 e60:	5c 93       	st	X, r21
 e62:	17 97       	sbiw	r26, 0x07	; 7
 e64:	08 95       	ret
 e66:	2f 3f       	cpi	r18, 0xFF	; 255
 e68:	31 05       	cpc	r19, r1
 e6a:	79 f4       	brne	.+30     	; 0xe8a <__unpack_f+0xc2>
 e6c:	41 15       	cp	r20, r1
 e6e:	51 05       	cpc	r21, r1
 e70:	61 05       	cpc	r22, r1
 e72:	71 05       	cpc	r23, r1
 e74:	19 f4       	brne	.+6      	; 0xe7c <__unpack_f+0xb4>
 e76:	84 e0       	ldi	r24, 0x04	; 4
 e78:	8c 93       	st	X, r24
 e7a:	08 95       	ret
 e7c:	64 ff       	sbrs	r22, 4
 e7e:	03 c0       	rjmp	.+6      	; 0xe86 <__unpack_f+0xbe>
 e80:	81 e0       	ldi	r24, 0x01	; 1
 e82:	8c 93       	st	X, r24
 e84:	12 c0       	rjmp	.+36     	; 0xeaa <__unpack_f+0xe2>
 e86:	1c 92       	st	X, r1
 e88:	10 c0       	rjmp	.+32     	; 0xeaa <__unpack_f+0xe2>
 e8a:	2f 57       	subi	r18, 0x7F	; 127
 e8c:	30 40       	sbci	r19, 0x00	; 0
 e8e:	13 96       	adiw	r26, 0x03	; 3
 e90:	3c 93       	st	X, r19
 e92:	2e 93       	st	-X, r18
 e94:	12 97       	sbiw	r26, 0x02	; 2
 e96:	83 e0       	ldi	r24, 0x03	; 3
 e98:	8c 93       	st	X, r24
 e9a:	87 e0       	ldi	r24, 0x07	; 7
 e9c:	44 0f       	add	r20, r20
 e9e:	55 1f       	adc	r21, r21
 ea0:	66 1f       	adc	r22, r22
 ea2:	77 1f       	adc	r23, r23
 ea4:	8a 95       	dec	r24
 ea6:	d1 f7       	brne	.-12     	; 0xe9c <__unpack_f+0xd4>
 ea8:	70 64       	ori	r23, 0x40	; 64
 eaa:	14 96       	adiw	r26, 0x04	; 4
 eac:	4d 93       	st	X+, r20
 eae:	5d 93       	st	X+, r21
 eb0:	6d 93       	st	X+, r22
 eb2:	7c 93       	st	X, r23
 eb4:	17 97       	sbiw	r26, 0x07	; 7
 eb6:	08 95       	ret

00000eb8 <__fpcmp_parts_f>:
 eb8:	1f 93       	push	r17
 eba:	dc 01       	movw	r26, r24
 ebc:	fb 01       	movw	r30, r22
 ebe:	9c 91       	ld	r25, X
 ec0:	92 30       	cpi	r25, 0x02	; 2
 ec2:	08 f4       	brcc	.+2      	; 0xec6 <__fpcmp_parts_f+0xe>
 ec4:	47 c0       	rjmp	.+142    	; 0xf54 <__fpcmp_parts_f+0x9c>
 ec6:	80 81       	ld	r24, Z
 ec8:	82 30       	cpi	r24, 0x02	; 2
 eca:	08 f4       	brcc	.+2      	; 0xece <__fpcmp_parts_f+0x16>
 ecc:	43 c0       	rjmp	.+134    	; 0xf54 <__fpcmp_parts_f+0x9c>
 ece:	94 30       	cpi	r25, 0x04	; 4
 ed0:	51 f4       	brne	.+20     	; 0xee6 <__fpcmp_parts_f+0x2e>
 ed2:	11 96       	adiw	r26, 0x01	; 1
 ed4:	1c 91       	ld	r17, X
 ed6:	84 30       	cpi	r24, 0x04	; 4
 ed8:	99 f5       	brne	.+102    	; 0xf40 <__fpcmp_parts_f+0x88>
 eda:	81 81       	ldd	r24, Z+1	; 0x01
 edc:	68 2f       	mov	r22, r24
 ede:	70 e0       	ldi	r23, 0x00	; 0
 ee0:	61 1b       	sub	r22, r17
 ee2:	71 09       	sbc	r23, r1
 ee4:	3f c0       	rjmp	.+126    	; 0xf64 <__fpcmp_parts_f+0xac>
 ee6:	84 30       	cpi	r24, 0x04	; 4
 ee8:	21 f0       	breq	.+8      	; 0xef2 <__fpcmp_parts_f+0x3a>
 eea:	92 30       	cpi	r25, 0x02	; 2
 eec:	31 f4       	brne	.+12     	; 0xefa <__fpcmp_parts_f+0x42>
 eee:	82 30       	cpi	r24, 0x02	; 2
 ef0:	b9 f1       	breq	.+110    	; 0xf60 <__fpcmp_parts_f+0xa8>
 ef2:	81 81       	ldd	r24, Z+1	; 0x01
 ef4:	88 23       	and	r24, r24
 ef6:	89 f1       	breq	.+98     	; 0xf5a <__fpcmp_parts_f+0xa2>
 ef8:	2d c0       	rjmp	.+90     	; 0xf54 <__fpcmp_parts_f+0x9c>
 efa:	11 96       	adiw	r26, 0x01	; 1
 efc:	1c 91       	ld	r17, X
 efe:	11 97       	sbiw	r26, 0x01	; 1
 f00:	82 30       	cpi	r24, 0x02	; 2
 f02:	f1 f0       	breq	.+60     	; 0xf40 <__fpcmp_parts_f+0x88>
 f04:	81 81       	ldd	r24, Z+1	; 0x01
 f06:	18 17       	cp	r17, r24
 f08:	d9 f4       	brne	.+54     	; 0xf40 <__fpcmp_parts_f+0x88>
 f0a:	12 96       	adiw	r26, 0x02	; 2
 f0c:	2d 91       	ld	r18, X+
 f0e:	3c 91       	ld	r19, X
 f10:	13 97       	sbiw	r26, 0x03	; 3
 f12:	82 81       	ldd	r24, Z+2	; 0x02
 f14:	93 81       	ldd	r25, Z+3	; 0x03
 f16:	82 17       	cp	r24, r18
 f18:	93 07       	cpc	r25, r19
 f1a:	94 f0       	brlt	.+36     	; 0xf40 <__fpcmp_parts_f+0x88>
 f1c:	28 17       	cp	r18, r24
 f1e:	39 07       	cpc	r19, r25
 f20:	bc f0       	brlt	.+46     	; 0xf50 <__fpcmp_parts_f+0x98>
 f22:	14 96       	adiw	r26, 0x04	; 4
 f24:	8d 91       	ld	r24, X+
 f26:	9d 91       	ld	r25, X+
 f28:	0d 90       	ld	r0, X+
 f2a:	bc 91       	ld	r27, X
 f2c:	a0 2d       	mov	r26, r0
 f2e:	24 81       	ldd	r18, Z+4	; 0x04
 f30:	35 81       	ldd	r19, Z+5	; 0x05
 f32:	46 81       	ldd	r20, Z+6	; 0x06
 f34:	57 81       	ldd	r21, Z+7	; 0x07
 f36:	28 17       	cp	r18, r24
 f38:	39 07       	cpc	r19, r25
 f3a:	4a 07       	cpc	r20, r26
 f3c:	5b 07       	cpc	r21, r27
 f3e:	18 f4       	brcc	.+6      	; 0xf46 <__fpcmp_parts_f+0x8e>
 f40:	11 23       	and	r17, r17
 f42:	41 f0       	breq	.+16     	; 0xf54 <__fpcmp_parts_f+0x9c>
 f44:	0a c0       	rjmp	.+20     	; 0xf5a <__fpcmp_parts_f+0xa2>
 f46:	82 17       	cp	r24, r18
 f48:	93 07       	cpc	r25, r19
 f4a:	a4 07       	cpc	r26, r20
 f4c:	b5 07       	cpc	r27, r21
 f4e:	40 f4       	brcc	.+16     	; 0xf60 <__fpcmp_parts_f+0xa8>
 f50:	11 23       	and	r17, r17
 f52:	19 f0       	breq	.+6      	; 0xf5a <__fpcmp_parts_f+0xa2>
 f54:	61 e0       	ldi	r22, 0x01	; 1
 f56:	70 e0       	ldi	r23, 0x00	; 0
 f58:	05 c0       	rjmp	.+10     	; 0xf64 <__fpcmp_parts_f+0xac>
 f5a:	6f ef       	ldi	r22, 0xFF	; 255
 f5c:	7f ef       	ldi	r23, 0xFF	; 255
 f5e:	02 c0       	rjmp	.+4      	; 0xf64 <__fpcmp_parts_f+0xac>
 f60:	60 e0       	ldi	r22, 0x00	; 0
 f62:	70 e0       	ldi	r23, 0x00	; 0
 f64:	cb 01       	movw	r24, r22
 f66:	1f 91       	pop	r17
 f68:	08 95       	ret

00000f6a <__prologue_saves__>:
 f6a:	2f 92       	push	r2
 f6c:	3f 92       	push	r3
 f6e:	4f 92       	push	r4
 f70:	5f 92       	push	r5
 f72:	6f 92       	push	r6
 f74:	7f 92       	push	r7
 f76:	8f 92       	push	r8
 f78:	9f 92       	push	r9
 f7a:	af 92       	push	r10
 f7c:	bf 92       	push	r11
 f7e:	cf 92       	push	r12
 f80:	df 92       	push	r13
 f82:	ef 92       	push	r14
 f84:	ff 92       	push	r15
 f86:	0f 93       	push	r16
 f88:	1f 93       	push	r17
 f8a:	cf 93       	push	r28
 f8c:	df 93       	push	r29
 f8e:	cd b7       	in	r28, 0x3d	; 61
 f90:	de b7       	in	r29, 0x3e	; 62
 f92:	ca 1b       	sub	r28, r26
 f94:	db 0b       	sbc	r29, r27
 f96:	0f b6       	in	r0, 0x3f	; 63
 f98:	f8 94       	cli
 f9a:	de bf       	out	0x3e, r29	; 62
 f9c:	0f be       	out	0x3f, r0	; 63
 f9e:	cd bf       	out	0x3d, r28	; 61
 fa0:	09 94       	ijmp

00000fa2 <__epilogue_restores__>:
 fa2:	2a 88       	ldd	r2, Y+18	; 0x12
 fa4:	39 88       	ldd	r3, Y+17	; 0x11
 fa6:	48 88       	ldd	r4, Y+16	; 0x10
 fa8:	5f 84       	ldd	r5, Y+15	; 0x0f
 faa:	6e 84       	ldd	r6, Y+14	; 0x0e
 fac:	7d 84       	ldd	r7, Y+13	; 0x0d
 fae:	8c 84       	ldd	r8, Y+12	; 0x0c
 fb0:	9b 84       	ldd	r9, Y+11	; 0x0b
 fb2:	aa 84       	ldd	r10, Y+10	; 0x0a
 fb4:	b9 84       	ldd	r11, Y+9	; 0x09
 fb6:	c8 84       	ldd	r12, Y+8	; 0x08
 fb8:	df 80       	ldd	r13, Y+7	; 0x07
 fba:	ee 80       	ldd	r14, Y+6	; 0x06
 fbc:	fd 80       	ldd	r15, Y+5	; 0x05
 fbe:	0c 81       	ldd	r16, Y+4	; 0x04
 fc0:	1b 81       	ldd	r17, Y+3	; 0x03
 fc2:	aa 81       	ldd	r26, Y+2	; 0x02
 fc4:	b9 81       	ldd	r27, Y+1	; 0x01
 fc6:	ce 0f       	add	r28, r30
 fc8:	d1 1d       	adc	r29, r1
 fca:	0f b6       	in	r0, 0x3f	; 63
 fcc:	f8 94       	cli
 fce:	de bf       	out	0x3e, r29	; 62
 fd0:	0f be       	out	0x3f, r0	; 63
 fd2:	cd bf       	out	0x3d, r28	; 61
 fd4:	ed 01       	movw	r28, r26
 fd6:	08 95       	ret

00000fd8 <_exit>:
 fd8:	f8 94       	cli

00000fda <__stop_program>:
 fda:	ff cf       	rjmp	.-2      	; 0xfda <__stop_program>
